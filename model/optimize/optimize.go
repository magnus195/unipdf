//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package optimize ;import (_cg "bytes";_d "crypto/md5";_da "errors";_f "fmt";
	_b "github.com/magnus195/unipdf/v3/common";
	_bg "github.com/magnus195/unipdf/v3/contentstream";
	_dfb "github.com/magnus195/unipdf/v3/core";
	_be "github.com/magnus195/unipdf/v3/extractor";
	_a "github.com/magnus195/unipdf/v3/internal/imageutil";
	_gd "github.com/magnus195/unipdf/v3/internal/textencoding";
	_cc "github.com/magnus195/unipdf/v3/model";_cb "github.com/unidoc/unitype";_c "golang.org/x/image/draw";_g "math";_df "strings";);func _cgff (_ccdff _dfb .PdfObject )(_fbde string ,_dgge []_dfb .PdfObject ){var _ecd _cg .Buffer ;
switch _gaeg :=_ccdff .(type ){case *_dfb .PdfIndirectObject :_dgge =append (_dgge ,_gaeg );_ccdff =_gaeg .PdfObject ;};switch _eed :=_ccdff .(type ){case *_dfb .PdfObjectStream :if _caddc ,_abdb :=_dfb .DecodeStream (_eed );_abdb ==nil {_ecd .Write (_caddc );
_dgge =append (_dgge ,_eed );};case *_dfb .PdfObjectArray :for _ ,_bbd :=range _eed .Elements (){switch _bfed :=_bbd .(type ){case *_dfb .PdfObjectStream :if _fcdd ,_cgd :=_dfb .DecodeStream (_bfed );_cgd ==nil {_ecd .Write (_fcdd );_dgge =append (_dgge ,_bfed );
};};};};return _ecd .String (),_dgge ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_ga *Chain )Optimize (objects []_dfb .PdfObject )(_ag []_dfb .PdfObject ,_gbb error ){_aga :=objects ;for _ ,_bb :=range _ga ._ef {_fc ,_gc :=_bb .Optimize (_aga );if _gc !=nil {_b .Log .Debug ("\u0045\u0052\u0052OR\u0020\u004f\u0070\u0074\u0069\u006d\u0069\u007a\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u002b\u0076",_gc );
continue ;};_aga =_fc ;};return _aga ,nil ;};func _db (_aff []*_dfb .PdfIndirectObject )map[string ][]string {_egfe :=map[string ][]string {};for _ ,_bbe :=range _aff {_abcf ,_gcd :=_dfb .GetDict (_bbe .PdfObject );if !_gcd {continue ;};_ceb :=_abcf .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_fdda :=_dfb .TraceToDirectObject (_ceb );_eggd :="";if _ade ,_bggg :=_fdda .(*_dfb .PdfObjectArray );_bggg {var _adb []string ;for _ ,_gca :=range _ade .Elements (){_ceg ,_ebe :=_dfbe (_gca );if _ebe !=nil {continue ;};_adb =append (_adb ,_ceg );};_eggd =_df .Join (_adb ,"\u0020");
};if _eebc ,_bac :=_fdda .(*_dfb .PdfObjectStream );_bac {_fbe ,_efg :=_dfb .DecodeStream (_eebc );if _efg !=nil {continue ;};_eggd =string (_fbe );};_aeb :=_bg .NewContentStreamParser (_eggd );_affg ,_eaca :=_aeb .Parse ();if _eaca !=nil {continue ;};
for _ ,_gggd :=range *_affg {_adc :=_gggd .Operand ;_caaa :=_gggd .Params ;switch _adc {case "\u0044\u006f":_cbc :=_caaa [0].String ();if _ ,_baf :=_egfe ["\u0058O\u0062\u006a\u0065\u0063\u0074"];!_baf {_egfe ["\u0058O\u0062\u006a\u0065\u0063\u0074"]=[]string {_cbc };
}else {_egfe ["\u0058O\u0062\u006a\u0065\u0063\u0074"]=append (_egfe ["\u0058O\u0062\u006a\u0065\u0063\u0074"],_cbc );};case "\u0054\u0066":_gfb :=_caaa [0].String ();if _ ,_gfg :=_egfe ["\u0046\u006f\u006e\u0074"];!_gfg {_egfe ["\u0046\u006f\u006e\u0074"]=[]string {_gfb };
}else {_egfe ["\u0046\u006f\u006e\u0074"]=append (_egfe ["\u0046\u006f\u006e\u0074"],_gfb );};case "\u0067\u0073":_fce :=_caaa [0].String ();if _ ,_ffd :=_egfe ["\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"];!_ffd {_egfe ["\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"]=[]string {_fce };
}else {_egfe ["\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"]=append (_egfe ["\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"],_fce );};};};};return _egfe ;};

// CombineDuplicateDirectObjects combines duplicated direct objects by its data hash.
// It implements interface model.Optimizer.
type CombineDuplicateDirectObjects struct{};

// Append appends optimizers to the chain.
func (_gb *Chain )Append (optimizers ..._cc .Optimizer ){_gb ._ef =append (_gb ._ef ,optimizers ...)};func _agea (_bfg *_dfb .PdfObjectStream ,_edd []rune ,_bba []_cb .GlyphIndex )error {_bfg ,_bbba :=_dfb .GetStream (_bfg );if !_bbba {_b .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _da .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_egg ,_eb :=_dfb .DecodeStream (_bfg );if _eb !=nil {_b .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_eb );
return _eb ;};_gad ,_eb :=_cb .Parse (_cg .NewReader (_egg ));if _eb !=nil {_b .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_bfg .Stream ));
return _eb ;};_ffc :=_bba ;if len (_edd )> 0{_eac :=_gad .LookupRunes (_edd );_ffc =append (_ffc ,_eac ...);};_gad ,_eb =_gad .SubsetKeepIndices (_ffc );if _eb !=nil {_b .Log .Debug ("\u0045R\u0052\u004f\u0052\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069n\u0067 \u0066\u006f\u006e\u0074\u003a\u0020\u0025v",_eb );
return _eb ;};var _gfd _cg .Buffer ;_eb =_gad .Write (&_gfd );if _eb !=nil {_b .Log .Debug ("\u0045\u0052\u0052\u004fR \u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_eb );return _eb ;};if _gfd .Len ()> len (_egg ){_b .Log .Debug ("\u0052\u0065-\u0077\u0072\u0069\u0074\u0074\u0065\u006e\u0020\u0066\u006f\u006e\u0074\u0020\u0069\u0073\u0020\u006c\u0061\u0072\u0067\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u006f\u0072\u0069\u0067\u0069\u006e\u0061\u006c\u0020\u002d\u0020\u0073\u006b\u0069\u0070");
return nil ;};_cecb ,_eb :=_dfb .MakeStream (_gfd .Bytes (),_dfb .NewFlateEncoder ());if _eb !=nil {_b .Log .Debug ("\u0045\u0052\u0052\u004fR \u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_eb );return _eb ;
};*_bfg =*_cecb ;_bfg .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_dfb .MakeInteger (int64 (_gfd .Len ())));return nil ;};func _dfbe (_bad _dfb .PdfObject )(string ,error ){_babe :=_dfb .TraceToDirectObject (_bad );switch _gecb :=_babe .(type ){case *_dfb .PdfObjectString :return _gecb .Str (),nil ;
case *_dfb .PdfObjectStream :_gbg ,_fcd :=_dfb .DecodeStream (_gecb );if _fcd !=nil {return "",_fcd ;};return string (_gbg ),nil ;};return "",_f .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_babe );
};func _aeeb (_gecd _dfb .PdfObject ,_gfgc map[_dfb .PdfObject ]struct{})error {if _cdgb ,_def :=_gecd .(*_dfb .PdfIndirectObject );_def {_gfgc [_gecd ]=struct{}{};_bffa :=_aeeb (_cdgb .PdfObject ,_gfgc );if _bffa !=nil {return _bffa ;};return nil ;};if _dece ,_cff :=_gecd .(*_dfb .PdfObjectStream );
_cff {_gfgc [_dece ]=struct{}{};_ebf :=_aeeb (_dece .PdfObjectDictionary ,_gfgc );if _ebf !=nil {return _ebf ;};return nil ;};if _bca ,_aaf :=_gecd .(*_dfb .PdfObjectDictionary );_aaf {for _ ,_ega :=range _bca .Keys (){_dcea :=_bca .Get (_ega );_ =_dcea ;
if _ace ,_acg :=_dcea .(*_dfb .PdfObjectReference );_acg {_dcea =_ace .Resolve ();_bca .Set (_ega ,_dcea );};if _ega !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _edg :=_aeeb (_dcea ,_gfgc );_edg !=nil {return _edg ;};};};return nil ;};if _faaa ,_abfb :=_gecd .(*_dfb .PdfObjectArray );
_abfb {if _faaa ==nil {return _da .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};for _cad ,_ecgg :=range _faaa .Elements (){if _geg ,_gada :=_ecgg .(*_dfb .PdfObjectReference );_gada {_ecgg =_geg .Resolve ();_faaa .Set (_cad ,_ecgg );
};if _bggf :=_aeeb (_ecgg ,_gfgc );_bggf !=nil {return _bggf ;};};return nil ;};return nil ;};func _bag (_ebc _dfb .PdfObject )[]content {if _ebc ==nil {return nil ;};_cce ,_cfa :=_dfb .GetArray (_ebc );if !_cfa {_b .Log .Debug ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
return nil ;};var _adf []content ;for _ ,_gbba :=range _cce .Elements (){_ecf ,_dffc :=_dfb .GetDict (_gbba );if !_dffc {_b .Log .Debug ("I\u0067\u006e\u006f\u0072\u0069\u006eg\u0020\u006e\u006f\u006e\u002d\u0064i\u0063\u0074\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u0069\u006e\u0020\u0041\u006e\u006e\u006ft\u0073");
continue ;};_gbf ,_dffc :=_dfb .GetDict (_ecf .Get ("\u0041\u0050"));if !_dffc {_b .Log .Debug ("\u004e\u006f\u0020\u0041P \u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067");continue ;};_egf :=_dfb .TraceToDirectObject (_gbf .Get ("\u004e"));
if _egf ==nil {_b .Log .Debug ("N\u006f\u0020\u004e\u0020en\u0074r\u0079\u0020\u002d\u0020\u0073k\u0069\u0070\u0070\u0069\u006e\u0067");continue ;};var _dee *_dfb .PdfObjectStream ;switch _baa :=_egf .(type ){case *_dfb .PdfObjectDictionary :_baga ,_beg :=_dfb .GetName (_ecf .Get ("\u0041\u0053"));
if !_beg {_b .Log .Debug ("\u004e\u006f\u0020\u0041S \u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067");continue ;};_dee ,_beg =_dfb .GetStream (_baa .Get (*_baga ));if !_beg {_b .Log .Debug ("\u0046o\u0072\u006d\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u002d \u0073\u006b\u0069\u0070\u0070\u0069\u006eg");
continue ;};case *_dfb .PdfObjectStream :_dee =_baa ;};if _dee ==nil {_b .Log .Debug ("\u0046\u006f\u0072m\u0020\u006e\u006f\u0074 \u0066\u006f\u0075\u006e\u0064\u0020\u0028n\u0069\u006c\u0029\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
continue ;};_faac ,_gff :=_cc .NewXObjectFormFromStream (_dee );if _gff !=nil {_b .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u003a\u0020%\u0076\u0020\u002d\u0020\u0069\u0067\u006eo\u0072\u0069\u006e\u0067",_gff );
continue ;};_bgee ,_gff :=_faac .GetContentStream ();if _gff !=nil {_b .Log .Debug ("E\u0072\u0072\u006f\u0072\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0063\u006fn\u0074\u0065\u006et\u0073:\u0020\u0025\u0076",_gff );continue ;};_adf =append (_adf ,content {_fda :string (_bgee ),_dcc :_faac .Resources });
};return _adf ;};func _bab (_cgg []_dfb .PdfObject )(map[_dfb .PdfObject ]struct{},error ){_ebcd :=_dadg (_cgg );_cba :=_ebcd ._bgcb ;_aae :=make (map[_dfb .PdfObject ]struct{});_egd :=_db (_cba );for _ ,_dffcb :=range _cba {_cdf ,_ada :=_dfb .GetDict (_dffcb .PdfObject );
if !_ada {continue ;};_fdag ,_ada :=_dfb .GetDict (_cdf .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));if !_ada {continue ;};_gdad :=_egd ["\u0058O\u0062\u006a\u0065\u0063\u0074"];_fgd ,_ada :=_dfb .GetDict (_fdag .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
if _ada {_bdf :=_gea (_fgd );for _ ,_ebd :=range _bdf {if _fgdg (_ebd ,_gdad ){continue ;};_bbbf :=*_dfb .MakeName (_ebd );_bga :=_fgd .Get (_bbbf );_aae [_bga ]=struct{}{};_fgd .Remove (_bbbf );_ggc :=_aeeb (_bga ,_aae );if _ggc !=nil {_b .Log .Debug ("\u0066\u0061\u0069\u006ce\u0064\u0020\u0074\u006f\u0020\u0074\u0072\u0061\u0076\u0065r\u0073e\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0025\u0076",_bga );
};};};_add ,_ada :=_dfb .GetDict (_fdag .Get ("\u0046\u006f\u006e\u0074"));_cac :=_egd ["\u0046\u006f\u006e\u0074"];if _ada {_cag :=_gea (_add );for _ ,_dge :=range _cag {if _fgdg (_dge ,_cac ){continue ;};_bce :=*_dfb .MakeName (_dge );_eabe :=_add .Get (_bce );
_aae [_eabe ]=struct{}{};_add .Remove (_bce );_gce :=_aeeb (_eabe ,_aae );if _gce !=nil {_b .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074 %\u0076\u000a",_eabe );
};};};_cgab ,_ada :=_dfb .GetDict (_fdag .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"));if _ada {_ccaf :=_gea (_cgab );_gga :=_egd ["\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e"];for _ ,_gcc :=range _ccaf {if _fgdg (_gcc ,_gga ){continue ;};_gaf :=*_dfb .MakeName (_gcc );
_addd :=_cgab .Get (_gaf );_aae [_addd ]=struct{}{};_cgab .Remove (_gaf );_dgfa :=_aeeb (_addd ,_aae );if _dgfa !=nil {_b .Log .Debug ("\u0066\u0061i\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074 %\u0076\u000a",_addd );
};};};};return _aae ,nil ;};func _gea (_cae *_dfb .PdfObjectDictionary )[]string {_eaac :=[]string {};for _ ,_dba :=range _cae .Keys (){_eaac =append (_eaac ,_dba .String ());};return _eaac ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_ebb *CombineDuplicateStreams )Optimize (objects []_dfb .PdfObject )(_egb []_dfb .PdfObject ,_gae error ){_dacc :=make (map[_dfb .PdfObject ]_dfb .PdfObject );_aec :=make (map[_dfb .PdfObject ]struct{});_bcab :=make (map[string ][]*_dfb .PdfObjectStream );
for _ ,_edc :=range objects {if _ffaf ,_eca :=_edc .(*_dfb .PdfObjectStream );_eca {_dacgc :=_d .New ();_dacgc .Write (_ffaf .Stream );_dacgc .Write ([]byte (_ffaf .PdfObjectDictionary .WriteString ()));_gfdg :=string (_dacgc .Sum (nil ));_bcab [_gfdg ]=append (_bcab [_gfdg ],_ffaf );
};};for _ ,_ddeg :=range _bcab {if len (_ddeg )< 2{continue ;};_gced :=_ddeg [0];for _agag :=1;_agag < len (_ddeg );_agag ++{_gafa :=_ddeg [_agag ];_dacc [_gafa ]=_gced ;_aec [_gafa ]=struct{}{};};};_egb =make ([]_dfb .PdfObject ,0,len (objects )-len (_aec ));
for _ ,_fbcb :=range objects {if _ ,_egbb :=_aec [_fbcb ];_egbb {continue ;};_egb =append (_egb ,_fbcb );};_efec (_egb ,_dacc );return _egb ,nil ;};func _fgdg (_cfec string ,_bbce []string )bool {for _ ,_ffb :=range _bbce {if _cfec ==_ffb {return true ;
};};return false ;};func _efec (_aacc []_dfb .PdfObject ,_aca map[_dfb .PdfObject ]_dfb .PdfObject ){if len (_aca )==0{return ;};for _ebdbf ,_bcg :=range _aacc {if _eddc ,_accf :=_aca [_bcg ];_accf {_aacc [_ebdbf ]=_eddc ;continue ;};_aca [_bcg ]=_bcg ;
switch _adeg :=_bcg .(type ){case *_dfb .PdfObjectArray :_ccf :=make ([]_dfb .PdfObject ,_adeg .Len ());copy (_ccf ,_adeg .Elements ());_efec (_ccf ,_aca );for _dfbd ,_ccbg :=range _ccf {_adeg .Set (_dfbd ,_ccbg );};case *_dfb .PdfObjectStreams :_efec (_adeg .Elements (),_aca );
case *_dfb .PdfObjectStream :_bfbg :=[]_dfb .PdfObject {_adeg .PdfObjectDictionary };_efec (_bfbg ,_aca );_adeg .PdfObjectDictionary =_bfbg [0].(*_dfb .PdfObjectDictionary );case *_dfb .PdfObjectDictionary :_ccdf :=_adeg .Keys ();_fag :=make ([]_dfb .PdfObject ,len (_ccdf ));
for _cgb ,_eegd :=range _ccdf {_fag [_cgb ]=_adeg .Get (_eegd );};_efec (_fag ,_aca );for _afe ,_caacb :=range _ccdf {_adeg .Set (_caacb ,_fag [_afe ]);};case *_dfb .PdfIndirectObject :_aeg :=[]_dfb .PdfObject {_adeg .PdfObject };_efec (_aeg ,_aca );_adeg .PdfObject =_aeg [0];
};};};

// Optimize optimizes PDF objects to decrease PDF size.
func (_bgac *ImagePPI )Optimize (objects []_dfb .PdfObject )(_fgfa []_dfb .PdfObject ,_fec error ){if _bgac .ImageUpperPPI <=0{return objects ,nil ;};_bfe :=_ebdd (objects );if len (_bfe )==0{return objects ,nil ;};_cbb :=make (map[_dfb .PdfObject ]struct{});
for _ ,_eacf :=range _bfe {_bcfb :=_eacf .Stream .PdfObjectDictionary .Get ("\u0053\u004d\u0061s\u006b");_cbb [_bcfb ]=struct{}{};};_gadc :=make (map[*_dfb .PdfObjectStream ]*imageInfo );for _ ,_cfed :=range _bfe {_gadc [_cfed .Stream ]=_cfed ;};var _eabc *_dfb .PdfObjectDictionary ;
for _ ,_acdc :=range objects {if _efe ,_eff :=_dfb .GetDict (_acdc );_eabc ==nil &&_eff {if _gdadg ,_fcaa :=_dfb .GetName (_efe .Get ("\u0054\u0079\u0070\u0065"));_fcaa &&*_gdadg =="\u0043a\u0074\u0061\u006c\u006f\u0067"{_eabc =_efe ;};};};if _eabc ==nil {return objects ,nil ;
};_agaf ,_dged :=_dfb .GetDict (_eabc .Get ("\u0050\u0061\u0067e\u0073"));if !_dged {return objects ,nil ;};_cede ,_addg :=_dfb .GetArray (_agaf .Get ("\u004b\u0069\u0064\u0073"));if !_addg {return objects ,nil ;};for _ ,_acb :=range _cede .Elements (){_cegd :=make (map[string ]*imageInfo );
_fefa ,_fcgc :=_dfb .GetDict (_acb );if !_fcgc {continue ;};_fcae ,_ :=_cgff (_fefa .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if len (_fcae )==0{continue ;};_baabd ,_afag :=_dfb .GetDict (_fefa .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));
if !_afag {continue ;};_gcb ,_bdc :=_cc .NewPdfPageResourcesFromDict (_baabd );if _bdc !=nil {_b .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020-\u0020\u0069\u0067\u006e\u006fr\u0069\u006eg\u003a\u0020\u0025\u0076",_bdc );
continue ;};_dgc ,_bgaa :=_dfb .GetDict (_baabd .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074"));if !_bgaa {continue ;};_afd :=_dgc .Keys ();for _ ,_abg :=range _afd {if _cdef ,_gacc :=_dfb .GetStream (_dgc .Get (_abg ));_gacc {if _egce ,_bdfd :=_gadc [_cdef ];
_bdfd {_cegd [string (_abg )]=_egce ;};};};_gdf :=_bg .NewContentStreamParser (_fcae );_gbee ,_bdc :=_gdf .Parse ();if _bdc !=nil {_b .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_bdc );continue ;};_gcbf :=_bg .NewContentStreamProcessor (*_gbee );
_gcbf .AddHandler (_bg .HandlerConditionEnumAllOperands ,"",func (_cfc *_bg .ContentStreamOperation ,_cadfc _bg .GraphicsState ,_agca *_cc .PdfPageResources )error {switch _cfc .Operand {case "\u0044\u006f":if len (_cfc .Params )!=1{_b .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0044\u006f\u0020w\u0069\u0074\u0068\u0020\u006c\u0065\u006e\u0028\u0070\u0061ra\u006d\u0073\u0029 \u0021=\u0020\u0031");
return nil ;};_gge ,_bgaab :=_dfb .GetName (_cfc .Params [0]);if !_bgaab {_b .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0044\u006f\u0020\u0077\u0069\u0074\u0068\u0020\u006e\u006f\u006e\u0020\u004e\u0061\u006d\u0065\u0020p\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072");
return nil ;};if _dccdg ,_dbf :=_cegd [string (*_gge )];_dbf {_eef :=_cadfc .CTM .ScalingFactorX ();_abd :=_cadfc .CTM .ScalingFactorY ();_aece ,_gedf :=_eef /72.0,_abd /72.0;_gbcd ,_gdff :=float64 (_dccdg .Width )/_aece ,float64 (_dccdg .Height )/_gedf ;
if _aece ==0||_gedf ==0{_gbcd =72.0;_gdff =72.0;};_dccdg .PPI =_g .Max (_dccdg .PPI ,_gbcd );_dccdg .PPI =_g .Max (_dccdg .PPI ,_gdff );};};return nil ;});_bdc =_gcbf .Process (_gcb );if _bdc !=nil {_b .Log .Debug ("E\u0052\u0052\u004f\u0052 p\u0072o\u0063\u0065\u0073\u0073\u0069n\u0067\u003a\u0020\u0025\u002b\u0076",_bdc );
continue ;};};for _ ,_bcec :=range _bfe {if _ ,_eee :=_cbb [_bcec .Stream ];_eee {continue ;};if _bcec .PPI <=_bgac .ImageUpperPPI {continue ;};_edad ,_aaef :=_cc .NewXObjectImageFromStream (_bcec .Stream );if _aaef !=nil {_b .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_aaef );
continue ;};var _bgc imageModifications ;_bgc .Scale =_bgac .ImageUpperPPI /_bcec .PPI ;if _bcec .BitsPerComponent ==1&&_bcec .ColorComponents ==1{_cedbf :=_g .Round (_bcec .PPI /_bgac .ImageUpperPPI );_afc :=_a .NextPowerOf2 (uint (_cedbf ));if _a .InDelta (float64 (_afc ),1/_bgc .Scale ,0.3){_bgc .Scale =float64 (1)/float64 (_afc );
};if _ ,_abgf :=_edad .Filter .(*_dfb .JBIG2Encoder );!_abgf {_bgc .Encoding =_dfb .NewJBIG2Encoder ();};};if _aaef =_ebac (_edad ,_bgc );_aaef !=nil {_b .Log .Debug ("\u0045\u0072\u0072\u006f\u0072 \u0073\u0063\u0061\u006c\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u006be\u0065\u0070\u0020\u006f\u0072\u0069\u0067\u0069\u006e\u0061\u006c\u0020\u0069\u006d\u0061\u0067\u0065\u003a\u0020\u0025\u0073",_aaef );
continue ;};_bgc .Encoding =nil ;if _ddd ,_ecgd :=_dfb .GetStream (_bcec .Stream .PdfObjectDictionary .Get ("\u0053\u004d\u0061s\u006b"));_ecgd {_eegg ,_gaedf :=_cc .NewXObjectImageFromStream (_ddd );if _gaedf !=nil {_b .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_gaedf );
continue ;};if _gaedf =_ebac (_eegg ,_bgc );_gaedf !=nil {_b .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_gaedf );continue ;};};};return objects ,nil ;};type objectStructure struct{_bfcg *_dfb .PdfObjectDictionary ;_edcc *_dfb .PdfObjectDictionary ;
_bgcb []*_dfb .PdfIndirectObject ;};

// Options describes PDF optimization parameters.
type Options struct{CombineDuplicateStreams bool ;CombineDuplicateDirectObjects bool ;ImageUpperPPI float64 ;ImageQuality int ;UseObjectStreams bool ;CombineIdenticalIndirectObjects bool ;CompressStreams bool ;CleanFonts bool ;SubsetFonts bool ;CleanContentstream bool ;
CleanUnusedResources bool ;};

// CleanFonts cleans up embedded fonts, reducing font sizes.
type CleanFonts struct{

// Subset embedded fonts if encountered (if true).
// Otherwise attempts to reduce the font program.
Subset bool ;};func _bgd (_fg *_dfb .PdfObjectStream )error {_cd ,_de :=_dfb .DecodeStream (_fg );if _de !=nil {return _de ;};_agd :=_bg .NewContentStreamParser (string (_cd ));_ad ,_de :=_agd .Parse ();if _de !=nil {return _de ;};_ad =_age (_ad );_gdg :=_ad .Bytes ();
if len (_gdg )>=len (_cd ){return nil ;};_dg ,_de :=_dfb .MakeStream (_ad .Bytes (),_dfb .NewFlateEncoder ());if _de !=nil {return _de ;};_fg .Stream =_dg .Stream ;_fg .Merge (_dg .PdfObjectDictionary );return nil ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_cab *CombineIdenticalIndirectObjects )Optimize (objects []_dfb .PdfObject )(_adaf []_dfb .PdfObject ,_cde error ){_gbab (objects );_ddf :=make (map[_dfb .PdfObject ]_dfb .PdfObject );_bafd :=make (map[_dfb .PdfObject ]struct{});_gaed :=make (map[string ][]*_dfb .PdfIndirectObject );
for _ ,_bfd :=range objects {_fge ,_bdad :=_bfd .(*_dfb .PdfIndirectObject );if !_bdad {continue ;};if _fae ,_dag :=_fge .PdfObject .(*_dfb .PdfObjectDictionary );_dag {if _ebdb ,_gfda :=_fae .Get ("\u0054\u0079\u0070\u0065").(*_dfb .PdfObjectName );_gfda &&*_ebdb =="\u0050\u0061\u0067\u0065"{continue ;
};if _bbbe :=_fae .Keys ();len (_bbbe )==0{continue ;};_cfea :=_d .New ();_cfea .Write ([]byte (_fae .WriteString ()));_fcfc :=string (_cfea .Sum (nil ));_gaed [_fcfc ]=append (_gaed [_fcfc ],_fge );};};for _ ,_fee :=range _gaed {if len (_fee )< 2{continue ;
};_edea :=_fee [0];for _bfdd :=1;_bfdd < len (_fee );_bfdd ++{_cge :=_fee [_bfdd ];_ddf [_cge ]=_edea ;_bafd [_cge ]=struct{}{};};};_adaf =make ([]_dfb .PdfObject ,0,len (objects )-len (_bafd ));for _ ,_adac :=range objects {if _ ,_bege :=_bafd [_adac ];
_bege {continue ;};_adaf =append (_adaf ,_adac );};_efec (_adaf ,_ddf );return _adaf ,nil ;};func _ebac (_ddc *_cc .XObjectImage ,_fadd imageModifications )error {_egc ,_cade :=_ddc .ToImage ();if _cade !=nil {return _cade ;};if _fadd .Scale !=0{_egc ,_cade =_ebcg (_egc ,_fadd .Scale );
if _cade !=nil {return _cade ;};};if _fadd .Encoding !=nil {_ddc .Filter =_fadd .Encoding ;};_ddc .Decode =nil ;switch _faeb :=_ddc .Filter .(type ){case *_dfb .FlateEncoder :if _faeb .Predictor !=1&&_faeb .Predictor !=11{_faeb .Predictor =1;};};if _cade =_ddc .SetImage (_egc ,nil );
_cade !=nil {_b .Log .Debug ("\u0045\u0072\u0072or\u0020\u0073\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u006d\u0061\u0067\u0065\u003a\u0020\u0025\u0076",_cade );return _cade ;};_ddc .ToPdfObject ();return nil ;};

// Image optimizes images by rewrite images into JPEG format with quality equals to ImageQuality.
// TODO(a5i): Add support for inline images.
// It implements interface model.Optimizer.
type Image struct{ImageQuality int ;};func _ebcg (_agc *_cc .Image ,_aad float64 )(*_cc .Image ,error ){_fbd ,_afg :=_agc .ToGoImage ();if _afg !=nil {return nil ,_afg ;};var _eddf _a .Image ;_fef ,_efgb :=_fbd .(*_a .Monochrome );if _efgb {if _afg =_fef .ResolveDecode ();
_afg !=nil {return nil ,_afg ;};_eddf ,_afg =_fef .Scale (_aad );if _afg !=nil {return nil ,_afg ;};}else {_fccd :=int (_g .RoundToEven (float64 (_agc .Width )*_aad ));_gbcfb :=int (_g .RoundToEven (float64 (_agc .Height )*_aad ));_eddf ,_afg =_a .NewImage (_fccd ,_gbcfb ,int (_agc .BitsPerComponent ),_agc .ColorComponents ,nil ,nil ,nil );
if _afg !=nil {return nil ,_afg ;};_c .CatmullRom .Scale (_eddf ,_eddf .Bounds (),_fbd ,_fbd .Bounds (),_c .Over ,&_c .Options {});};_daaa :=_eddf .Base ();_cdec :=&_cc .Image {Width :int64 (_daaa .Width ),Height :int64 (_daaa .Height ),BitsPerComponent :int64 (_daaa .BitsPerComponent ),ColorComponents :_daaa .ColorComponents ,Data :_daaa .Data };
_cdec .SetDecode (_daaa .Decode );_cdec .SetAlpha (_daaa .Alpha );return _cdec ,nil ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_ddg *CompressStreams )Optimize (objects []_dfb .PdfObject )(_bffd []_dfb .PdfObject ,_bgbc error ){_bffd =make ([]_dfb .PdfObject ,len (objects ));copy (_bffd ,objects );for _ ,_ccd :=range objects {_afaf ,_fcc :=_dfb .GetStream (_ccd );if !_fcc {continue ;
};if _gcce :=_afaf .Get ("\u0046\u0069\u006c\u0074\u0065\u0072");_gcce !=nil {if _ ,_faad :=_dfb .GetName (_gcce );_faad {continue ;};if _dcg ,_fea :=_dfb .GetArray (_gcce );_fea &&_dcg .Len ()> 0{continue ;};};_ddgc :=_dfb .NewFlateEncoder ();var _cfeg []byte ;
_cfeg ,_bgbc =_ddgc .EncodeBytes (_afaf .Stream );if _bgbc !=nil {return _bffd ,_bgbc ;};_feg :=_ddgc .MakeStreamDict ();if len (_cfeg )+len (_feg .WriteString ())< len (_afaf .Stream ){_afaf .Stream =_cfeg ;_afaf .PdfObjectDictionary .Merge (_feg );_afaf .PdfObjectDictionary .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_dfb .MakeInteger (int64 (len (_afaf .Stream ))));
};};return _bffd ,nil ;};

// CleanUnusedResources represents an optimizer used to clean unused resources.
type CleanUnusedResources struct{};

// ObjectStreams groups PDF objects to object streams.
// It implements interface model.Optimizer.
type ObjectStreams struct{};

// GetOptimizers gets the list of optimizers in chain `c`.
func (_gbc *Chain )GetOptimizers ()[]_cc .Optimizer {return _gbc ._ef };type imageInfo struct{BitsPerComponent int ;ColorComponents int ;Width int ;Height int ;Stream *_dfb .PdfObjectStream ;PPI float64 ;};

// New creates a optimizers chain from options.
func New (options Options )*Chain {_aadd :=new (Chain );if options .CleanFonts ||options .SubsetFonts {_aadd .Append (&CleanFonts {Subset :options .SubsetFonts });};if options .CleanContentstream {_aadd .Append (new (CleanContentstream ));};if options .ImageUpperPPI > 0{_fgg :=new (ImagePPI );
_fgg .ImageUpperPPI =options .ImageUpperPPI ;_aadd .Append (_fgg );};if options .ImageQuality > 0{_fde :=new (Image );_fde .ImageQuality =options .ImageQuality ;_aadd .Append (_fde );};if options .CombineDuplicateDirectObjects {_aadd .Append (new (CombineDuplicateDirectObjects ));
};if options .CombineDuplicateStreams {_aadd .Append (new (CombineDuplicateStreams ));};if options .CombineIdenticalIndirectObjects {_aadd .Append (new (CombineIdenticalIndirectObjects ));};if options .UseObjectStreams {_aadd .Append (new (ObjectStreams ));
};if options .CompressStreams {_aadd .Append (new (CompressStreams ));};if options .CleanUnusedResources {_aadd .Append (new (CleanUnusedResources ));};return _aadd ;};

// CompressStreams compresses uncompressed streams.
// It implements interface model.Optimizer.
type CompressStreams struct{};

// CombineIdenticalIndirectObjects combines identical indirect objects.
// It implements interface model.Optimizer.
type CombineIdenticalIndirectObjects struct{};

// ImagePPI optimizes images by scaling images such that the PPI (pixels per inch) is never higher than ImageUpperPPI.
// TODO(a5i): Add support for inline images.
// It implements interface model.Optimizer.
type ImagePPI struct{ImageUpperPPI float64 ;};func _dadg (_gcbg []_dfb .PdfObject )objectStructure {_dbg :=objectStructure {};_bcad :=false ;for _ ,_bcef :=range _gcbg {switch _ebbe :=_bcef .(type ){case *_dfb .PdfIndirectObject :_aeba ,_fgdb :=_dfb .GetDict (_ebbe );
if !_fgdb {continue ;};_bade ,_fgdb :=_dfb .GetName (_aeba .Get ("\u0054\u0079\u0070\u0065"));if !_fgdb {continue ;};switch _bade .String (){case "\u0043a\u0074\u0061\u006c\u006f\u0067":_dbg ._bfcg =_aeba ;_bcad =true ;};};if _bcad {break ;};};if !_bcad {return _dbg ;
};_cceg ,_caf :=_dfb .GetDict (_dbg ._bfcg .Get ("\u0050\u0061\u0067e\u0073"));if !_caf {return _dbg ;};_dbg ._edcc =_cceg ;_cgc ,_caf :=_dfb .GetArray (_cceg .Get ("\u004b\u0069\u0064\u0073"));if !_caf {return _dbg ;};for _ ,_geaf :=range _cgc .Elements (){_aea ,_fdgf :=_dfb .GetIndirect (_geaf );
if !_fdgf {break ;};_dbg ._bgcb =append (_dbg ._bgcb ,_aea );};return _dbg ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_beeb *ObjectStreams )Optimize (objects []_dfb .PdfObject )(_eada []_dfb .PdfObject ,_bdd error ){_dbd :=&_dfb .PdfObjectStreams {};_cfg :=make ([]_dfb .PdfObject ,0,len (objects ));for _ ,_gdaf :=range objects {if _gdb ,_cef :=_gdaf .(*_dfb .PdfIndirectObject );
_cef &&_gdb .GenerationNumber ==0{_dbd .Append (_gdaf );}else {_cfg =append (_cfg ,_gdaf );};};if _dbd .Len ()==0{return _cfg ,nil ;};_eada =make ([]_dfb .PdfObject ,0,len (_cfg )+_dbd .Len ()+1);if _dbd .Len ()> 1{_eada =append (_eada ,_dbd );};_eada =append (_eada ,_dbd .Elements ()...);
_eada =append (_eada ,_cfg ...);return _eada ,nil ;};func _bbc (_ggb []_dfb .PdfObject )(_fbc map[*_dfb .PdfObjectStream ]struct{},_dgfe error ){_fbc =map[*_dfb .PdfObjectStream ]struct{}{};_gbcf :=map[*_cc .PdfFont ]struct{}{};_abf :=_dadg (_ggb );for _ ,_daf :=range _abf ._bgcb {_adg ,_bf :=_dfb .GetDict (_daf .PdfObject );
if !_bf {continue ;};_eeb ,_bf :=_dfb .GetDict (_adg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));if !_bf {continue ;};_gdd ,_ :=_cgff (_adg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));_ecg ,_bd :=_cc .NewPdfPageResourcesFromDict (_eeb );
if _bd !=nil {return nil ,_bd ;};_ccbc :=[]content {{_fda :_gdd ,_dcc :_ecg }};_gec :=_bag (_adg .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));if _gec !=nil {_ccbc =append (_ccbc ,_gec ...);};for _ ,_bfc :=range _ccbc {_eegb ,_gcf :=_be .NewFromContents (_bfc ._fda ,_bfc ._dcc );
if _gcf !=nil {return nil ,_gcf ;};_eda ,_ ,_ ,_gcf :=_eegb .ExtractPageText ();if _gcf !=nil {return nil ,_gcf ;};for _ ,_ba :=range _eda .Marks ().Elements (){if _ba .Font ==nil {continue ;};if _ ,_abc :=_gbcf [_ba .Font ];!_abc {_gbcf [_ba .Font ]=struct{}{};
};};};};_gdgd :=map[*_dfb .PdfObjectStream ][]*_cc .PdfFont {};for _fca :=range _gbcf {_bbcg :=_fca .FontDescriptor ();if _bbcg ==nil ||_bbcg .FontFile2 ==nil {continue ;};_ffa ,_bda :=_dfb .GetStream (_bbcg .FontFile2 );if !_bda {continue ;};_gdgd [_ffa ]=append (_gdgd [_ffa ],_fca );
};for _fbb :=range _gdgd {var _ede []rune ;var _cee []_cb .GlyphIndex ;for _ ,_ae :=range _gdgd [_fbb ]{switch _daa :=_ae .Encoder ().(type ){case *_gd .IdentityEncoder :_ggbb :=_daa .RegisteredRunes ();_bde :=make ([]_cb .GlyphIndex ,len (_ggbb ));for _cbe ,_eg :=range _ggbb {_bde [_cbe ]=_cb .GlyphIndex (_eg );
};_cee =append (_cee ,_bde ...);case *_gd .TrueTypeFontEncoder :_dc :=_daa .RegisteredRunes ();_ede =append (_ede ,_dc ...);case _gd .SimpleEncoder :_af :=_daa .Charcodes ();for _ ,_gace :=range _af {_dgb ,_gda :=_daa .CharcodeToRune (_gace );if !_gda {_b .Log .Debug ("\u0043\u0068a\u0072\u0063\u006f\u0064\u0065\u003c\u002d\u003e\u0072\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064: \u0025\u0064",_gace );
continue ;};_ede =append (_ede ,_dgb );};};};_dgfe =_agea (_fbb ,_ede ,_cee );if _dgfe !=nil {_b .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006eg\u0020f\u006f\u006e\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_dgfe );
return nil ,_dgfe ;};_fbc [_fbb ]=struct{}{};};return _fbc ,nil ;};

// Optimize implements Optimizer interface.
func (_edaf *CleanUnusedResources )Optimize (objects []_dfb .PdfObject )(_ac []_dfb .PdfObject ,_cfdc error ){_fed ,_cfdc :=_bab (objects );if _cfdc !=nil {return nil ,_cfdc ;};_ded :=[]_dfb .PdfObject {};for _ ,_bgbf :=range objects {_ ,_eaad :=_fed [_bgbf ];
if _eaad {continue ;};_ded =append (_ded ,_bgbf );};return _ded ,nil ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_fbg *CleanFonts )Optimize (objects []_dfb .PdfObject )(_bed []_dfb .PdfObject ,_fdd error ){var _bdb map[*_dfb .PdfObjectStream ]struct{};if _fbg .Subset {var _dafe error ;_bdb ,_dafe =_bbc (objects );if _dafe !=nil {_b .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0073u\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u003a \u0025\u0076",_dafe );
return nil ,_dafe ;};};for _ ,_bbcf :=range objects {_aa ,_eaa :=_dfb .GetStream (_bbcf );if !_eaa {continue ;};if _ ,_agde :=_bdb [_aa ];_agde {continue ;};_bff ,_agf :=_dfb .NewEncoderFromStream (_aa );if _agf !=nil {_b .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0067e\u0074\u0074\u0069\u006eg e\u006eco\u0064\u0065\u0072\u003a\u0020\u0025\u0076 -\u0020\u0069\u0067\u006e\u006f\u0072\u0069n\u0067",_agf );
continue ;};_fdb ,_agf :=_bff .DecodeStream (_aa );if _agf !=nil {_b .Log .Debug ("\u0044\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0065r\u0072\u006f\u0072\u0020\u003a\u0020\u0025v\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067",_agf );
continue ;};if len (_fdb )< 4{continue ;};_dgfg :=string (_fdb [:4]);if _dgfg =="\u004f\u0054\u0054\u004f"{continue ;};if _dgfg !="\u0000\u0001\u0000\u0000"&&_dgfg !="\u0074\u0072\u0075\u0065"{continue ;};_ccg ,_agf :=_cb .Parse (_cg .NewReader (_fdb ));
if _agf !=nil {_b .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020P\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076\u0020\u002d\u0020\u0069\u0067\u006eo\u0072\u0069\u006e\u0067",_agf );continue ;};_agf =_ccg .Optimize ();
if _agf !=nil {_b .Log .Debug ("\u0045\u0052RO\u0052\u0020\u004fp\u0074\u0069\u006d\u0069zin\u0067 f\u006f\u006e\u0074\u003a\u0020\u0025\u0076 -\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067",_agf );continue ;};var _cfe _cg .Buffer ;_agf =_ccg .Write (&_cfe );
if _agf !=nil {_b .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020W\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076\u0020\u002d\u0020\u0069\u0067\u006eo\u0072\u0069\u006e\u0067",_agf );continue ;};if _cfe .Len ()> len (_fdb ){_b .Log .Debug ("\u0052\u0065-\u0077\u0072\u0069\u0074\u0074\u0065\u006e\u0020\u0066\u006f\u006e\u0074\u0020\u0069\u0073\u0020\u006c\u0061\u0072\u0067\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u006f\u0072\u0069\u0067\u0069\u006e\u0061\u006c\u0020\u002d\u0020\u0073\u006b\u0069\u0070");
continue ;};_eba ,_agf :=_dfb .MakeStream (_cfe .Bytes (),_dfb .NewFlateEncoder ());if _agf !=nil {continue ;};*_aa =*_eba ;_aa .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_dfb .MakeInteger (int64 (_cfe .Len ())));};return objects ,nil ;};

// Chain allows to use sequence of optimizers.
// It implements interface model.Optimizer.
type Chain struct{_ef []_cc .Optimizer };

// Optimize optimizes PDF objects to decrease PDF size.
func (_bc *CleanContentstream )Optimize (objects []_dfb .PdfObject )(_fe []_dfb .PdfObject ,_cf error ){_ce :=map[*_dfb .PdfObjectStream ]struct{}{};var _dgf []*_dfb .PdfObjectStream ;_ab :=func (_cfd *_dfb .PdfObjectStream ){if _ ,_bgg :=_ce [_cfd ];!_bgg {_ce [_cfd ]=struct{}{};
_dgf =append (_dgf ,_cfd );};};_fa :=map[_dfb .PdfObject ]bool {};_efa :=map[_dfb .PdfObject ]bool {};for _ ,_ge :=range objects {switch _dab :=_ge .(type ){case *_dfb .PdfIndirectObject :switch _ged :=_dab .PdfObject .(type ){case *_dfb .PdfObjectDictionary :if _gg ,_ee :=_dfb .GetName (_ged .Get ("\u0054\u0079\u0070\u0065"));
!_ee ||_gg .String ()!="\u0050\u0061\u0067\u0065"{continue ;};if _ea ,_fcf :=_dfb .GetStream (_ged .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));_fcf {_ab (_ea );}else if _bbb ,_bcf :=_dfb .GetArray (_ged .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));
_bcf {var _gba []*_dfb .PdfObjectStream ;for _ ,_bbg :=range _bbb .Elements (){if _ec ,_abb :=_dfb .GetStream (_bbg );_abb {_gba =append (_gba ,_ec );};};if len (_gba )> 0{var _dff _cg .Buffer ;for _ ,_aba :=range _gba {if _dac ,_eeg :=_dfb .DecodeStream (_aba );
_eeg ==nil {_dff .Write (_dac );};_fa [_aba ]=true ;};_ced ,_fd :=_dfb .MakeStream (_dff .Bytes (),_dfb .NewFlateEncoder ());if _fd !=nil {return nil ,_fd ;};_efa [_ced ]=true ;_ged .Set ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_ced );_ab (_ced );
};};};case *_dfb .PdfObjectStream :if _beb ,_fb :=_dfb .GetName (_dab .Get ("\u0054\u0079\u0070\u0065"));!_fb ||_beb .String ()!="\u0058O\u0062\u006a\u0065\u0063\u0074"{continue ;};if _bbbc ,_cedb :=_dfb .GetName (_dab .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));
!_cedb ||_bbbc .String ()!="\u0046\u006f\u0072\u006d"{continue ;};_ab (_dab );};};for _ ,_fad :=range _dgf {_cf =_bgd (_fad );if _cf !=nil {return nil ,_cf ;};};_fe =nil ;for _ ,_daca :=range objects {if _fa [_daca ]{continue ;};_fe =append (_fe ,_daca );
};for _gac :=range _efa {_fe =append (_fe ,_gac );};return _fe ,nil ;};type content struct{_fda string ;_dcc *_cc .PdfPageResources ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_baab *CombineDuplicateDirectObjects )Optimize (objects []_dfb .PdfObject )(_afa []_dfb .PdfObject ,_dacg error ){_gbab (objects );_aag :=make (map[string ][]*_dfb .PdfObjectDictionary );var _cacf func (_gcab *_dfb .PdfObjectDictionary );_cacf =func (_bcd *_dfb .PdfObjectDictionary ){for _ ,_addb :=range _bcd .Keys (){_cadf :=_bcd .Get (_addb );
if _cdgf ,_daae :=_cadf .(*_dfb .PdfObjectDictionary );_daae {if _cbag :=_cdgf .Keys ();len (_cbag )==0{continue ;};_ebed :=_d .New ();_ebed .Write ([]byte (_cdgf .WriteString ()));_cecc :=string (_ebed .Sum (nil ));_aag [_cecc ]=append (_aag [_cecc ],_cdgf );
_cacf (_cdgf );};};};for _ ,_bgdf :=range objects {_acd ,_agda :=_bgdf .(*_dfb .PdfIndirectObject );if !_agda {continue ;};if _gadd ,_agg :=_acd .PdfObject .(*_dfb .PdfObjectDictionary );_agg {_cacf (_gadd );};};_gbcc :=make ([]_dfb .PdfObject ,0,len (_aag ));
_afb :=make (map[_dfb .PdfObject ]_dfb .PdfObject );for _ ,_dgae :=range _aag {if len (_dgae )< 2{continue ;};_dbe :=_dfb .MakeDict ();_dbe .Merge (_dgae [0]);_bbgf :=_dfb .MakeIndirectObject (_dbe );_gbcc =append (_gbcc ,_bbgf );for _gccc :=0;_gccc < len (_dgae );
_gccc ++{_cfab :=_dgae [_gccc ];_afb [_cfab ]=_bbgf ;};};_afa =make ([]_dfb .PdfObject ,len (objects ));copy (_afa ,objects );_afa =append (_gbcc ,_afa ...);_efec (_afa ,_afb );return _afa ,nil ;};

// Optimize optimizes PDF objects to decrease PDF size.
func (_dffg *Image )Optimize (objects []_dfb .PdfObject )(_acc []_dfb .PdfObject ,_fba error ){if _dffg .ImageQuality <=0{return objects ,nil ;};_cgf :=_ebdd (objects );if len (_cgf )==0{return objects ,nil ;};_agfb :=make (map[_dfb .PdfObject ]_dfb .PdfObject );
_fdg :=make (map[_dfb .PdfObject ]struct{});for _ ,_dgg :=range _cgf {_aaa :=_dgg .Stream .Get ("\u0053\u004d\u0061s\u006b");_fdg [_aaa ]=struct{}{};};for _cdfgd ,_aac :=range _cgf {_gag :=_aac .Stream ;if _ ,_bfcb :=_fdg [_gag ];_bfcb {continue ;};_edcb ,_bea :=_cc .NewXObjectImageFromStream (_gag );
if _bea !=nil {_b .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_bea );continue ;};switch _edcb .Filter .(type ){case *_dfb .JBIG2Encoder :continue ;case *_dfb .CCITTFaxEncoder :continue ;};_fbcc ,_bea :=_edcb .ToImage ();
if _bea !=nil {_b .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_bea );continue ;};_bfca :=_dfb .NewDCTEncoder ();_bfca .ColorComponents =_fbcc .ColorComponents ;_bfca .Quality =_dffg .ImageQuality ;_bfca .BitsPerComponent =_aac .BitsPerComponent ;
_bfca .Width =_aac .Width ;_bfca .Height =_aac .Height ;_fcdf ,_bea :=_bfca .EncodeBytes (_fbcc .Data );if _bea !=nil {_b .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_bea );continue ;};var _ecge _dfb .StreamEncoder ;_ecge =_bfca ;
{_aacd :=_dfb .NewFlateEncoder ();_ecc :=_dfb .NewMultiEncoder ();_ecc .AddEncoder (_aacd );_ecc .AddEncoder (_bfca );_bdae ,_edeag :=_ecc .EncodeBytes (_fbcc .Data );if _edeag !=nil {_b .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u002b\u0076",_edeag );
continue ;};if len (_bdae )< len (_fcdf ){_b .Log .Trace ("\u004d\u0075\u006c\u0074\u0069\u0020\u0065\u006e\u0063\u0020\u0069\u006d\u0070\u0072\u006f\u0076\u0065\u0073\u003a\u0020\u0025\u0064\u0020\u0074o\u0020\u0025\u0064\u0020\u0028o\u0072\u0069g\u0020\u0025\u0064\u0029",len (_fcdf ),len (_bdae ),len (_gag .Stream ));
_fcdf =_bdae ;_ecge =_ecc ;};};_bee :=len (_gag .Stream );if _bee < len (_fcdf ){continue ;};_ebdf :=&_dfb .PdfObjectStream {Stream :_fcdf };_ebdf .PdfObjectReference =_gag .PdfObjectReference ;_ebdf .PdfObjectDictionary =_dfb .MakeDict ();_ebdf .Merge (_gag .PdfObjectDictionary );
_ebdf .Merge (_ecge .MakeStreamDict ());_ebdf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_dfb .MakeInteger (int64 (len (_fcdf ))));_agfb [_gag ]=_ebdf ;_cgf [_cdfgd ].Stream =_ebdf ;};_acc =make ([]_dfb .PdfObject ,len (objects ));copy (_acc ,objects );
_efec (_acc ,_agfb );return _acc ,nil ;};func _age (_efb *_bg .ContentStreamOperations )*_bg .ContentStreamOperations {if _efb ==nil {return nil ;};_ff :=_bg .ContentStreamOperations {};for _ ,_caa :=range *_efb {switch _caa .Operand {case "\u0042\u0044\u0043","\u0042\u004d\u0043","\u0045\u004d\u0043":continue ;
case "\u0054\u006d":if len (_caa .Params )==6{if _fcg ,_cga :=_dfb .GetNumbersAsFloat (_caa .Params );_cga ==nil {if _fcg [0]==1&&_fcg [1]==0&&_fcg [2]==0&&_fcg [3]==1{_caa =&_bg .ContentStreamOperation {Params :[]_dfb .PdfObject {_caa .Params [4],_caa .Params [5]},Operand :"\u0054\u0064"};
};};};};_ff =append (_ff ,_caa );};return &_ff ;};func _gbab (_cfgb []_dfb .PdfObject ){for _aab ,_ebdg :=range _cfgb {switch _deb :=_ebdg .(type ){case *_dfb .PdfIndirectObject :_deb .ObjectNumber =int64 (_aab +1);_deb .GenerationNumber =0;case *_dfb .PdfObjectStream :_deb .ObjectNumber =int64 (_aab +1);
_deb .GenerationNumber =0;case *_dfb .PdfObjectStreams :_deb .ObjectNumber =int64 (_aab +1);_deb .GenerationNumber =0;};};};type imageModifications struct{Scale float64 ;Encoding _dfb .StreamEncoder ;};func _ebdd (_dgaf []_dfb .PdfObject )[]*imageInfo {_gfdc :=_dfb .PdfObjectName ("\u0053u\u0062\u0074\u0079\u0070\u0065");
_bec :=make (map[*_dfb .PdfObjectStream ]struct{});var _cdfg []*imageInfo ;for _ ,_dbag :=range _dgaf {_ddb ,_gde :=_dfb .GetStream (_dbag );if !_gde {continue ;};if _ ,_dfe :=_bec [_ddb ];_dfe {continue ;};_bec [_ddb ]=struct{}{};_cgee :=_ddb .PdfObjectDictionary .Get (_gfdc );
_abbc ,_gde :=_dfb .GetName (_cgee );if !_gde ||string (*_abbc )!="\u0049\u006d\u0061g\u0065"{continue ;};_edae :=&imageInfo {Stream :_ddb ,BitsPerComponent :8};if _egab ,_becc :=_dfb .GetIntVal (_ddb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));
_becc {_edae .BitsPerComponent =_egab ;};if _dfg ,_ece :=_dfb .GetIntVal (_ddb .Get ("\u0057\u0069\u0064t\u0068"));_ece {_edae .Width =_dfg ;};if _gdge ,_gbae :=_dfb .GetIntVal (_ddb .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));_gbae {_edae .Height =_gdge ;
};_facg ,_adca :=_cc .NewPdfColorspaceFromPdfObject (_ddb .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));if _adca !=nil {_b .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adca );continue ;};if _facg ==nil {_gfc ,_egge :=_dfb .GetName (_ddb .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));
if _egge {switch _gfc .String (){case "\u0043\u0043\u0049\u0054\u0054\u0046\u0061\u0078\u0044e\u0063\u006f\u0064\u0065","J\u0042\u0049\u0047\u0032\u0044\u0065\u0063\u006f\u0064\u0065":_facg =_cc .NewPdfColorspaceDeviceGray ();_edae .BitsPerComponent =1;
};};};switch _bgfa :=_facg .(type ){case *_cc .PdfColorspaceDeviceRGB :_edae .ColorComponents =3;case *_cc .PdfColorspaceDeviceGray :_edae .ColorComponents =1;default:_b .Log .Debug ("\u004f\u0070\u0074\u0069\u006d\u0069\u007aa\u0074\u0069\u006fn\u0020\u0069\u0073 \u006e\u006ft\u0020\u0073\u0075\u0070\u0070\u006fr\u0074ed\u0020\u0066\u006f\u0072\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u0025\u0054\u0020\u002d\u0020\u0073\u006b\u0069\u0070",_bgfa );
continue ;};_cdfg =append (_cdfg ,_edae );};return _cdfg ;};

// CombineDuplicateStreams combines duplicated streams by its data hash.
// It implements interface model.Optimizer.
type CombineDuplicateStreams struct{};

// CleanContentstream cleans up redundant operands in content streams, including Page and XObject Form
// contents. This process includes:
// 1. Marked content operators are removed.
// 2. Some operands are simplified (shorter form).
// TODO: Add more reduction methods and improving the methods for identifying unnecessary operands.
type CleanContentstream struct{};