//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
//	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_cg "bufio";_aac "bytes";_bf "crypto/md5";_da "crypto/rand";_de "crypto/sha1";_ffd "crypto/x509";_g "encoding/binary";_db "encoding/hex";_ede "errors";_c "fmt";_fgb "github.com/gabriel-vasile/mimetype";_bb "github.com/unidoc/pkcs7";
	_df "github.com/magnus195/unipdf/v3/common";
	_cc "github.com/magnus195/unipdf/v3/core";
	_bd "github.com/magnus195/unipdf/v3/core/security";
	_ba "github.com/magnus195/unipdf/v3/core/security/crypt";
	_fac "github.com/magnus195/unipdf/v3/internal/cmap";
	_ec "github.com/magnus195/unipdf/v3/internal/imageutil";
	_abc "github.com/magnus195/unipdf/v3/internal/license";
	_dac "github.com/magnus195/unipdf/v3/internal/sampling";
	_cbf "github.com/magnus195/unipdf/v3/internal/textencoding";
	_cde "github.com/magnus195/unipdf/v3/internal/timeutils";
	_ga "github.com/magnus195/unipdf/v3/internal/transform";
	_dc "github.com/magnus195/unipdf/v3/model/internal/docutil";
	_edg "github.com/magnus195/unipdf/v3/model/internal/fonts";
	_fd "github.com/magnus195/unipdf/v3/model/mdp";
	_dcf "github.com/magnus195/unipdf/v3/model/sigutil";
	_bbd "github.com/magnus195/unipdf/v3/ps";_bdc "github.com/unidoc/unitype";
_gc "golang.org/x/xerrors";_a "hash";_ee "image";_d "image/color";_ "image/gif";_ "image/png";_cd "io";_ea "io/ioutil";_ed "math";_ab "math/rand";_aa "os";_eg "path/filepath";_cb "regexp";_eac "sort";_gf "strconv";_fa "strings";_f "sync";_b "time";_ca "unicode";
_eaf "unicode/utf8";);

// K returns the value of the key component of the color.
func (_dcaf *PdfColorDeviceCMYK )K ()float64 {return _dcaf [3]};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_debe :=PdfColorDeviceRGB {r ,g ,b };return &_debe ;};

// ParserMetadata gets the parser  metadata.
func (_efbbb *CompliancePdfReader )ParserMetadata ()_cc .ParserMetadata {if _efbbb ._dgfga ==(_cc .ParserMetadata {}){_efbbb ._dgfga ,_ =_efbbb ._bbed .ParserMetadata ();};return _efbbb ._dgfga ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_dgfe *PdfColorLab )GetNumComponents ()int {return 3};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_gffad ,_dgeed :=_cde .ParsePdfTime (dateStr );if _dgeed !=nil {return PdfDate {},_dgeed ;};return NewPdfDateFromTime (_gffad );};

// C returns the value of the cyan component of the color.
func (_cddb *PdfColorDeviceCMYK )C ()float64 {return _cddb [0]};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_ceb :=NewPdfAnnotation ();_fba :=&PdfAnnotationTrapNet {};_fba .PdfAnnotation =_ceb ;_ceb .SetContext (_fba );return _fba ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_deafe *Image )GetSamples ()[]uint32 {_fbbf :=_dac .ResampleBytes (_deafe .Data ,int (_deafe .BitsPerComponent ));if _deafe .BitsPerComponent < 8{_fbbf =_deafe .samplesTrimPadding (_fbbf );};_ffafg :=int (_deafe .Width )*int (_deafe .Height )*_deafe .ColorComponents ;
if len (_fbbf )< _ffafg {_df .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_fbbf ),_ffafg );
return _fbbf ;}else if len (_fbbf )> _ffafg {_df .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_fbbf ),_ffafg );
_fbbf =_fbbf [:_ffafg ];};return _fbbf ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);func (_fdced *pdfCIDFontType2 )baseFields ()*fontCommon {return &_fdced .fontCommon };

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_bbed *_cc .PdfParser ;_bdebg _cc .PdfObject ;_daddc *_cc .PdfIndirectObject ;_bdccg *_cc .PdfObjectDictionary ;_fbad []*_cc .PdfIndirectObject ;PageList []*PdfPage ;_ffbbc int ;_gfed *_cc .PdfObjectDictionary ;_bedbb *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_facgb *Permissions ;_dgage map[*PdfReader ]*PdfReader ;_bdeae []*PdfReader ;_ecbgec *modelManager ;_fcae bool ;_gcfcc map[_cc .PdfObject ]struct{};_ddbcgf _cd .ReadSeeker ;_bfffa string ;_bgcfe bool ;_gaadb *ReaderOpts ;
_dffaf bool ;};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_ecg :=NewPdfAnnotation ();_ccd :=&PdfAnnotationCircle {};_ccd .PdfAnnotation =_ecg ;_ccd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ecg .SetContext (_ccd );return _ccd ;};func _cgcfg (_bbacc *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_bbacc }};


// String returns a string representation of the field.
func (_fafd *PdfField )String ()string {if _aedgb ,_eabeg :=_fafd .ToPdfObject ().(*_cc .PdfIndirectObject );_eabeg {return _c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_fafd ._egbe ,_aedgb .PdfObject .String ());};return "";};func (_fdca *PdfWriter )addObject (_abfca _cc .PdfObject )bool {_abfg :=_fdca .hasObject (_abfca );
if !_abfg {_eabd :=_cc .ResolveReferencesDeep (_abfca ,_fdca ._adgcd );if _eabd !=nil {_df .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_eabd );};_fdca ._gedfdc =append (_fdca ._gedfdc ,_abfca );
_fdca ._abbbc [_abfca ]=struct{}{};return true ;};return false ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_edee pdfFontType3 )GetCharMetrics (code _cbf .CharCode )(_edg .CharMetrics ,bool ){if _gbege ,_dbbee :=_edee ._aacf [code ];_dbbee {return _edg .CharMetrics {Wx :_gbege },true ;};if _edg .IsStdFont (_edg .StdFontName (_edee ._baac )){return _edg .CharMetrics {Wx :250},true ;
};return _edg .CharMetrics {},false ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _cc .PdfObjectName ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_egd :=NewPdfAction ();_cbe :=&PdfActionNamed {};_cbe .PdfAction =_egd ;_egd .SetContext (_cbe );return _cbe ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_daea *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_ede .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_dcdb ,_baca :=_ec .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._ccee ,img ._aaaacg );if _baca !=nil {return img ,_baca ;};_daec ,_baca :=_ec .NRGBAConverter .Convert (_dcdb );if _baca !=nil {return img ,_baca ;
};_cbcad :=_bagc (_daec .Base ());_df .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_df .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_df .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_cbcad .Data );
_df .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_cbcad );return _cbcad ,nil ;};

// SetImage updates XObject Image with new image data.
func (_ddbcaa *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_ddbcaa .Filter .UpdateParams (img .GetParamsDict ());_afbcd ,_abffa :=_ddbcaa .Filter .EncodeBytes (img .Data );if _abffa !=nil {return _abffa ;};_ddbcaa .Stream =_afbcd ;_baebba :=img .Width ;
_ddbcaa .Width =&_baebba ;_ggbec :=img .Height ;_ddbcaa .Height =&_ggbec ;_ffcbc :=img .BitsPerComponent ;_ddbcaa .BitsPerComponent =&_ffcbc ;if cs ==nil {if img .ColorComponents ==1{_ddbcaa .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_ddbcaa .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_ddbcaa .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _ede .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_ddbcaa .ColorSpace =cs ;};return nil ;
};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_bbbae *PdfRectangle )Normalize (){if _bbbae .Llx > _bbbae .Urx {_bbbae .Llx ,_bbbae .Urx =_bbbae .Urx ,_bbbae .Llx ;};if _bbbae .Lly > _bbbae .Ury {_bbbae .Lly ,_bbbae .Ury =_bbbae .Ury ,_bbbae .Lly ;};};func (_aba *PdfAnnotation )String ()string {_eaee :="";
_effg ,_gcfa :=_aba .ToPdfObject ().(*_cc .PdfIndirectObject );if _gcfa {_eaee =_c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_aba ._fae ,_effg .PdfObject .String ());};return _eaee ;};var ImageHandling ImageHandler =DefaultImageHandler {};func (_bcdc *PdfReader )newPdfAnnotationSoundFromDict (_aefb *_cc .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_fcgf :=PdfAnnotationSound {};
_bcdf ,_bdg :=_bcdc .newPdfAnnotationMarkupFromDict (_aefb );if _bdg !=nil {return nil ,_bdg ;};_fcgf .PdfAnnotationMarkup =_bcdf ;_fcgf .Name =_aefb .Get ("\u004e\u0061\u006d\u0065");_fcgf .Sound =_aefb .Get ("\u0053\u006f\u0075n\u0064");return &_fcgf ,nil ;
};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_debb :=NewPdfAnnotation ();_gea :=&PdfAnnotationPopup {};_gea .PdfAnnotation =_debb ;_debb .SetContext (_gea );return _gea ;};func (_fffgf *PdfWriter )checkPendingObjects (){for _cgbec ,_bgfga :=range _fffgf ._fgebe {if !_fffgf .hasObject (_cgbec ){_df .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_cgbec ,_cgbec ,_cgbec );
for _ ,_cebca :=range _bgfga {for _ ,_dbag :=range _cebca .Keys (){_bddde :=_cebca .Get (_dbag );if _bddde ==_cgbec {_df .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_cebca .Set (_dbag ,_cc .MakeNull ());break ;};};};};};};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_gcdddb *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_dafbf *PdfSignature ,_dfddg Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_aadbf *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_fedega *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_gfcad *PdfSignature ,_efgbf Hasher )error ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_cc .PdfObjectArray ;Domain *_cc .PdfObjectArray ;Function []PdfFunction ;Extend *_cc .PdfObjectArray ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_gafccf OutlineDest )ToPdfObject ()_cc .PdfObject {if (_gafccf .PageObj ==nil &&_gafccf .Page < 0)||_gafccf .Mode ==""{return _cc .MakeNull ();};_bdda :=_cc .MakeArray ();if _gafccf .PageObj !=nil {_bdda .Append (_gafccf .PageObj );}else {_bdda .Append (_cc .MakeInteger (_gafccf .Page ));
};_bdda .Append (_cc .MakeName (_gafccf .Mode ));switch _gafccf .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_bdda .Append (_cc .MakeFloat (_gafccf .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_bdda .Append (_cc .MakeFloat (_gafccf .X ));
case "\u0058\u0059\u005a":_bdda .Append (_cc .MakeFloat (_gafccf .X ));_bdda .Append (_cc .MakeFloat (_gafccf .Y ));_bdda .Append (_cc .MakeFloat (_gafccf .Zoom ));default:_bdda .Set (1,_cc .MakeName ("\u0046\u0069\u0074"));};return _bdda ;};func (_cccda *PdfWriter )adjustXRefAffectedVersion (_effaf bool ){if _effaf &&_cccda ._gfgfa .Major ==1&&_cccda ._gfgfa .Minor < 5{_cccda ._gfgfa .Minor =5;
};};

// ToInteger convert to an integer format.
func (_gdaa *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_gcea :=_ed .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gcea *_gdaa .R ()),uint32 (_gcea *_gdaa .G ()),uint32 (_gcea *_gdaa .B ())};};func (_aefec *PdfReader )newPdfActionTransFromDict (_aga *_cc .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_aga .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_fgbcd :=appender .Reader .DSS ;if _fgbcd ==nil {_fgbcd =NewDSS ();};if _ebbb :=_fgbcd .GenerateHashMaps ();_ebbb !=nil {return nil ,_ebbb ;};return &LTV {CertClient :_dcf .NewCertClient (),OCSPClient :_dcf .NewOCSPClient (),CRLClient :_dcf .NewCRLClient (),SkipExisting :true ,_cbgcf :appender ,_ffedd :_fgbcd },nil ;
};func _bfcbf (_fgbac _cc .PdfObject ){_df .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_fgbac ,_fgbac .String ());if _baaafd ,_gbac :=_fgbac .(*_cc .PdfObjectStream );_gbac {_gfdfb ,_dgacdc :=_cc .DecodeStream (_baaafd );
if _dgacdc !=nil {_df .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_dgacdc );return ;};_df .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_gfdfb );}else if _efcab ,_dbbbda :=_fgbac .(*_cc .PdfIndirectObject );
_dbbbda {_df .Log .Debug ("\u0025\u0054\u0020%\u0076",_efcab .PdfObject ,_efcab .PdfObject );_df .Log .Debug ("\u0025\u0073",_efcab .PdfObject .String ());};};func _gaffa ()string {return _df .Version };

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_efcg *_cc .PdfIndirectObject ;Certs []*_cc .PdfObjectStream ;OCSPs []*_cc .PdfObjectStream ;CRLs []*_cc .PdfObjectStream ;VRI map[string ]*VRI ;_cdee map[string ]*_cc .PdfObjectStream ;_ggfg map[string ]*_cc .PdfObjectStream ;_agcb map[string ]*_cc .PdfObjectStream ;
};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_fcbge :=NewPdfAnnotation ();_ebg :=&PdfAnnotationRichMedia {};_ebg .PdfAnnotation =_fcbge ;_fcbge .SetContext (_ebg );return _ebg ;};func (_ffba *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";
};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_bbfd *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_abf :=NewPdfAction ();_bc :=&PdfActionResetForm {};_bc .PdfAction =_abf ;_abf .SetContext (_bc );return _bc ;};func _ecaec (_abba string )(map[_cbf .CharCode ]_cbf .GlyphName ,error ){_fgad :=_fa .Split (_abba ,"\u000a");
_baddb :=make (map[_cbf .CharCode ]_cbf .GlyphName );for _ ,_fedg :=range _fgad {_adge :=_abegf .FindStringSubmatch (_fedg );if _adge ==nil {continue ;};_cecg ,_gdbca :=_adge [1],_adge [2];_bcefc ,_edfdf :=_gf .Atoi (_cecg );if _edfdf !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_fedg );
return nil ,_cc .ErrTypeError ;};_baddb [_cbf .CharCode (_bcefc )]=_cbf .GlyphName (_gdbca );};_df .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_baddb );
return _baddb ,nil ;};func _dedbab (_gfdfg *_cc .PdfObjectDictionary )(*PdfShadingPattern ,error ){_ebacb :=&PdfShadingPattern {};_dfcfe :=_gfdfg .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _dfcfe ==nil {_df .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cacbc ,_bccbg :=_egfd (_dfcfe );if _bccbg !=nil {_df .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_bccbg );return nil ,_bccbg ;
};_ebacb .Shading =_cacbc ;if _degce :=_gfdfg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_degce !=nil {_aagge ,_bcbd :=_degce .(*_cc .PdfObjectArray );if !_bcbd {_df .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_degce );
return nil ,_cc .ErrTypeError ;};_ebacb .Matrix =_aagge ;};if _cccff :=_gfdfg .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_cccff !=nil {_ebacb .ExtGState =_cccff ;};return _ebacb ,nil ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_bgbeg :=&XObjectImage {};_gebabd :=&_cc .PdfObjectStream {};_gebabd .PdfObjectDictionary =_cc .MakeDict ();_bgbeg ._dbccfb =_gebabd ;return _bgbeg ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };type pdfFontType0 struct{fontCommon ;_gdab *_cc .PdfIndirectObject ;_feggc _cbf .TextEncoder ;Encoding _cc .PdfObject ;DescendantFont *PdfFont ;_abgbf *_fac .CMap ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_gecaf *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_gecaf .ToPdfOutline ().PdfOutlineTreeNode ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_cc .PdfObjectDictionary )(*PdfPageResources ,error ){_acega :=NewPdfPageResources ();if _cfeg :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_cfeg !=nil {_acega .ExtGState =_cfeg ;};if _abfc :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_abfc !=nil &&!_cc .IsNullObject (_abfc ){_acega .ColorSpace =_abfc ;};if _cefffg :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_cefffg !=nil {_acega .Pattern =_cefffg ;};if _ccaff :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_ccaff !=nil {_acega .Shading =_ccaff ;
};if _cbfdf :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_cbfdf !=nil {_acega .XObject =_cbfdf ;};if _edbcc :=_cc .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_edbcc !=nil {_acega .Font =_edbcc ;};if _bbeaa :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_bbeaa !=nil {_acega .ProcSet =_bbeaa ;};if _bfaba :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_bfaba !=nil {_acega .Properties =_bfaba ;};return _acega ,nil ;};

// M returns the value of the magenta component of the color.
func (_cgf *PdfColorDeviceCMYK )M ()float64 {return _cgf [1]};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_aabg *VRI )ToPdfObject ()*_cc .PdfObjectDictionary {_ddbc :=_cc .MakeDict ();_ddbc .SetIfNotNil (_cc .PdfObjectName ("\u0043\u0065\u0072\u0074"),_ecfga (_aabg .Cert ));_ddbc .SetIfNotNil (_cc .PdfObjectName ("\u004f\u0043\u0053\u0050"),_ecfga (_aabg .OCSP ));
_ddbc .SetIfNotNil (_cc .PdfObjectName ("\u0043\u0052\u004c"),_ecfga (_aabg .CRL ));_ddbc .SetIfNotNil ("\u0054\u0055",_aabg .TU );_ddbc .SetIfNotNil ("\u0054\u0053",_aabg .TS );return _ddbc ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_gdgec *PdfFieldButton )IsPush ()bool {return _gdgec .GetType ()==ButtonTypePush };func _afefc (_fgcfa _cc .PdfObject )(*PdfPageResourcesColorspaces ,error ){_gadd :=&PdfPageResourcesColorspaces {};if _deaa ,_gegcb :=_fgcfa .(*_cc .PdfIndirectObject );
_gegcb {_gadd ._egfac =_deaa ;_fgcfa =_deaa .PdfObject ;};_addf ,_bcfdg :=_cc .GetDict (_fgcfa );if !_bcfdg {return nil ,_ede .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_gadd .Names =[]string {};_gadd .Colorspaces =map[string ]PdfColorspace {};for _ ,_gfcfg :=range _addf .Keys (){_eabgcg :=_addf .Get (_gfcfg );_gadd .Names =append (_gadd .Names ,string (_gfcfg ));_bcfac ,_cdaad :=NewPdfColorspaceFromPdfObject (_eabgcg );
if _cdaad !=nil {return nil ,_cdaad ;};_gadd .Colorspaces [string (_gfcfg )]=_bcfac ;};return _gadd ,nil ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_dcafa :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_dcafa .N =N ;return _dcafa ,nil ;};

// WriteToFile writes the output PDF to file.
func (_fbgdg *PdfWriter )WriteToFile (outputFilePath string )error {_fcgeac ,_gagadd :=_aa .Create (outputFilePath );if _gagadd !=nil {return _gagadd ;};defer _fcgeac .Close ();return _fbgdg .Write (_fcgeac );};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_fc :=NewPdfAction ();_dfd :=&PdfActionSubmitForm {};_dfd .PdfAction =_fc ;_fc .SetContext (_dfd );return _dfd ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_efaec *pdfCIDFontType2 )ToPdfObject ()_cc .PdfObject {if _efaec ._fdab ==nil {_efaec ._fdab =&_cc .PdfIndirectObject {};};_bfegg :=_efaec .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_efaec ._fdab .PdfObject =_bfegg ;if _efaec .CIDSystemInfo !=nil {_bfegg .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_efaec .CIDSystemInfo );};if _efaec .DW !=nil {_bfegg .Set ("\u0044\u0057",_efaec .DW );};if _efaec .DW2 !=nil {_bfegg .Set ("\u0044\u0057\u0032",_efaec .DW2 );
};if _efaec .W !=nil {_bfegg .Set ("\u0057",_efaec .W );};if _efaec .W2 !=nil {_bfegg .Set ("\u0057\u0032",_efaec .W2 );};if _efaec .CIDToGIDMap !=nil {_bfegg .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_efaec .CIDToGIDMap );};
return _efaec ._fdab ;};

// NewEmbeddedFileFromObject construct a new EmbeddedFile from supplied object.
func NewEmbeddedFileFromObject (obj _cc .PdfObject )(*EmbeddedFile ,error ){_gcgcd :=_cc .TraceToDirectObject (obj );_fdeg ,_ceccb :=_gcgcd .(*_cc .PdfObjectDictionary );if !_ceccb {return nil ,_ede .New ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006fb\u006a\u0065\u0063\u0074");
};_fffce :=_cc .TraceToDirectObject (_fdeg .Get ("\u0046"));if _fffce ==nil {return nil ,_ede .New ("\u0049n\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");};_ebfg ,_ceccb :=_fffce .(*_cc .PdfObjectStream );
if !_ceccb {return nil ,_ede .New ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");};_gafbg :=_ebfg .PdfObjectDictionary ;_dbdg :=_gafbg .Get ("\u0050\u0061\u0072\u0061\u006d\u0073");if _dbdg ==nil {return nil ,_ede .New ("P\u0061\u0072\u0061\u006d\u0073\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0061\u0076\u0061i\u006ca\u0062\u006c\u0065");
};_eadfb ,_ceccb :=_dbdg .(*_cc .PdfObjectDictionary );if !_ceccb {return nil ,_ede .New ("I\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0061\u006d\u0073 \u006f\u0062\u006a\u0065\u0063\u0074");};_bgec :="";_agfag :=_eadfb .Get ("\u0043\u0068\u0065\u0063\u006b\u0053\u0075\u006d");
if _agfag !=nil {_bgec =_agfag .(*_cc .PdfObjectString ).Str ();};_bccbe ,_fgdg :=_cc .DecodeStream (_ebfg );if _fgdg !=nil {return nil ,_fgdg ;};_debfg :=&EmbeddedFile {Content :_bccbe ,Hash :_bgec };return _debfg ,nil ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_cc .PdfObjectString ;Author *_cc .PdfObjectString ;Subject *_cc .PdfObjectString ;Keywords *_cc .PdfObjectString ;Creator *_cc .PdfObjectString ;Producer *_cc .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_cc .PdfObjectName ;
_cbag *_cc .PdfObjectDictionary ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_aaaaf PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_cc .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_facd []_cc .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_gbbg []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _cc .PdfObject ;Flags _cc .PdfObject ;};func (_baea *PdfReader )newPdfAnnotationCircleFromDict (_fbaf *_cc .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_fbf :=PdfAnnotationCircle {};
_dfe ,_cefe :=_baea .newPdfAnnotationMarkupFromDict (_fbaf );if _cefe !=nil {return nil ,_cefe ;};_fbf .PdfAnnotationMarkup =_dfe ;_fbf .BS =_fbaf .Get ("\u0042\u0053");_fbf .IC =_fbaf .Get ("\u0049\u0043");_fbf .BE =_fbaf .Get ("\u0042\u0045");_fbf .RD =_fbaf .Get ("\u0052\u0044");
return &_fbf ,nil ;};func (_acbag *pdfFontSimple )getFontEncoding ()(_cdcc string ,_fdfde map[_cbf .CharCode ]_cbf .GlyphName ,_fbcd error ){_cdcc ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _fedcg ,_cgcga :=_gbbb [_acbag ._baac ];
_cgcga {_cdcc =_fedcg ;}else if _acbag .fontFlags ()&_ffda !=0{for _bbdgc ,_cbegf :=range _gbbb {if _fa .Contains (_acbag ._baac ,_bbdgc ){_cdcc =_cbegf ;break ;};};};if _acbag .Encoding ==nil {return _cdcc ,nil ,nil ;};switch _ggbe :=_acbag .Encoding .(type ){case *_cc .PdfObjectName :return string (*_ggbe ),nil ,nil ;
case *_cc .PdfObjectDictionary :_gggec ,_acacg :=_cc .GetName (_ggbe .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _acacg {_cdcc =_gggec .String ();};if _cccgf :=_ggbe .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");
_cccgf !=nil {_gded ,_cafag :=_cc .GetArray (_cccgf );if !_cafag {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_ggbe ,_ggbe .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_cc .ErrTypeError ;};_fdfde ,_fbcd =_cbf .FromFontDifferences (_gded );};return _cdcc ,_fdfde ,_fbcd ;default:_df .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_acbag .Encoding ,_acbag .Encoding );
return "",nil ,_cc .ErrTypeError ;};};

// String returns a string representation of PdfTransformParamsDocMDP.
func (_cabgc *PdfTransformParamsDocMDP )String ()string {return _c .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_cabgc .Type ,_cabgc .P ,_cabgc .V );};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_bag :=NewPdfAnnotation ();_ecca :=&PdfAnnotationProjection {};_ecca .PdfAnnotation =_bag ;_ecca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bag .SetContext (_ecca );return _ecca ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_cge :=NewPdfAnnotation ();_ffec :=&PdfAnnotationPolyLine {};_ffec .PdfAnnotation =_cge ;_ffec .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cge .SetContext (_ffec );return _ffec ;};var _egdd =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// SetName sets the `Name` field of the signature.
func (_fbcbb *PdfSignature )SetName (name string ){_fbcbb .Name =_cc .MakeEncodedString (name ,true )};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_fff :=NewPdfAnnotation ();_dea :=&PdfAnnotationSound {};_dea .PdfAnnotation =_fff ;_dea .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fff .SetContext (_dea );return _dea ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_cgdgg *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _cgdgg ._dfcbb .(*PdfTilingPattern );};func _gfbge (_ggace *_cc .PdfObjectDictionary )(*PdfShadingType3 ,error ){_fbaea :=PdfShadingType3 {};_dcec :=_ggace .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");
if _dcec ==nil {_df .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");return nil ,ErrRequiredAttributeMissing ;
};_fgeag ,_aaeaca :=_dcec .(*_cc .PdfObjectArray );if !_aaeaca {_df .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dcec );return nil ,_cc .ErrTypeError ;
};if _fgeag .Len ()!=6{_df .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_fgeag .Len ());return nil ,ErrInvalidAttribute ;};_fbaea .Coords =_fgeag ;
if _fbffe :=_ggace .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_fbffe !=nil {_fbffe =_cc .TraceToDirectObject (_fbffe );_afcg ,_cbedbe :=_fbffe .(*_cc .PdfObjectArray );if !_cbedbe {_df .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fbffe );
return nil ,_cc .ErrTypeError ;};_fbaea .Domain =_afcg ;};_dcec =_ggace .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _dcec ==nil {_df .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_fbaea .Function =[]PdfFunction {};if _agfcf ,_fabdg :=_dcec .(*_cc .PdfObjectArray );_fabdg {for _ ,_eebgb :=range _agfcf .Elements (){_ecgab ,_deaab :=_adade (_eebgb );if _deaab !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_deaab );
return nil ,_deaab ;};_fbaea .Function =append (_fbaea .Function ,_ecgab );};}else {_dbda ,_effbad :=_adade (_dcec );if _effbad !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_effbad );
return nil ,_effbad ;};_fbaea .Function =append (_fbaea .Function ,_dbda );};if _ddebad :=_ggace .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_ddebad !=nil {_ddebad =_cc .TraceToDirectObject (_ddebad );_caefb ,_cgcae :=_ddebad .(*_cc .PdfObjectArray );
if !_cgcae {_df .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ddebad );return nil ,_cc .ErrTypeError ;};if _caefb .Len ()!=2{_df .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_caefb .Len ());
return nil ,ErrInvalidAttribute ;};_fbaea .Extend =_caefb ;};return &_fbaea ,nil ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_ac *PdfAction )GetContext ()PdfModel {if _ac ==nil {return nil ;};return _ac ._cf ;};

// ToPdfObject implements interface PdfModel.
func (_dgdgf *PdfAnnotationProjection )ToPdfObject ()_cc .PdfObject {_dgdgf .PdfAnnotation .ToPdfObject ();_fcffb :=_dgdgf ._cef ;_cggcg :=_fcffb .PdfObject .(*_cc .PdfObjectDictionary );_dgdgf .PdfAnnotationMarkup .appendToPdfDictionary (_cggcg );return _fcffb ;
};func (_dga *PdfReader )newPdfActionJavaScriptFromDict (_cege *_cc .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_cege .Get ("\u004a\u0053")},nil ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_ffe :=NewPdfAction ();_bbdg :=&PdfActionGoToR {};_bbdg .PdfAction =_ffe ;_ffe .SetContext (_bbdg );return _bbdg ;};func _ffge (_befec _cc .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_df .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_befec .String (),_befec );
_feeg :=NewPdfColorspaceSpecialPattern ();if _gcef ,_gccg :=_befec .(*_cc .PdfIndirectObject );_gccg {_feeg ._aadd =_gcef ;};_befec =_cc .TraceToDirectObject (_befec );if _efcc ,_gbfeb :=_befec .(*_cc .PdfObjectName );_gbfeb {if *_efcc !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_c .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _feeg ,nil ;};_eecg ,_dccd :=_befec .(*_cc .PdfObjectArray );if !_dccd {_df .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_befec );
return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _eecg .Len ()!=1&&_eecg .Len ()!=2{_df .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_eecg );
return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_befec =_eecg .Get (0);if _dfbaa ,_fabb :=_befec .(*_cc .PdfObjectName );_fabb {if *_dfbaa !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_df .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_dfbaa );
return nil ,_c .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _eecg .Len ()> 1{_befec =_eecg .Get (1);_befec =_cc .TraceToDirectObject (_befec );_eaeba ,_eedac :=NewPdfColorspaceFromPdfObject (_befec );if _eedac !=nil {return nil ,_eedac ;
};_feeg .UnderlyingCS =_eaeba ;};_df .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_feeg .UnderlyingCS );
return _feeg ,nil ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _cc .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _cc .PdfObject ;Contents _cc .PdfObject ;
Rotate *int64 ;Group _cc .PdfObject ;Thumb _cc .PdfObject ;B _cc .PdfObject ;Dur _cc .PdfObject ;Trans _cc .PdfObject ;AA _cc .PdfObject ;Metadata _cc .PdfObject ;PieceInfo _cc .PdfObject ;StructParents _cc .PdfObject ;ID _cc .PdfObject ;PZ _cc .PdfObject ;
SeparationInfo _cc .PdfObject ;Tabs _cc .PdfObject ;TemplateInstantiated _cc .PdfObject ;PresSteps _cc .PdfObject ;UserUnit _cc .PdfObject ;VP _cc .PdfObject ;Annots _cc .PdfObject ;_dagff []*PdfAnnotation ;_gcead *_cc .PdfObjectDictionary ;_bfgcg *_cc .PdfIndirectObject ;
_gebd _cc .PdfObjectDictionary ;_caebc *PdfReader ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _cc .PdfObject ;Movie _cc .PdfObject ;A _cc .PdfObject ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";
ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";
ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";
ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";
ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";
ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// String returns a string representation of what flags are set.
func (_eegg FieldFlag )String ()string {_efdd :="";if _eegg ==FieldFlagClear {_efdd ="\u0043\u006c\u0065a\u0072";return _efdd ;};if _eegg &FieldFlagReadOnly > 0{_efdd +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _eegg &FieldFlagRequired > 0{_efdd +="\u007cR\u0065\u0071\u0075\u0069\u0072\u0065d";
};if _eegg &FieldFlagNoExport > 0{_efdd +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _eegg &FieldFlagNoToggleToOff > 0{_efdd +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _eegg &FieldFlagRadio > 0{_efdd +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _eegg &FieldFlagPushbutton > 0{_efdd +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _eegg &FieldFlagRadiosInUnision > 0{_efdd +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _eegg &FieldFlagMultiline > 0{_efdd +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _eegg &FieldFlagPassword > 0{_efdd +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _eegg &FieldFlagFileSelect > 0{_efdd +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _eegg &FieldFlagDoNotScroll > 0{_efdd +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _eegg &FieldFlagComb > 0{_efdd +="\u007c\u0043\u006fm\u0062";};if _eegg &FieldFlagRichText > 0{_efdd +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _eegg &FieldFlagDoNotSpellCheck > 0{_efdd +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _eegg &FieldFlagCombo > 0{_efdd +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _eegg &FieldFlagEdit > 0{_efdd +="\u007c\u0045\u0064i\u0074";};if _eegg &FieldFlagSort > 0{_efdd +="\u007c\u0053\u006fr\u0074";};if _eegg &FieldFlagMultiSelect > 0{_efdd +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _eegg &FieldFlagCommitOnSelChange > 0{_efdd +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _fa .Trim (_efdd ,"\u007c");};

// GetContainingPdfObject implements interface PdfModel.
func (_aca *PdfAnnotation )GetContainingPdfObject ()_cc .PdfObject {return _aca ._cef };

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_agac *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _ede .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_ffeef :=field .V ;if _ffeef ==nil {return _ede .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_gbfbe :=pageNum -1;
if _gbfbe < 0||_gbfbe > len (_agac ._dfaa )-1{return _c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_fadc :=_agac .Reader .PageList [_gbfbe ];field .P =_fadc .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_cc .MakeString (_c .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_fadc .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _agac ._efeb ==_agac ._eaeg .AcroForm {_agac ._efeb =_agac .Reader .AcroForm ;};_edcd :=_agac ._efeb ;if _edcd ==nil {_edcd =NewPdfAcroForm ();};_edcd .SigFlags =_cc .MakeInteger (3);
if _edcd .NeedAppearances !=nil {_edcd .NeedAppearances =nil ;};_ggfa :=append (_edcd .AllFields (),field .PdfField );_edcd .Fields =&_ggfa ;_agac .ReplaceAcroForm (_edcd );_agac .UpdatePage (_fadc );_agac ._dfaa [_gbfbe ]=_fadc ;if _ ,_cffe :=field .V .GetDocMDPPermission ();
_cffe {_agac ._fdg =NewPermissions (field .V );};return nil ;};

// GetRuneMetrics iterates through each font in the list of fonts the returns the fonts.CharMetrics from working font.
func (_ccae *MultipleFontEncoder )GetRuneMetrics (r rune )(_edg .CharMetrics ,bool ){_adga :=_ccae .CurrentFont ;_eecff ,_accab :=_adga .GetRuneMetrics (r );for _cefcc :=1;_cefcc < len (_ccae ._dbfbg )&&_eecff .Wx ==0;_cefcc ++{_adga =_ccae ._dbfbg [_cefcc ];
_eecff ,_accab =_adga .GetRuneMetrics (r );};return _eecff ,_accab ;};

// ToPdfObject implements interface PdfModel.
func (_bfeb *PdfAnnotationSound )ToPdfObject ()_cc .PdfObject {_bfeb .PdfAnnotation .ToPdfObject ();_dfad :=_bfeb ._cef ;_dgab :=_dfad .PdfObject .(*_cc .PdfObjectDictionary );_bfeb .PdfAnnotationMarkup .appendToPdfDictionary (_dgab );_dgab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0053\u006f\u0075n\u0064"));
_dgab .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_bfeb .Sound );_dgab .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bfeb .Name );return _dfad ;};

// SetAnnotations sets the annotations list.
func (_gbbf *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_gbbf ._dagff =annotations };

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// GetNumComponents returns the number of color components.
func (_ffbe *PdfColorspaceICCBased )GetNumComponents ()int {return _ffbe .N };

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_fcbgfd *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_decgd :=_fcbgfd .GetContentStreamObjs ();wrapContents =wrapContents &&len (_decgd )> 0;_ggbead :=_cc .NewFlateEncoder ();_eegcc :=_cc .MakeArray ();if wrapContents {_gacc ,_ddbf :=_cc .MakeStream ([]byte ("\u0071\u000a"),_ggbead );
if _ddbf !=nil {return _ddbf ;};_eegcc .Append (_gacc );};_eegcc .Append (_decgd ...);if wrapContents {_adefc ,_gcbcd :=_cc .MakeStream ([]byte ("\u000a\u0051\u000a"),_ggbead );if _gcbcd !=nil {return _gcbcd ;};_eegcc .Append (_adefc );};_efbg ,_bcgg :=_cc .MakeStream (cs ,_ggbead );
if _bcgg !=nil {return _bcgg ;};_eegcc .Append (_efbg );_fcbgfd .Contents =_eegcc ;return nil ;};

// GetOutlineTree returns the outline tree.
func (_gfaf *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _gfaf ._bedbb };func (_cdb *PdfReader )newPdfActionMovieFromDict (_ece *_cc .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_ece .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_ece .Get ("\u0054"),Operation :_ece .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// ToPdfObject implements interface PdfModel.
func (_befeb *EmbeddedFile )ToPdfObject ()_cc .PdfObject {_gabc :=_cc .NewFlateEncoder ();_deccb ,_eabba :=_cc .MakeStream (_befeb .Content ,_gabc );if _eabba !=nil {_df .Log .Debug ("\u0046\u0061\u0069\u006c\u0065d\u0020\u0074\u006f\u0020\u0063\u0072\u0065\u0061\u0074\u0065\u0020\u0065\u006db\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_eabba );
return nil ;};_dacba :=_deccb .PdfObjectDictionary ;_dacba .Set ("\u0054\u0079\u0070\u0065",_cc .MakeName ("\u0045\u006d\u0062e\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065"));_dacba .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeEncodedString ("\u0074\u0065\u0078\u0074\u002f\u0070\u006c\u0061\u0069\u006e",true ));
_adbg :=_cc .MakeDict ();_adbg .Set ("\u0043\u0068\u0065\u0063\u006b\u0053\u0075\u006d",_cc .MakeString (_befeb .Hash [:]));_adbg .Set ("\u0053\u0069\u007a\u0065",_cc .MakeInteger (int64 (len (_befeb .Content ))));_bega :=_befeb .CreationTime ;if _bega .IsZero (){_bega =_b .Now ();
};_fggb :=_befeb .ModTime ;if _fggb .IsZero (){_fggb =_bega ;};_ccdcc ,_eabba :=NewPdfDateFromTime (_bega );if _eabba !=nil {_df .Log .Debug ("\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074o\u0020\u0063\u0072ea\u0074\u0065\u0020\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0063\u0072\u0065\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0065\u003a \u0025\u0076",_eabba );
return nil ;};_aecda ,_eabba :=NewPdfDateFromTime (_fggb );if _eabba !=nil {_df .Log .Debug ("\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074o\u0020\u0063\u0072ea\u0074\u0065\u0020\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u0063\u0072\u0065\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0065\u003a \u0025\u0076",_eabba );
return nil ;};_adbg .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ccdcc .ToPdfObject ());_adbg .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_aecda .ToPdfObject ());_dacba .Set ("\u0050\u0061\u0072\u0061\u006d\u0073",_adbg );
_cecdg :=_cc .MakeDict ();_cecdg .Set (*_cc .MakeName ("\u0046"),_deccb );return _cecdg ;};

// ToPdfObject implements interface PdfModel.
func (_eea *PdfActionImportData )ToPdfObject ()_cc .PdfObject {_eea .PdfAction .ToPdfObject ();_gaf :=_eea ._dae ;_fca :=_gaf .PdfObject .(*_cc .PdfObjectDictionary );_fca .SetIfNotNil ("\u0053",_cc .MakeName (string (ActionTypeImportData )));if _eea .F !=nil {_fca .Set ("\u0046",_eea .F .ToPdfObject ());
};return _gaf ;};func (_debc *PdfReader )newPdfAnnotationWatermarkFromDict (_feaf *_cc .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_cdc :=PdfAnnotationWatermark {};_cdc .FixedPrint =_feaf .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");
return &_cdc ,nil ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _cc .PdfObject ;BS _cc .PdfObject ;LE _cc .PdfObject ;IC _cc .PdfObject ;LL _cc .PdfObject ;LLE _cc .PdfObject ;Cap _cc .PdfObject ;IT _cc .PdfObject ;LLO _cc .PdfObject ;CP _cc .PdfObject ;
Measure _cc .PdfObject ;CO _cc .PdfObject ;};func _egfd (_bgda _cc .PdfObject )(*PdfShading ,error ){_agaege :=&PdfShading {};var _efgb *_cc .PdfObjectDictionary ;if _gffec ,_dcfg :=_cc .GetIndirect (_bgda );_dcfg {_agaege ._ccfe =_gffec ;_gfgc ,_affe :=_gffec .PdfObject .(*_cc .PdfObjectDictionary );
if !_affe {_df .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_cc .ErrTypeError ;};_efgb =_gfgc ;}else if _bfbdb ,_ebdf :=_cc .GetStream (_bgda );
_ebdf {_agaege ._ccfe =_bfbdb ;_efgb =_bfbdb .PdfObjectDictionary ;}else if _aeeef ,_cdcef :=_cc .GetDict (_bgda );_cdcef {_agaege ._ccfe =_aeeef ;_efgb =_aeeef ;}else {_df .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_bgda );
return nil ,_cc .ErrTypeError ;};if _efgb ==nil {_df .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_ede .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_bgda =_efgb .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _bgda ==nil {_df .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bgda =_cc .TraceToDirectObject (_bgda );_deaae ,_cdbag :=_bgda .(*_cc .PdfObjectInteger );if !_cdbag {_df .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_bgda );
return nil ,_cc .ErrTypeError ;};if *_deaae < 1||*_deaae > 7{_df .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_deaae );
return nil ,_cc .ErrTypeError ;};_agaege .ShadingType =_deaae ;_bgda =_efgb .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _bgda ==nil {_df .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cfbfc ,_dfaee :=NewPdfColorspaceFromPdfObject (_bgda );if _dfaee !=nil {_df .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_dfaee );
return nil ,_dfaee ;};_agaege .ColorSpace =_cfbfc ;_bgda =_efgb .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _bgda !=nil {_bgda =_cc .TraceToDirectObject (_bgda );_daceg ,_dgdcda :=_bgda .(*_cc .PdfObjectArray );if !_dgdcda {_df .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_bgda );
return nil ,_cc .ErrTypeError ;};_agaege .Background =_daceg ;};_bgda =_efgb .Get ("\u0042\u0042\u006f\u0078");if _bgda !=nil {_bgda =_cc .TraceToDirectObject (_bgda );_becaf ,_ddaec :=_bgda .(*_cc .PdfObjectArray );if !_ddaec {_df .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_bgda );
return nil ,_cc .ErrTypeError ;};_caafe ,_egcac :=NewPdfRectangle (*_becaf );if _egcac !=nil {_df .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_egcac );return nil ,_egcac ;};_agaege .BBox =_caafe ;};_bgda =_efgb .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _bgda !=nil {_bgda =_cc .TraceToDirectObject (_bgda );_ggdcd ,_bdbab :=_bgda .(*_cc .PdfObjectBool );if !_bdbab {_df .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bgda );
return nil ,_cc .ErrTypeError ;};_agaege .AntiAlias =_ggdcd ;};switch *_deaae {case 1:_fafcd ,_gdfe :=_eagadg (_efgb );if _gdfe !=nil {return nil ,_gdfe ;};_fafcd .PdfShading =_agaege ;_agaege ._beacb =_fafcd ;return _agaege ,nil ;case 2:_adgad ,_dgfgg :=_ggbgb (_efgb );
if _dgfgg !=nil {return nil ,_dgfgg ;};_adgad .PdfShading =_agaege ;_agaege ._beacb =_adgad ;return _agaege ,nil ;case 3:_gcdac ,_cdegc :=_gfbge (_efgb );if _cdegc !=nil {return nil ,_cdegc ;};_gcdac .PdfShading =_agaege ;_agaege ._beacb =_gcdac ;return _agaege ,nil ;
case 4:_bgffa ,_cgdeb :=_acdag (_efgb );if _cgdeb !=nil {return nil ,_cgdeb ;};_bgffa .PdfShading =_agaege ;_agaege ._beacb =_bgffa ;return _agaege ,nil ;case 5:_eedgb ,_ebga :=_eegba (_efgb );if _ebga !=nil {return nil ,_ebga ;};_eedgb .PdfShading =_agaege ;
_agaege ._beacb =_eedgb ;return _agaege ,nil ;case 6:_ceagg ,_ffcda :=_fbbag (_efgb );if _ffcda !=nil {return nil ,_ffcda ;};_ceagg .PdfShading =_agaege ;_agaege ._beacb =_ceagg ;return _agaege ,nil ;case 7:_fdecb ,_dcdf :=_agbee (_efgb );if _dcdf !=nil {return nil ,_dcdf ;
};_fdecb .PdfShading =_agaege ;_agaege ._beacb =_fdecb ;return _agaege ,nil ;};return nil ,_ede .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_cdbe :=NewPdfAnnotation ();_ebab :=&PdfAnnotationScreen {};_ebab .PdfAnnotation =_cdbe ;_cdbe .SetContext (_ebab );return _ebab ;};

// ToPdfObject converts the font to a PDF representation.
func (_acca *pdfFontType0 )ToPdfObject ()_cc .PdfObject {if _acca ._gdab ==nil {_acca ._gdab =&_cc .PdfIndirectObject {};};_aace :=_acca .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_acca ._gdab .PdfObject =_aace ;if _acca .Encoding !=nil {_aace .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_acca .Encoding );
}else if _acca ._feggc !=nil {_aace .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_acca ._feggc .ToPdfObject ());};if _acca .DescendantFont !=nil {_aace .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_cc .MakeArray (_acca .DescendantFont .ToPdfObject ()));
};return _acca ._gdab ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _b .Time ){_aaefb .Lock ();defer _aaefb .Unlock ();_cbfbg =modifiedDate ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_bacag *_cc .PdfIndirectObject ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_cc .PdfObjectStream ;Data []byte ;_bbddd *_cc .PdfIndirectObject ;_ecdc *_cc .PdfObjectStream ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_bced *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_fgga ,_ddae :=color .(*PdfColorDeviceCMYK );if !_ddae {_df .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_ede .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_edgd :=_fgga .C ();_adfg :=_fgga .M ();_bead :=_fgga .Y ();_fdda :=_fgga .K ();_edgd =_edgd *(1-_fdda )+_fdda ;_adfg =_adfg *(1-_fdda )+_fdda ;
_bead =_bead *(1-_fdda )+_fdda ;_cbfdb :=1-_edgd ;_egbf :=1-_adfg ;_bfed :=1-_bead ;return NewPdfColorDeviceRGB (_cbfdb ,_egbf ,_bfed ),nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_gfdea *PdfShadingPattern )ToPdfObject ()_cc .PdfObject {_gfdea .PdfPattern .ToPdfObject ();_abdcd :=_gfdea .getDict ();if _gfdea .Shading !=nil {_abdcd .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_gfdea .Shading .ToPdfObject ());};if _gfdea .Matrix !=nil {_abdcd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gfdea .Matrix );
};if _gfdea .ExtGState !=nil {_abdcd .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_gfdea .ExtGState );};return _gfdea ._ecegf ;};func (_fdfbd *XObjectImage )getParamsDict ()*_cc .PdfObjectDictionary {_fcdee :=_cc .MakeDict ();_fcdee .Set ("\u0057\u0069\u0064t\u0068",_cc .MakeInteger (*_fdfbd .Width ));
_fcdee .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_cc .MakeInteger (*_fdfbd .Height ));_fcdee .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_cc .MakeInteger (int64 (_fdfbd .ColorSpace .GetNumComponents ())));
_fcdee .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cc .MakeInteger (*_fdfbd .BitsPerComponent ));return _fcdee ;};func (_fbcca fontCommon )fontFlags ()int {if _fbcca ._cagc ==nil {return 0;};return _fbcca ._cagc ._febd ;
};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_abegb *PdfAcroForm )GetContainingPdfObject ()_cc .PdfObject {return _abegb ._cgbg };

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_cgged *PdfReader )GetCatalogMetadata ()(_cc .PdfObject ,bool ){if _cgged ._gfed ==nil {return nil ,false ;};_bdac :=_cgged ._gfed .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _bdac ,_bdac !=nil ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_cca :=NewPdfAction ();_bff :=&PdfActionLaunch {};_bff .PdfAction =_cca ;_cca .SetContext (_bff );return _bff ;};func (_abefg *pdfFontSimple )addEncoding ()error {var (_febc string ;_gffe map[_cbf .CharCode ]_cbf .GlyphName ;
_dffa _cbf .SimpleEncoder ;);if _abefg .Encoder ()!=nil {_fecc ,_fafg :=_abefg .Encoder ().(_cbf .SimpleEncoder );if _fafg &&_fecc !=nil {_febc =_fecc .BaseName ();};};if _abefg .Encoding !=nil {_dbaeg ,_dcgag ,_eede :=_abefg .getFontEncoding ();if _eede !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_abefg ._baac ,_abefg ._edfc ,_abefg .Encoding ,_abefg .Encoding ,_eede );
return _eede ;};if _dbaeg !=""{_febc =_dbaeg ;};_gffe =_dcgag ;_dffa ,_eede =_cbf .NewSimpleTextEncoder (_febc ,_gffe );if _eede !=nil {return _eede ;};};if _dffa ==nil {_dgbgf :=_abefg ._cagc ;if _dgbgf !=nil {switch _abefg ._edfc {case "\u0054\u0079\u0070e\u0031":if _dgbgf .fontFile !=nil &&_dgbgf .fontFile ._abdgb !=nil {_df .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_dffa =_dgbgf .fontFile ._abdgb ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _dgbgf ._gbgc !=nil {_df .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_gfdd ,_eaeee :=_dgbgf ._gbgc .MakeEncoder ();
if _eaeee ==nil {_dffa =_gfdd ;};if _abefg ._fgbf ==nil {_abefg ._fgbf =_dgbgf ._gbgc .MakeToUnicode ();};};};};};if _dffa !=nil {if _gffe !=nil {_df .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gffe ,_abefg .baseFields ());
_dffa =_cbf .ApplyDifferences (_dffa ,_gffe );};_abefg .SetEncoder (_dffa );};return nil ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _cc .StreamEncoder ;FormType _cc .PdfObject ;BBox _cc .PdfObject ;Matrix _cc .PdfObject ;Resources *PdfPageResources ;Group _cc .PdfObject ;Ref _cc .PdfObject ;MetaData _cc .PdfObject ;PieceInfo _cc .PdfObject ;LastModified _cc .PdfObject ;
StructParent _cc .PdfObject ;StructParents _cc .PdfObject ;OPI _cc .PdfObject ;OC _cc .PdfObject ;Name _cc .PdfObject ;

// Stream data.
Stream []byte ;_accabd *_cc .PdfObjectStream ;};

// ToPdfObject converts date to a PDF string object.
func (_bgffe *PdfDate )ToPdfObject ()_cc .PdfObject {_cedce :=_c .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_bgffe ._dceda ,_bgffe ._ecgba ,_bgffe ._bdddb ,_bgffe ._fgcccb ,_bgffe ._abdd ,_bgffe ._eaded ,_bgffe ._dafbd ,_bgffe ._gcded ,_bgffe ._ebdg );
return _cc .MakeString (_cedce );};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_cc .PdfObjectName ;P *_cc .PdfObjectInteger ;V *_cc .PdfObjectName ;};

// ToPdfObject implements interface PdfModel.
func (_gdb *PdfActionNamed )ToPdfObject ()_cc .PdfObject {_gdb .PdfAction .ToPdfObject ();_dag :=_gdb ._dae ;_adc :=_dag .PdfObject .(*_cc .PdfObjectDictionary );_adc .SetIfNotNil ("\u0053",_cc .MakeName (string (ActionTypeNamed )));_adc .SetIfNotNil ("\u004e",_gdb .N );
return _dag ;};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};func (_ebee *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _ecaeg :=_ebee ._cagc ;_ecaeg !=nil {return _ecaeg ;};return _ebee ._bbaccb ;};func (_ecgbb *PdfReader )newPdfFieldSignatureFromDict (_bggb *_cc .PdfObjectDictionary )(*PdfFieldSignature ,error ){_ecfe :=&PdfFieldSignature {};
_egfbe ,_ebcf :=_cc .GetIndirect (_bggb .Get ("\u0056"));if _ebcf {var _cedb error ;_ecfe .V ,_cedb =_ecgbb .newPdfSignatureFromIndirect (_egfbe );if _cedb !=nil {return nil ,_cedb ;};};_ecfe .Lock ,_ =_cc .GetIndirect (_bggb .Get ("\u004c\u006f\u0063\u006b"));
_ecfe .SV ,_ =_cc .GetIndirect (_bggb .Get ("\u0053\u0056"));return _ecfe ,nil ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_eceee *PdfPage )GetContentStreamObjs ()[]_cc .PdfObject {if _eceee .Contents ==nil {return nil ;};_caffa :=_cc .TraceToDirectObject (_eceee .Contents );if _aaggf ,_dbfe :=_caffa .(*_cc .PdfObjectArray );_dbfe {return _aaggf .Elements ();};return []_cc .PdfObject {_caffa };
};

// ColorToRGB converts a CalGray color to an RGB color.
func (_dcdbb *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_fcbe ,_caff :=color .(*PdfColorCalGray );if !_caff {_df .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_ede .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_fcbe .Val ();X :=_dcdbb .WhitePoint [0]*_ed .Pow (ANorm ,_dcdbb .Gamma );Y :=_dcdbb .WhitePoint [1]*_ed .Pow (ANorm ,_dcdbb .Gamma );
Z :=_dcdbb .WhitePoint [2]*_ed .Pow (ANorm ,_dcdbb .Gamma );_bcdda :=3.240479*X +-1.537150*Y +-0.498535*Z ;_abdcf :=-0.969256*X +1.875992*Y +0.041556*Z ;_cacd :=0.055648*X +-0.204043*Y +1.057311*Z ;_bcdda =_ed .Min (_ed .Max (_bcdda ,0),1.0);_abdcf =_ed .Min (_ed .Max (_abdcf ,0),1.0);
_cacd =_ed .Min (_ed .Max (_cacd ,0),1.0);return NewPdfColorDeviceRGB (_bcdda ,_abdcf ,_cacd ),nil ;};func _dcbcbe (_cagcb _cd .ReadSeeker ,_bdeef *ReaderOpts ,_gbceb bool ,_ffggf string )(*PdfReader ,error ){if _bdeef ==nil {_bdeef =NewReaderOpts ();};
_gddfb :=*_bdeef ;_edefgg :=&PdfReader {_ddbcgf :_cagcb ,_gcfcc :map[_cc .PdfObject ]struct{}{},_ecbgec :_gfdgc (),_fcae :_bdeef .LazyLoad ,_bgcfe :_bdeef .ComplianceMode ,_dffaf :_gbceb ,_gaadb :&_gddfb };_egcc ,_fcggf :=_acef ("\u0072");if _fcggf !=nil {return nil ,_fcggf ;
};_fcggf =_abc .Track (_egcc ,_ffggf );if _fcggf !=nil {return nil ,_fcggf ;};_edefgg ._bfffa =_egcc ;var _gegbb *_cc .PdfParser ;if !_edefgg ._bgcfe {_gegbb ,_fcggf =_cc .NewParser (_cagcb );}else {_gegbb ,_fcggf =_cc .NewCompliancePdfParser (_cagcb );
};if _fcggf !=nil {return nil ,_fcggf ;};_edefgg ._bbed =_gegbb ;_eggg ,_fcggf :=_edefgg .IsEncrypted ();if _fcggf !=nil {return nil ,_fcggf ;};if !_eggg {_fcggf =_edefgg .loadStructure ();if _fcggf !=nil {return nil ,_fcggf ;};}else if _gbceb {_fcfad ,_cgage :=_edefgg .Decrypt ([]byte (_bdeef .Password ));
if _cgage !=nil {return nil ,_cgage ;};if !_fcfad {return nil ,_ede .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_edefgg ._dgage =make (map[*PdfReader ]*PdfReader );_edefgg ._bdeae =make ([]*PdfReader ,_gegbb .GetRevisionNumber ());return _edefgg ,nil ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_aeae *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_gebcf :=_dac .NewReader (img .getBase ());_gdgda :=_ec .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_aeae .AlternateSpace .GetNumComponents (),nil ,img ._ccee ,nil );
_baed :=_dac .NewWriter (_gdgda );_fgcca :=_ed .Pow (2,float64 (img .BitsPerComponent ))-1;_df .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_df .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_aeae .TintTransform );_fgbcb :=_aeae .AlternateSpace .DecodeArray ();var (_agab uint32 ;_ggdgg error ;);for {_agab ,_ggdgg =_gebcf .ReadSample ();
if _ggdgg ==_cd .EOF {break ;};if _ggdgg !=nil {return img ,_ggdgg ;};_abgb :=float64 (_agab )/_fgcca ;_fgdc ,_ffaea :=_aeae .TintTransform .Evaluate ([]float64 {_abgb });if _ffaea !=nil {return img ,_ffaea ;};for _fdcf ,_adcc :=range _fgdc {_fbda :=_ec .LinearInterpolate (_adcc ,_fgbcb [_fdcf *2],_fgbcb [_fdcf *2+1],0,1);
if _ffaea =_baed .WriteSample (uint32 (_fbda *_fgcca ));_ffaea !=nil {return img ,_ffaea ;};};};return _aeae .AlternateSpace .ImageToRGB (_bagc (&_gdgda ));};

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_cac :=&PdfAppender {_bffe :reader ._ddbcgf ,Reader :reader ,_cafa :reader ._bbed ,_edaf :reader ._gcfcc };_afe ,_gdge :=_cac ._bffe .Seek (0,_cd .SeekEnd );
if _gdge !=nil {return nil ,_gdge ;};_cac ._eddf =_afe ;if _ ,_gdge =_cac ._bffe .Seek (0,_cd .SeekStart );_gdge !=nil {return nil ,_gdge ;};_cac ._eaeg ,_gdge =NewPdfReaderWithOpts (_cac ._bffe ,opts );if _gdge !=nil {return nil ,_gdge ;};for _ ,_eeg :=range _cac .Reader .GetObjectNums (){if _cac ._dbf < _eeg {_cac ._dbf =_eeg ;
};};_cac ._eafdg =_cac ._cafa .GetXrefTable ();_cac ._agg =_cac ._cafa .GetXrefOffset ();_cac ._dfaa =append (_cac ._dfaa ,_cac ._eaeg .PageList ...);_cac ._bdge =make (map[_cc .PdfObject ]struct{});_cac ._gbdc =make (map[_cc .PdfObject ]int64 );_cac ._fbfa =make (map[_cc .PdfObject ]struct{});
_cac ._efeb =_cac ._eaeg .AcroForm ;_cac ._gbfd =_cac ._eaeg .DSS ;if opts !=nil {_cac ._dca =opts .Password ;};if encryptOptions !=nil {_cac ._ecbdg =encryptOptions ;};return _cac ,nil ;};

// AddWatermarkImage adds a watermark to the page.
func (_begef *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_cgafb ,_adfbb :=_begef .GetMediaBox ();if _adfbb !=nil {return _adfbb ;};_gdeddc :=_cgafb .Urx -_cgafb .Llx ;_fcfff :=_cgafb .Ury -_cgafb .Lly ;_bbaf :=float64 (*ximg .Width );
_cfedc :=(_gdeddc -_bbaf )/2;if opt .FitToWidth {_bbaf =_gdeddc ;_cfedc =0;};_ecffb :=_fcfff ;_badbf :=float64 (0);if opt .PreserveAspectRatio {_ecffb =_bbaf *float64 (*ximg .Height )/float64 (*ximg .Width );_badbf =(_fcfff -_ecffb )/2;};if _begef .Resources ==nil {_begef .Resources =NewPdfPageResources ();
};_caee :=0;_cbdga :=_cc .PdfObjectName (_c .Sprintf ("\u0049\u006d\u0077%\u0064",_caee ));for _begef .Resources .HasXObjectByName (_cbdga ){_caee ++;_cbdga =_cc .PdfObjectName (_c .Sprintf ("\u0049\u006d\u0077%\u0064",_caee ));};_adfbb =_begef .AddImageResource (_cbdga ,ximg );
if _adfbb !=nil {return _adfbb ;};_caee =0;_ddecf :=_cc .PdfObjectName (_c .Sprintf ("\u0047\u0053\u0025\u0064",_caee ));for _begef .HasExtGState (_ddecf ){_caee ++;_ddecf =_cc .PdfObjectName (_c .Sprintf ("\u0047\u0053\u0025\u0064",_caee ));};_cgeg :=_cc .MakeDict ();
_cgeg .Set ("\u0042\u004d",_cc .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_cgeg .Set ("\u0043\u0041",_cc .MakeFloat (opt .Alpha ));_cgeg .Set ("\u0063\u0061",_cc .MakeFloat (opt .Alpha ));_adfbb =_begef .AddExtGState (_ddecf ,_cgeg );if _adfbb !=nil {return _adfbb ;
};_agcbd :=_c .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_ddecf ,_bbaf ,_ecffb ,_cfedc ,_badbf ,_cbdga );
_begef .AddContentStreamByString (_agcbd );return nil ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _cc .PdfObject ;Name _cc .PdfObject ;State _cc .PdfObject ;StateModel _cc .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_afcc *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ede .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ceff :=vals [0];if _ceff < 0.0||_ceff > 1.0{_df .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _ceff < 0.0{_ceff =0.0;}else if _ceff > 1.0{_ceff =1.0;};return NewPdfColorDeviceGray (_ceff ),nil ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_fgg :=NewPdfAnnotation ();_daac :=&PdfAnnotationFreeText {};_daac .PdfAnnotation =_fgg ;_daac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fgg .SetContext (_daac );return _daac ;};

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _fd .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_cc .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_cc .MakeInteger (int64 (permission )),V :_cc .MakeName ("\u0031\u002e\u0032")};
};func (_bfd *PdfReader )newPdfAnnotationStampFromDict (_becf *_cc .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_efa :=PdfAnnotationStamp {};_adae ,_bge :=_bfd .newPdfAnnotationMarkupFromDict (_becf );if _bge !=nil {return nil ,_bge ;};_efa .PdfAnnotationMarkup =_adae ;
_efa .Name =_becf .Get ("\u004e\u0061\u006d\u0065");return &_efa ,nil ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_gd :=NewPdfAction ();_eb :=&PdfActionTrans {};_eb .PdfAction =_gd ;_gd .SetContext (_eb );return _eb ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the page using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened for the page.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
func (_egeff *PdfPage )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {_gfcfb :=map[*PdfAnnotation ]bool {};_cded ,_aadde :=_egeff .GetAnnotations ();if _aadde !=nil {return _aadde ;};_gacf :=false ;for _ ,_caea :=range _cded {if opts .AnnotFilterFunc !=nil {_gfcfb [_caea ]=opts .AnnotFilterFunc (_caea );
}else {_gfcfb [_caea ]=true ;};if _gfcfb [_caea ]{_gacf =true ;};};if !_gacf {return nil ;};return _egeff .flattenFieldsWithOpts (appgen ,opts ,_gfcfb );};

// GetPdfVersion gets the version of the PDF used within this document.
func (_ceefg *PdfWriter )GetPdfVersion ()string {return _ceefg .getPdfVersion ()};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_cgd :=NewPdfAction ();_gfc :=&PdfActionHide {};_gfc .PdfAction =_cgd ;_cgd .SetContext (_gfc );return _gfc ;};func _dedad (_gfcd *_cc .PdfIndirectObject ,_bcffc *_cc .PdfObjectDictionary )(*DSS ,error ){if _gfcd ==nil {_gfcd =_cc .MakeIndirectObject (nil );
};_gfcd .PdfObject =_cc .MakeDict ();_dfcg :=map[string ]*VRI {};if _eeed ,_dbbf :=_cc .GetDict (_bcffc .Get ("\u0056\u0052\u0049"));_dbbf {for _ ,_cade :=range _eeed .Keys (){if _ebdb ,_cgfd :=_cc .GetDict (_eeed .Get (_cade ));_cgfd {_dfcg [_fa .ToUpper (_cade .String ())]=_becc (_ebdb );
};};};return &DSS {Certs :_gbeac (_bcffc .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_gbeac (_bcffc .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_gbeac (_bcffc .Get ("\u0043\u0052\u004c\u0073")),VRI :_dfcg ,_efcg :_gfcd },nil ;};

// SetContext sets the sub action (context).
func (_dacg *PdfAction )SetContext (ctx PdfModel ){_dacg ._cf =ctx };func (_bgebd *PdfWriter )writeBytes (_bebef []byte ){if _bgebd ._fdeagb !=nil {return ;};_bbgea ,_ggbbg :=_bgebd ._gacfdb .Write (_bebef );_bgebd ._edgfea +=int64 (_bbgea );_bgebd ._fdeagb =_ggbbg ;
};func _dfca (_eaffd *XObjectForm )(*PdfRectangle ,bool ,error ){if _ecff ,_eebfb :=_eaffd .BBox .(*_cc .PdfObjectArray );_eebfb {_bfc ,_ababa :=NewPdfRectangle (*_ecff );if _ababa !=nil {return nil ,false ,_ababa ;};if _dgbd ,_abgaf :=_eaffd .Matrix .(*_cc .PdfObjectArray );
_abgaf {_febe ,_aeaf :=_dgbd .ToFloat64Array ();if _aeaf !=nil {return nil ,false ,_aeaf ;};_beeee :=_ga .IdentityMatrix ();if len (_febe )==6{_beeee =_ga .NewMatrix (_febe [0],_febe [1],_febe [2],_febe [3],_febe [4],_febe [5]);};_bfc .Transform (_beeee );
return _bfc ,true ,nil ;};return _bfc ,false ,nil ;};return nil ,false ,_ede .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061n\u0063e\u0020\u0042\u0042\u006f\u0078\u0020\u0074y\u0070\u0065");};func (_gface *fontFile )parseASCIIPart (_feab []byte )error {if len (_feab )< 2||string (_feab [:2])!="\u0025\u0021"{return _ede .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_beca ,_fagg ,_bdfbg :=_abegc (_feab );if _bdfbg !=nil {return _bdfbg ;};_dfdda :=_dbddb (_beca );_gface ._gbab =_dfdda ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _gface ._gbab ==""{_df .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _fagg !=""{_egacc ,_dfdf :=_ecaec (_fagg );if _dfdf !=nil {return _dfdf ;};_ddfa ,_dfdf :=_cbf .NewCustomSimpleTextEncoder (_egacc ,nil );if _dfdf !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_dfdf );
return nil ;};_gface ._abdgb =_ddfa ;};return nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_dgcb *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_cc .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ede .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_baeaf ,_dcgd :=_cc .GetNumbersAsFloat (objects );
if _dcgd !=nil {return nil ,_dcgd ;};return _dgcb .ColorFromFloats (_baeaf );};

// DecodeArray returns the component range values for the Separation colorspace.
func (_gdbd *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//
//	// Convert RGB image to grayscale.
//	rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//	grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//	if err != nil {
//	  return err
//	}
//	// Resample as 1 bit.
//	grayImage.Resample(1)
func (_gagbf *Image )Resample (targetBitsPerComponent int64 ){if _gagbf .BitsPerComponent ==targetBitsPerComponent {return ;};_fbdda :=_gagbf .GetSamples ();if targetBitsPerComponent < _gagbf .BitsPerComponent {_ccecd :=_gagbf .BitsPerComponent -targetBitsPerComponent ;
for _cefbb :=range _fbdda {_fbdda [_cefbb ]>>=uint (_ccecd );};}else if targetBitsPerComponent > _gagbf .BitsPerComponent {_bcbgc :=targetBitsPerComponent -_gagbf .BitsPerComponent ;for _fbeac :=range _fbdda {_fbdda [_fbeac ]<<=uint (_bcbgc );};};_gagbf .BitsPerComponent =targetBitsPerComponent ;
if _gagbf .BitsPerComponent < 8{_gagbf .resampleLowBits (_fbdda );return ;};_caga :=_ec .BytesPerLine (int (_gagbf .Width ),int (_gagbf .BitsPerComponent ),_gagbf .ColorComponents );_fcfgf :=make ([]byte ,_caga *int (_gagbf .Height ));var (_fedf ,_gcae ,_feeee ,_dgdb int ;
_gcagf uint32 ;);for _feeee =0;_feeee < int (_gagbf .Height );_feeee ++{_fedf =_feeee *_caga ;_gcae =(_feeee +1)*_caga -1;_edba :=_dac .ResampleUint32 (_fbdda [_fedf :_gcae ],int (targetBitsPerComponent ),8);for _dgdb ,_gcagf =range _edba {_fcfgf [_dgdb +_fedf ]=byte (_gcagf );
};};_gagbf .Data =_fcfgf ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_dbg :=NewPdfAnnotation ();_def :=&PdfAnnotationInk {};_def .PdfAnnotation =_dbg ;_def .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dbg .SetContext (_def );return _def ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_fdcbg :=&PdfAppender {_bffe :reader ._ddbcgf ,Reader :reader ,_cafa :reader ._bbed ,_edaf :reader ._gcfcc };_cceac ,_daeb :=_fdcbg ._bffe .Seek (0,_cd .SeekEnd );if _daeb !=nil {return nil ,_daeb ;
};_fdcbg ._eddf =_cceac ;if _ ,_daeb =_fdcbg ._bffe .Seek (0,_cd .SeekStart );_daeb !=nil {return nil ,_daeb ;};_fdcbg ._eaeg ,_daeb =NewPdfReader (_fdcbg ._bffe );if _daeb !=nil {return nil ,_daeb ;};for _ ,_ebed :=range _fdcbg .Reader .GetObjectNums (){if _fdcbg ._dbf < _ebed {_fdcbg ._dbf =_ebed ;
};};_fdcbg ._eafdg =_fdcbg ._cafa .GetXrefTable ();_fdcbg ._agg =_fdcbg ._cafa .GetXrefOffset ();_fdcbg ._dfaa =append (_fdcbg ._dfaa ,_fdcbg ._eaeg .PageList ...);_fdcbg ._bdge =make (map[_cc .PdfObject ]struct{});_fdcbg ._gbdc =make (map[_cc .PdfObject ]int64 );
_fdcbg ._fbfa =make (map[_cc .PdfObject ]struct{});_fdcbg ._efeb =_fdcbg ._eaeg .AcroForm ;_fdcbg ._gbfd =_fdcbg ._eaeg .DSS ;return _fdcbg ,nil ;};func _cgabg (_cdfda _cc .PdfObject ,_abdg *fontCommon )(*_fac .CMap ,error ){_dgaf ,_bfeg :=_cc .GetStream (_cdfda );
if !_bfeg {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_cdfda );
return nil ,_cc .ErrTypeError ;};_gacfd ,_gefde :=_cc .DecodeStream (_dgaf );if _gefde !=nil {return nil ,_gefde ;};_dcffde ,_gefde :=_fac .LoadCmapFromData (_gacfd ,!_abdg .isCIDFont ());if _gefde !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_dgaf .ObjectNumber ,_gefde );
};return _dcffde ,_gefde ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_dfga *PdfAppender )UpdatePage (page *PdfPage ){_dfga .updateObjectsDeep (page .ToPdfObject (),nil )};

// ToPdfObject implements interface PdfModel.
func (_fea *PdfActionRendition )ToPdfObject ()_cc .PdfObject {_fea .PdfAction .ToPdfObject ();_be :=_fea ._dae ;_efb :=_be .PdfObject .(*_cc .PdfObjectDictionary );_efb .SetIfNotNil ("\u0053",_cc .MakeName (string (ActionTypeRendition )));_efb .SetIfNotNil ("\u0052",_fea .R );
_efb .SetIfNotNil ("\u0041\u004e",_fea .AN );_efb .SetIfNotNil ("\u004f\u0050",_fea .OP );_efb .SetIfNotNil ("\u004a\u0053",_fea .JS );return _be ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_ddgcg DefaultImageHandler )Read (reader _cd .Reader )(*Image ,error ){_cfcf ,_ ,_cgedg :=_ee .Decode (reader );if _cgedg !=nil {_df .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_cgedg );
return nil ,_cgedg ;};return _ddgcg .NewImageFromGoImage (_cfcf );};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_ggb :=NewPdfAnnotation ();_faac :=&PdfAnnotationWatermark {};_faac .PdfAnnotation =_ggb ;_ggb .SetContext (_faac );return _faac ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_daga *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};var (_aaefb _f .Mutex ;_fgeb ="";_bcbfgg _b .Time ;_abaf ="";_fcafc ="";_cbfbg _b .Time ;_ffabe ="";_fegf ="";_bcge ="";);

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_egbe PdfModel ;_geafg *_cc .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_cc .PdfObjectName ;T *_cc .PdfObjectString ;TU *_cc .PdfObjectString ;TM *_cc .PdfObjectString ;Ff *_cc .PdfObjectInteger ;
V _cc .PdfObject ;DV _cc .PdfObject ;AA _cc .PdfObject ;VariableText *VariableText ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_efcg :_cc .MakeIndirectObject (_cc .MakeDict ()),VRI :map[string ]*VRI {}};};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_fce :=NewPdfAction ();_eae :=&PdfActionJavaScript {};_eae .PdfAction =_fce ;_fce .SetContext (_eae );return _eae ;};

// ToPdfObject implements interface PdfModel.
func (_fdc *PdfAction )ToPdfObject ()_cc .PdfObject {_ef :=_fdc ._dae ;_eaff :=_ef .PdfObject .(*_cc .PdfObjectDictionary );_eaff .Clear ();_eaff .Set ("\u0054\u0079\u0070\u0065",_cc .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_eaff .SetIfNotNil ("\u0053",_fdc .S );
_eaff .SetIfNotNil ("\u004e\u0065\u0078\u0074",_fdc .Next );return _ef ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_dfag *PdfFontDescriptor )ToPdfObject ()_cc .PdfObject {_faad :=_cc .MakeDict ();if _dfag ._dfdd ==nil {_dfag ._dfdd =&_cc .PdfIndirectObject {};};_dfag ._dfdd .PdfObject =_faad ;_faad .Set ("\u0054\u0079\u0070\u0065",_cc .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _dfag .FontName !=nil {_faad .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_dfag .FontName );};if _dfag .FontFamily !=nil {_faad .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_dfag .FontFamily );};if _dfag .FontStretch !=nil {_faad .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_dfag .FontStretch );
};if _dfag .FontWeight !=nil {_faad .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_dfag .FontWeight );};if _dfag .Flags !=nil {_faad .Set ("\u0046\u006c\u0061g\u0073",_dfag .Flags );};if _dfag .FontBBox !=nil {_faad .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_dfag .FontBBox );
};if _dfag .ItalicAngle !=nil {_faad .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_dfag .ItalicAngle );};if _dfag .Ascent !=nil {_faad .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_dfag .Ascent );};if _dfag .Descent !=nil {_faad .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_dfag .Descent );
};if _dfag .Leading !=nil {_faad .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_dfag .Leading );};if _dfag .CapHeight !=nil {_faad .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_dfag .CapHeight );};if _dfag .XHeight !=nil {_faad .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_dfag .XHeight );
};if _dfag .StemV !=nil {_faad .Set ("\u0053\u0074\u0065m\u0056",_dfag .StemV );};if _dfag .StemH !=nil {_faad .Set ("\u0053\u0074\u0065m\u0048",_dfag .StemH );};if _dfag .AvgWidth !=nil {_faad .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_dfag .AvgWidth );
};if _dfag .MaxWidth !=nil {_faad .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_dfag .MaxWidth );};if _dfag .MissingWidth !=nil {_faad .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_dfag .MissingWidth );};if _dfag .FontFile !=nil {_faad .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_dfag .FontFile );
};if _dfag .FontFile2 !=nil {_faad .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_dfag .FontFile2 );};if _dfag .FontFile3 !=nil {_faad .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_dfag .FontFile3 );};if _dfag .CharSet !=nil {_faad .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_dfag .CharSet );
};if _dfag .Style !=nil {_faad .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_dfag .FontName );};if _dfag .Lang !=nil {_faad .Set ("\u004c\u0061\u006e\u0067",_dfag .Lang );};if _dfag .FD !=nil {_faad .Set ("\u0046\u0044",_dfag .FD );};if _dfag .CIDSet !=nil {_faad .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_dfag .CIDSet );
};return _dfag ._dfdd ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_ecdge *LTV )Enable (sig *PdfSignature ,extraCerts []*_ffd .Certificate )error {if _dcgcd :=_ecdge .validateSig (sig );_dcgcd !=nil {return _dcgcd ;};_bgfg ,_ecbf :=_ecdge .generateVRIKey (sig );if _ecbf !=nil {return _ecbf ;};if _ ,_faebb :=_ecdge ._ffedd .VRI [_bgfg ];
_faebb &&_ecdge .SkipExisting {return nil ;};_cdbg ,_ecbf :=sig .GetCerts ();if _ecbf !=nil {return _ecbf ;};return _ecdge .enable (_cdbg ,extraCerts ,_bgfg );};func (_fdd *PdfReader )newPdfActionResetFormFromDict (_gcbf *_cc .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_gcbf .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_gcbf .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// Initialize initializes the PdfSignature.
func (_bdab *PdfSignature )Initialize ()error {if _bdab .Handler ==nil {return _ede .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _bdab .Handler .InitSignature (_bdab );};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_feef *PdfColorspaceLab )ColorFromPdfObjects (objects []_cc .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ede .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bcbf ,_ddegg :=_cc .GetNumbersAsFloat (objects );
if _ddegg !=nil {return nil ,_ddegg ;};return _feef .ColorFromFloats (_bcbf );};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_ccaffc *PdfWriter )SetOptimizer (optimizer Optimizer ){_ccaffc ._cbgef =optimizer };

// ColorToRGB converts an Indexed color to an RGB color.
func (_dcge *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _dcge .Base ==nil {return nil ,_ede .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _dcge .Base .ColorToRGB (color );};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_gegab *PdfFieldButton )SetType (btype ButtonType ){_abaa :=uint32 (0);if _gegab .Ff !=nil {_abaa =uint32 (*_gegab .Ff );};switch btype {case ButtonTypePush :_abaa |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_abaa |=FieldFlagRadio .Mask ();
};_gegab .Ff =_cc .MakeInteger (int64 (_abaa ));};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_cc .PdfObjectArray ;ExtGState _cc .PdfObject ;};func (_geg *PdfReader )newPdfActionSetOCGStateFromDict (_dff *_cc .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_dff .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_dff .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// ToPdfObject implements interface PdfModel.
func (_eedab *PdfAnnotationCaret )ToPdfObject ()_cc .PdfObject {_eedab .PdfAnnotation .ToPdfObject ();_abd :=_eedab ._cef ;_aaed :=_abd .PdfObject .(*_cc .PdfObjectDictionary );_eedab .PdfAnnotationMarkup .appendToPdfDictionary (_aaed );_aaed .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0043\u0061\u0072e\u0074"));
_aaed .SetIfNotNil ("\u0052\u0044",_eedab .RD );_aaed .SetIfNotNil ("\u0053\u0079",_eedab .Sy );return _abd ;};

// ToPdfObject implements interface PdfModel.
func (_adfd *PdfAnnotationWatermark )ToPdfObject ()_cc .PdfObject {_adfd .PdfAnnotation .ToPdfObject ();_bdfba :=_adfd ._cef ;_fggdf :=_bdfba .PdfObject .(*_cc .PdfObjectDictionary );_fggdf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_fggdf .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_adfd .FixedPrint );return _bdfba ;};

// B returns the value of the B component of the color.
func (_afcb *PdfColorLab )B ()float64 {return _afcb [2]};

// GetCharMetrics returns the char metrics for character code `code`.
func (_edca pdfCIDFontType2 )GetCharMetrics (code _cbf .CharCode )(_edg .CharMetrics ,bool ){if _gffb ,_bfcc :=_edca ._cefb [code ];_bfcc {return _edg .CharMetrics {Wx :_gffb },true ;};_gcaa :=rune (code );_fdcfg ,_dbbe :=_edca ._gegff [_gcaa ];if !_dbbe {_fdcfg =int (_edca ._gece );
};return _edg .CharMetrics {Wx :float64 (_fdcfg )},true ;};func (_gbaa *DSS )add (_afef *[]*_cc .PdfObjectStream ,_bege map[string ]*_cc .PdfObjectStream ,_eafg [][]byte )([]*_cc .PdfObjectStream ,error ){_ceaa :=make ([]*_cc .PdfObjectStream ,0,len (_eafg ));
for _ ,_egacb :=range _eafg {_bedd ,_aafd :=_afcae (_egacb );if _aafd !=nil {return nil ,_aafd ;};_adda ,_gage :=_bege [string (_bedd )];if !_gage {_adda ,_aafd =_cc .MakeStream (_egacb ,_cc .NewRawEncoder ());if _aafd !=nil {return nil ,_aafd ;};_bege [string (_bedd )]=_adda ;
*_afef =append (*_afef ,_adda );};_ceaa =append (_ceaa ,_adda );};return _ceaa ,nil ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_fdfgg *XObjectImage )GetContainingPdfObject ()_cc .PdfObject {return _fdfgg ._dbccfb };

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_ffcd DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_ebac *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _cc .GetNumberAsFloat (_ebac .CapHeight );};

// SetShadingByName sets a shading resource specified by keyName.
func (_acfbf *PdfPageResources )SetShadingByName (keyName _cc .PdfObjectName ,shadingObj _cc .PdfObject )error {if _acfbf .Shading ==nil {_acfbf .Shading =_cc .MakeDict ();};_fdge ,_eece :=_cc .GetDict (_acfbf .Shading );if !_eece {return _cc .ErrTypeError ;
};_fdge .Set (keyName ,shadingObj );return nil ;};func _gecgg (_accb *_cc .PdfObjectDictionary ,_ceege *fontCommon )(*pdfFontType0 ,error ){_cbfc ,_edgfe :=_cc .GetArray (_accb .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_edgfe {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_ceege );
return nil ,_cc .ErrRangeError ;};if _cbfc .Len ()!=1{_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_cbfc .Len ());return nil ,_cc .ErrRangeError ;
};_aageb ,_cedg :=_efbc (_cbfc .Get (0),false );if _cedg !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_cedg ,_ceege );
return nil ,_cedg ;};_fbabg :=_accb .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_dffb :="";_dbfd :=_efbfg (_ceege );_dbfd .DescendantFont =_aageb ;switch _cgef :=_fbabg .(type ){case *_cc .PdfObjectName :_dffb ,_edgfe =_cc .GetNameVal (_fbabg );
if _edgfe {if _dffb =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_dffb =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_dbfd ._feggc =_cbf .NewIdentityTextEncoder (_dffb );}else if _fac .IsPredefinedCMap (_dffb ){_dbfd ._abgbf ,_cedg =_fac .LoadPredefinedCMap (_dffb );
if _cedg !=nil {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_dffb ,_cedg );
};}else {_df .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_dffb );};};case *_cc .PdfObjectStream :if _dbfd ._dcadd ==nil {_afaga ,_cebff :=_fac .NewCIDSystemInfo (_cgef .PdfObjectDictionary .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _cebff !=nil {_df .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u0043\u0049D\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f\u003a\u0020\u0025\u0076",_cebff );};_gdcg :=_c .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_afaga .Registry ,_afaga .Ordering );
if _fac .IsPredefinedCMap (_gdcg ){_dbfd ._abgbf ,_cebff =_fac .LoadPredefinedCMap (_gdcg );if _cebff !=nil {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_gdcg ,_cebff );
};}else {_gdcg =_cgef .PdfObjectDictionary .Get ("\u0043\u004d\u0061\u0070\u004e\u0061\u006d\u0065").String ();_ddaa ,_cdeb :=_cc .DecodeStream (_cgef );if _cdeb !=nil {_df .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020s\u0074\u0072\u0065a\u006d:\u0020\u0025\u0076",_cdeb );
return _dbfd ,_cdeb ;};if _bged :=_gdcg =="\u004f\u006ee\u0042\u0079\u0074e\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u0048"||_gdcg =="\u004f\u006ee\u0042\u0079\u0074e\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u0056";_bged {_dbfd ._abgbf ,_cdeb =_fac .LoadCmapFromData (_ddaa ,_bged );
if _cdeb !=nil {_df .Log .Debug ("\u0055\u006e\u0061\u0062\u006ce\u0020\u0074\u006f\u0020\u006c\u006f\u0061\u0064\u0020\u0043\u004d\u0061\u0070 \u0066\u0072\u006f\u006d\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076\u0020\u002d\u002d\u0020\u0025\u0076",_cdeb ,string (_ddaa ));
return _dbfd ,_cdeb ;};_dacf :=make (map[_fac .CharCode ]rune ,256);for _gdee :=0x00;_gdee <=0xFF;_gdee ++{_dacf [_fac .CharCode (_gdee )]=rune (_gdee );};_dbfd ._fgbf =_fac .NewToUnicodeCMap (_dacf );};};};};if _aaffd :=_aageb .baseFields ()._fgbf ;_aaffd !=nil {if _ccebg :=_aaffd .Name ();
_ccebg =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_ccebg =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_ccebg =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_ccebg =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_dbfd ._feggc =_cbf .NewCMapEncoder (_dffb ,_dbfd ._abgbf ,_aaffd );
};};return _dbfd ,nil ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_cc .PdfIndirectObject )*PdfOutlineItem {_cfgae :=PdfOutlineItem {};_cfgae ._efbcf =&_cfgae ;_cfgae .Title =_cc .MakeString (title );_gdbeg :=_cc .MakeArray ();_gdbeg .Append (page );_gdbeg .Append (_cc .MakeName ("\u0046\u0069\u0074"));
_cfgae .Dest =_gdbeg ;return &_cfgae ;};func (_gfdce *pdfFontType0 )subsetRegistered ()error {_eebaa ,_baaa :=_gfdce .DescendantFont ._ggec .(*pdfCIDFontType2 );if !_baaa {_df .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_gfdce .DescendantFont );
return nil ;};if _eebaa ==nil {return nil ;};if _eebaa ._cagc ==nil {_df .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _gfdce ._feggc ==nil {_df .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_gegb ,_baaa :=_cc .GetStream (_eebaa ._cagc .FontFile2 );if !_baaa {_df .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _ede .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_dgfa ,_baecb :=_cc .DecodeStream (_gegb );if _baecb !=nil {_df .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_baecb );
return _baecb ;};_fedeg ,_baecb :=_bdc .Parse (_aac .NewReader (_dgfa ));if _baecb !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_gegb .Stream ));
return _baecb ;};var _deba []rune ;var _bfgbdd *_bdc .Font ;switch _acfad :=_gfdce ._feggc .(type ){case *_cbf .TrueTypeFontEncoder :_deba =_acfad .RegisteredRunes ();_bfgbdd ,_baecb =_fedeg .SubsetKeepRunes (_deba );if _baecb !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_baecb );
return _baecb ;};_acfad .SubsetRegistered ();case *_cbf .IdentityEncoder :_deba =_acfad .RegisteredRunes ();_fddag :=make ([]_bdc .GlyphIndex ,len (_deba ));for _ecdca ,_fccbf :=range _deba {_fddag [_ecdca ]=_bdc .GlyphIndex (_fccbf );};_bfgbdd ,_baecb =_fedeg .SubsetKeepIndices (_fddag );
if _baecb !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_baecb );return _baecb ;};case _cbf .SimpleEncoder :_abeda :=_acfad .Charcodes ();for _ ,_gefgf :=range _abeda {_bgba ,_afggf :=_acfad .CharcodeToRune (_gefgf );if !_afggf {_df .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_gefgf );
continue ;};_deba =append (_deba ,_bgba );};default:return _c .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_gfdce ._feggc );
};var _cdaff _aac .Buffer ;_baecb =_bfgbdd .Write (&_cdaff );if _baecb !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_baecb );return _baecb ;};if _gfdce ._fgbf !=nil {_adbga :=make (map[_fac .CharCode ]rune ,len (_deba ));for _ ,_ddab :=range _deba {_facacc ,_gfad :=_gfdce ._feggc .RuneToCharcode (_ddab );
if !_gfad {continue ;};_adbga [_fac .CharCode (_facacc )]=_ddab ;};_gfdce ._fgbf =_fac .NewToUnicodeCMap (_adbga );};_gegb ,_baecb =_cc .MakeStream (_cdaff .Bytes (),_cc .NewFlateEncoder ());if _baecb !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_baecb );
return _baecb ;};_gegb .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_cc .MakeInteger (int64 (_cdaff .Len ())));if _dfabg ,_bgdbc :=_cc .GetStream (_eebaa ._cagc .FontFile2 );_bgdbc {*_dfabg =*_gegb ;}else {_eebaa ._cagc .FontFile2 =_gegb ;};_dgdca :=_dcdd ();
if len (_gfdce ._baac )> 0{_gfdce ._baac =_ddbe (_gfdce ._baac ,_dgdca );};if len (_eebaa ._baac )> 0{_eebaa ._baac =_ddbe (_eebaa ._baac ,_dgdca );};if len (_gfdce ._cbdc )> 0{_gfdce ._cbdc =_ddbe (_gfdce ._cbdc ,_dgdca );};if _eebaa ._cagc !=nil {_cfbdb ,_ddagb :=_cc .GetName (_eebaa ._cagc .FontName );
if _ddagb &&len (_cfbdb .String ())> 0{_geadd :=_ddbe (_cfbdb .String (),_dgdca );_eebaa ._cagc .FontName =_cc .MakeName (_geadd );};};return nil ;};func _daaff (_dggdb _edg .StdFont )pdfFontSimple {_edbdf :=_dggdb .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_edfc :"\u0054\u0079\u0070e\u0031",_baac :_dggdb .Name ()},_gageb :_dggdb .GetMetricsTable (),_bbaccb :&PdfFontDescriptor {FontName :_cc .MakeName (string (_edbdf .Name )),FontFamily :_cc .MakeName (_edbdf .Family ),FontWeight :_cc .MakeFloat (float64 (_edbdf .Weight )),Flags :_cc .MakeInteger (int64 (_edbdf .Flags )),FontBBox :_cc .MakeArrayFromFloats (_edbdf .BBox [:]),ItalicAngle :_cc .MakeFloat (_edbdf .ItalicAngle ),Ascent :_cc .MakeFloat (_edbdf .Ascent ),Descent :_cc .MakeFloat (_edbdf .Descent ),CapHeight :_cc .MakeFloat (_edbdf .CapHeight ),XHeight :_cc .MakeFloat (_edbdf .XHeight ),StemV :_cc .MakeFloat (_edbdf .StemV ),StemH :_cc .MakeFloat (_edbdf .StemH )},_gbbe :_dggdb .Encoder ()};
};

// ImageToRGB convert an indexed image to RGB.
func (_cgccf *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_cgccf .Base .GetNumComponents ();if N < 1{return Image {},_c .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_cgdec :=_ec .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._ccee ,img ._aaaacg );_facaa :=_dac .NewReader (img .getBase ());_ecdg :=_dac .NewWriter (_cgdec );var (_bggg uint32 ;_dbgbe int ;_dcbc error ;);for {_bggg ,_dcbc =_facaa .ReadSample ();
if _dcbc ==_cd .EOF {break ;}else if _dcbc !=nil {return img ,_dcbc ;};_dbgbe =int (_bggg );_df .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_dbgbe ,N ,len (_cgccf ._dacb ));
if (_dbgbe +1)*N > len (_cgccf ._dacb ){_dbgbe =len (_cgccf ._dacb )/N -1;_df .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_dbgbe );if _dbgbe < 0{_df .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _beegc :=_dbgbe *N ;_beegc < (_dbgbe +1)*N ;_beegc ++{if _dcbc =_ecdg .WriteSample (uint32 (_cgccf ._dacb [_beegc ]));_dcbc !=nil {return img ,_dcbc ;};};};return _cgccf .Base .ImageToRGB (_bagc (&_cgdec ));};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_bfgbd *PdfFont )ToPdfObject ()_cc .PdfObject {if _bfgbd ._ggec ==nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _cc .MakeNull ();
};return _bfgbd ._ggec .ToPdfObject ();};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_afdd *PdfPage )error ;};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _cc .PdfObject )(*PdfInfo ,error ){var _ddcb PdfInfo ;_fadcb ,_fcgcb :=obj .(*_cc .PdfObjectDictionary );if !_fcgcb {return nil ,_c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_ddebf :=range _fadcb .Keys (){switch _ddebf {case "\u0054\u0069\u0074l\u0065":_ddcb .Title ,_ =_cc .GetString (_fadcb .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_ddcb .Author ,_ =_cc .GetString (_fadcb .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_ddcb .Subject ,_ =_cc .GetString (_fadcb .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_ddcb .Keywords ,_ =_cc .GetString (_fadcb .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_ddcb .Creator ,_ =_cc .GetString (_fadcb .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_ddcb .Producer ,_ =_cc .GetString (_fadcb .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_ddcb .Trapped ,_ =_cc .GetName (_fadcb .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _bcef ,_defa :=_cc .GetString (_fadcb .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_defa &&_bcef .String ()!=""{_cdfd ,_fcea :=NewPdfDate (_bcef .String ());if _fcea !=nil {return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_fcea );
};_ddcb .CreationDate =&_cdfd ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _gecc ,_cfeb :=_cc .GetString (_fadcb .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_cfeb &&_gecc .String ()!=""{_gccc ,_bbgg :=NewPdfDate (_gecc .String ());if _bbgg !=nil {return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_bbgg );
};_ddcb .ModifiedDate =&_gccc ;};default:_gfee ,_ :=_cc .GetString (_fadcb .Get (_ddebf ));if _ddcb ._cbag ==nil {_ddcb ._cbag =_cc .MakeDict ();};_ddcb ._cbag .Set (_ddebf ,_gfee );};};return &_ddcb ,nil ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _cc .PdfObject ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_gfb :=&PdfAction {};_gfb ._dae =_cc .MakeIndirectObject (_cc .MakeDict ());return _gfb ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_afcab :=&PdfColorspaceDeviceN {};return _afcab ;};func (_fgdaa PdfFont )actualFont ()pdfFont {if _fgdaa ._ggec ==nil {_df .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fgdaa );
};return _fgdaa ._ggec ;};

// ParsePdfObject parses input pdf object into given output intent.
func (_egdaa *PdfOutputIntent )ParsePdfObject (object _cc .PdfObject )error {_dffdd ,_fcdaa :=_cc .GetDict (object );if !_fcdaa {_df .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _ede .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_egdaa ._gffgd =_dffdd ;_egdaa .Type ,_ =_dffdd .GetString ("\u0054\u0079\u0070\u0065");_gfbce ,_fcdaa :=_dffdd .GetString ("\u0053");if _fcdaa {switch _gfbce {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_egdaa .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_egdaa .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_egdaa .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_egdaa .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_egdaa .S =PdfOutputIntentTypeX ;
};};_egdaa .OutputCondition ,_ =_dffdd .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_egdaa .OutputConditionIdentifier ,_ =_dffdd .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_egdaa .RegistryName ,_ =_dffdd .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_egdaa .Info ,_ =_dffdd .GetString ("\u0049\u006e\u0066\u006f");if _gege ,_fgce :=_cc .GetStream (_dffdd .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_fgce {_egdaa .ColorComponents ,_ =_cc .GetIntVal (_gege .Get ("\u004e"));_efecee ,_daafdc :=_cc .DecodeStream (_gege );if _daafdc !=nil {return _daafdc ;};_egdaa .DestOutputProfile =_efecee ;};return nil ;};func (_geef *PdfReader )newPdfActionImportDataFromDict (_dedd *_cc .PdfObjectDictionary )(*PdfActionImportData ,error ){_cbfd ,_bcae :=_gfg (_dedd .Get ("\u0046"));
if _bcae !=nil {return nil ,_bcae ;};return &PdfActionImportData {F :_cbfd },nil ;};

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_cffeg *PdfWriter )SetCatalogMetadata (meta _cc .PdfObject )error {if meta ==nil {_cffeg ._feff .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_gdecd ,_dbad :=_cc .GetStream (meta );if !_dbad {return _ede .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_cffeg .addObject (_gdecd );_cffeg ._feff .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gdecd );return nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_cafef *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// Height returns the height of `rect`.
func (_effbd *PdfRectangle )Height ()float64 {return _ed .Abs (_effbd .Ury -_effbd .Lly )};func (_bfe *PdfReader )newPdfAnnotationLinkFromDict (_afb *_cc .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_gcdd :=PdfAnnotationLink {};_gcdd .A =_afb .Get ("\u0041");
_gcdd .Dest =_afb .Get ("\u0044\u0065\u0073\u0074");_gcdd .H =_afb .Get ("\u0048");_gcdd .PA =_afb .Get ("\u0050\u0041");_gcdd .QuadPoints =_afb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_gcdd .BS =_afb .Get ("\u0042\u0053");
return &_gcdd ,nil ;};func (_egad *PdfAppender )addNewObject (_accf _cc .PdfObject ){if _ ,_efdf :=_egad ._bdge [_accf ];!_efdf {_egad ._bcdd =append (_egad ._bcdd ,_accf );_egad ._bdge [_accf ]=struct{}{};};};

// NewEmbeddedFile constructs a new EmbeddedFile object from supplied file.
// The file type of the file would be detected automatically.
func NewEmbeddedFile (path string )(*EmbeddedFile ,error ){_gcfff ,_ecbc :=_aa .ReadFile (path );if _ecbc !=nil {return nil ,_ecbc ;};_gfce :=_fgb .Detect (_gcfff );_dffc :=_bf .Sum (_gcfff );_gcbdd :=&EmbeddedFile {Name :_eg .Base (path ),Content :_gcfff ,FileType :_gfce .String (),Hash :_db .EncodeToString (_dffc [:])};
return _gcbdd ,nil ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_gacgd *pdfCIDFontType0 )ToPdfObject ()_cc .PdfObject {return _cc .MakeNull ()};func _efbc (_bcfbf _cc .PdfObject ,_daecd bool )(*PdfFont ,error ){_bbadc ,_ecae ,_eace :=_fgea (_bcfbf );if _bbadc !=nil {_afbc (_bbadc );};if _eace !=nil {if _eace ==ErrType1CFontNotSupported {_cbdg ,_geadf :=_afddc (_bbadc ,_ecae ,nil );
if _geadf !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_ecae ,_geadf );
return nil ,_eace ;};return &PdfFont {_ggec :_cbdg },_eace ;};return nil ,_eace ;};_eadd :=&PdfFont {};switch _ecae ._edfc {case "\u0054\u0079\u0070e\u0030":if !_daecd {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ecae );
return nil ,_ede .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_eaabc ,_bddf :=_gecgg (_bbadc ,_ecae );if _bddf !=nil {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ecae ,_bddf );
return nil ,_bddf ;};_eadd ._ggec =_eaabc ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _bcdca *pdfFontSimple ;_ceeg ,_beaef :=_edg .NewStdFontByName (_edg .StdFontName (_ecae ._baac ));
if _beaef {_gedca :=_daaff (_ceeg );_eadd ._ggec =&_gedca ;_feegf :=_cc .TraceToDirectObject (_gedca .ToPdfObject ());_eccg ,_dcea ,_dbbfb :=_fgea (_feegf );if _dbbfb !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_ecae ,_gedca );
return nil ,_dbbfb ;};for _ ,_babca :=range _bbadc .Keys (){_eccg .Set (_babca ,_bbadc .Get (_babca ));};_bcdca ,_dbbfb =_afddc (_eccg ,_dcea ,_gedca ._gbbe );if _dbbfb !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_ecae ,_gedca );
return nil ,_dbbfb ;};_bcdca ._fdcc =_gedca ._fdcc ;_bcdca ._gageb =_gedca ._gageb ;if _bcdca ._bbaccb ==nil {_bcdca ._bbaccb =_gedca ._bbaccb ;};}else {_bcdca ,_eace =_afddc (_bbadc ,_ecae ,nil );if _eace !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_ecae ,_eace );
return nil ,_eace ;};};_eace =_bcdca .addEncoding ();if _eace !=nil {return nil ,_eace ;};if _beaef {_bcdca .updateStandard14Font ();};if _beaef &&_bcdca ._fbed ==nil &&_bcdca ._gbbe ==nil {_df .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bcdca );
_df .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_ceeg );};if len (_bcdca ._fdcc )==0{_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_bcdca );};_eadd ._ggec =_bcdca ;
case "\u0054\u0079\u0070e\u0033":_debfgf ,_bgbd :=_gedf (_bbadc ,_ecae );if _bgbd !=nil {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_bgbd );
return nil ,_bgbd ;};_eadd ._ggec =_debfgf ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_agcg ,_feafe :=_aaafb (_bbadc ,_ecae );if _feafe !=nil {_df .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_feafe );
return nil ,_feafe ;};_eadd ._ggec =_agcg ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_cgabb ,_fdbd :=_dfcdg (_bbadc ,_ecae );if _fdbd !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ecae ,_fdbd );
return nil ,_fdbd ;};_eadd ._ggec =_cgabb ;default:_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_ecae );
return nil ,_c .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ecae );};return _eadd ,nil ;};

// SetOCProperties sets the optional content properties.
func (_eabfa *PdfWriter )SetOCProperties (ocProperties _cc .PdfObject )error {_feabe :=_eabfa ._feff ;if ocProperties !=nil {_df .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_feabe .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _eabfa .addObjects (ocProperties );};return nil ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_bfdgb *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _cc .GetNumberAsFloat (_bfdgb .Descent );};

// ToPdfObject implements interface PdfModel.
func (_abe *PdfActionMovie )ToPdfObject ()_cc .PdfObject {_abe .PdfAction .ToPdfObject ();_acb :=_abe ._dae ;_ded :=_acb .PdfObject .(*_cc .PdfObjectDictionary );_ded .SetIfNotNil ("\u0053",_cc .MakeName (string (ActionTypeMovie )));_ded .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_abe .Annotation );
_ded .SetIfNotNil ("\u0054",_abe .T );_ded .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_abe .Operation );return _acb ;};

// GenerateHashMaps generates DSS hashmaps for Certificates, OCSPs and CRLs to make sure they are unique.
func (_gbgf *DSS )GenerateHashMaps ()error {_begdf ,_eafag :=_gbgf .generateHashMap (_gbgf .Certs );if _eafag !=nil {return _eafag ;};_faee ,_eafag :=_gbgf .generateHashMap (_gbgf .OCSPs );if _eafag !=nil {return _eafag ;};_fbdb ,_eafag :=_gbgf .generateHashMap (_gbgf .CRLs );
if _eafag !=nil {return _eafag ;};_gbgf ._cdee =_begdf ;_gbgf ._ggfg =_faee ;_gbgf ._agcb =_fbdb ;return nil ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_ggaeea *PdfShading )GetContainingPdfObject ()_cc .PdfObject {return _ggaeea ._ccfe };

// GetContainingPdfObject implements interface PdfModel.
func (_fbbfd *PdfSignatureReference )GetContainingPdfObject ()_cc .PdfObject {return _fbbfd ._ebgeg };

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_cgag :=NewPdfAnnotation ();_fbb :=&PdfAnnotationFileAttachment {};_fbb .PdfAnnotation =_cgag ;_fbb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgag .SetContext (_fbb );return _fbb ;
};func _effca (_debgg _cc .PdfObject )(string ,error ){_debgg =_cc .TraceToDirectObject (_debgg );switch _gbcgf :=_debgg .(type ){case *_cc .PdfObjectString :return _gbcgf .Str (),nil ;case *_cc .PdfObjectStream :_cacff ,_bbeaf :=_cc .DecodeStream (_gbcgf );
if _bbeaf !=nil {return "",_bbeaf ;};return string (_cacff ),nil ;};return "",_c .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_debgg );
};

// ToPdfObject generates a PdfObject representation of the Names struct.
func (_bfcgc *Names )ToPdfObject ()_cc .PdfObject {_bedb :=_bfcgc ._gefb ;_ggdc ,_fcegd :=_bedb .PdfObject .(*_cc .PdfObjectDictionary );if !_fcegd {_df .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006fb\u006a\u0065\u0063\u0074");return _bedb ;
};if _bfcgc .EmbeddedFiles !=nil {_ggdc .Set ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065\u0073",_cc .MakeIndirectObject (_bfcgc .EmbeddedFiles ));};return _bedb ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// IsSimple returns true if `font` is a simple font.
func (_ggae *PdfFont )IsSimple ()bool {_ ,_bgcbc :=_ggae ._ggec .(*pdfFontSimple );return _bgcbc };

// Val returns the color value.
func (_ccdg *PdfColorDeviceGray )Val ()float64 {return float64 (*_ccdg )};

// GetSubFilter returns SubFilter value or empty string.
func (_agbfb *pdfSignDictionary )GetSubFilter ()string {_bcacd :=_agbfb .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _bcacd ==nil {return "";};if _egcec ,_cbfca :=_cc .GetNameVal (_bcacd );_cbfca {return _egcec ;};return "";};func (_ecee *LTV )generateVRIKey (_aaeea *PdfSignature )(string ,error ){_ffaad ,_gdbec :=_afcae (_aaeea .Contents .Bytes ());
if _gdbec !=nil {return "",_gdbec ;};return _fa .ToUpper (_db .EncodeToString (_ffaad )),nil ;};func _dbddb (_cdbec string )map[string ]string {_fbcab :=_ggbgg .Split (_cdbec ,-1);_ggcd :=map[string ]string {};for _ ,_ebaba :=range _fbcab {_dccbc :=_acff .FindStringSubmatch (_ebaba );
if _dccbc ==nil {continue ;};_gdce ,_dcddd :=_dccbc [1],_dccbc [2];_ggcd [_gdce ]=_dcddd ;};return _ggcd ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_aaae *PdfColorCalGray )GetNumComponents ()int {return 1};

// IsShading specifies if the pattern is a shading pattern.
func (_daabd *PdfPattern )IsShading ()bool {return _daabd .PatternType ==2};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_gefg *PdfColorspaceICCBased )ToPdfObject ()_cc .PdfObject {_aced :=&_cc .PdfObjectArray {};_aced .Append (_cc .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _cfbe *_cc .PdfObjectStream ;if _gefg ._ecdc !=nil {_cfbe =_gefg ._ecdc ;
}else {_cfbe =&_cc .PdfObjectStream {};};_deda :=_cc .MakeDict ();_deda .Set ("\u004e",_cc .MakeInteger (int64 (_gefg .N )));if _gefg .Alternate !=nil {_deda .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_gefg .Alternate .ToPdfObject ());};if _gefg .Metadata !=nil {_deda .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gefg .Metadata );
};if _gefg .Range !=nil {var _feefa []_cc .PdfObject ;for _ ,_afed :=range _gefg .Range {_feefa =append (_feefa ,_cc .MakeFloat (_afed ));};_deda .Set ("\u0052\u0061\u006eg\u0065",_cc .MakeArray (_feefa ...));};_deda .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cc .MakeInteger (int64 (len (_gefg .Data ))));
_cfbe .Stream =_gefg .Data ;_cfbe .PdfObjectDictionary =_deda ;_aced .Append (_cfbe );if _gefg ._bbddd !=nil {_gefg ._bbddd .PdfObject =_aced ;return _gefg ._bbddd ;};return _aced ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _cc .PdfObject ;MK _cc .PdfObject ;A _cc .PdfObject ;AA _cc .PdfObject ;BS _cc .PdfObject ;Parent _cc .PdfObject ;_gda *PdfField ;_fdde bool ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_dfdfb *PdfReader )CheckAccessRights (password []byte )(bool ,_bd .Permissions ,error ){return _dfdfb ._bbed .CheckAccessRights (password );};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_cedff *PdfPageResources )GetFontByName (keyName _cc .PdfObjectName )(_cc .PdfObject ,bool ){if _cedff .Font ==nil {return nil ,false ;};_fefd ,_aafdg :=_cc .TraceToDirectObject (_cedff .Font ).(*_cc .PdfObjectDictionary );if !_aafdg {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_cc .TraceToDirectObject (_cedff .Font ));
return nil ,false ;};if _egdabf :=_fefd .Get (keyName );_egdabf !=nil {return _egdabf ,true ;};return nil ,false ;};func _dfcdg (_egga *_cc .PdfObjectDictionary ,_ggba *fontCommon )(*pdfCIDFontType2 ,error ){if _ggba ._edfc !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_df .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_ggba );
return nil ,_cc .ErrRangeError ;};_fdacb :=_fegcc (_ggba );_dfbd ,_ebabc :=_cc .GetDict (_egga .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_ebabc {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_ggba );
return nil ,ErrRequiredAttributeMissing ;};_fdacb .CIDSystemInfo =_dfbd ;_fdacb .DW =_egga .Get ("\u0044\u0057");_fdacb .W =_egga .Get ("\u0057");_fdacb .DW2 =_egga .Get ("\u0044\u0057\u0032");_fdacb .W2 =_egga .Get ("\u0057\u0032");_fdacb .CIDToGIDMap =_egga .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_fdacb ._gece =1000.0;if _bgfd ,_daebe :=_cc .GetNumberAsFloat (_fdacb .DW );_daebe ==nil {_fdacb ._gece =_bgfd ;};_cbga ,_bfdd :=_cgfc (_fdacb .W );if _bfdd !=nil {return nil ,_bfdd ;};if _cbga ==nil {_cbga =map[_cbf .CharCode ]float64 {};};_fdacb ._cefb =_cbga ;
return _fdacb ,nil ;};func (_gfeeb *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _gfeeb ._bbed .GetCrypter ()!=nil &&!_gfeeb ._bbed .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_gegdg :=_gfeeb ._gfed ;_aagdc :=_gegdg .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _aagdc ==nil {return nil ,nil ;};_df .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_cfebeb :=_cc .ResolveReference (_aagdc );
_df .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_cfebeb );if _afedc :=_cc .IsNullObject (_cfebeb );_afedc {_df .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_gecgc ,_edcbd :=_cfebeb .(*_cc .PdfIndirectObject );if !_edcbd {if _ ,_ceaaga :=_cc .GetDict (_cfebeb );!_ceaaga {_df .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_df .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_gecgc =_cc .MakeIndirectObject (_cfebeb );};_acfb ,_edcbd :=_gecgc .PdfObject .(*_cc .PdfObjectDictionary );if !_edcbd {return nil ,_ede .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_df .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_acfb );_afcbg ,_ ,_cbdgb :=_gfeeb .buildOutlineTree (_gecgc ,nil ,nil ,nil );if _cbdgb !=nil {return nil ,_cbdgb ;};_df .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_afcbg );
return _afcbg ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_fgcc *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _fgcc .UnderlyingCS ==nil {return nil ,_ede .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _fgcc .UnderlyingCS .ColorFromFloats (vals );};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_cfga :=NewPdfAnnotation ();_cefc :=&PdfAnnotationLine {};_cefc .PdfAnnotation =_cfga ;_cefc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cfga .SetContext (_cefc );return _cefc ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cc .PdfObject ;};func (_eafc *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_eccd *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _eccd .baseFields ()._cagc !=nil {return _eccd .baseFields ()._cagc ;};if _fgfb :=_eccd ._ggec .getFontDescriptor ();_fgfb !=nil {return _fgfb ;};_df .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_eccd );
return nil ;};var _ pdfFont =(*pdfFontType3 )(nil );

// SetBorderWidth sets the style's border width.
func (_bbe *PdfBorderStyle )SetBorderWidth (width float64 ){_bbe .W =&width };

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_cc .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_cc .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_cgda *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_aaea :=func (_bbdd float64 )float64 {if _bbdd >=6.0/29{return _bbdd *_bbdd *_bbdd ;};return 108.0/841*(_bbdd -4.0/29.0);};_gfbbe :=img ._aaaacg ;if len (_gfbbe )!=6{_df .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_gfbbe =_cgda .DecodeArray ();};_gfdc :=_dac .NewReader (img .getBase ());_eeba :=_ec .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._ccee ,img ._aaaacg );_ebfa :=_dac .NewWriter (_eeba );_bfgb :=_ed .Pow (2,float64 (img .BitsPerComponent ))-1;
_bggfd :=make ([]uint32 ,3);var (_fcgcd error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_effa ,_cgdf ,_aggg float64 ;);for {_fcgcd =_gfdc .ReadSamples (_bggfd );if _fcgcd ==_cd .EOF {break ;}else if _fcgcd !=nil {return img ,_fcgcd ;};Ls =float64 (_bggfd [0])/_bfgb ;
As =float64 (_bggfd [1])/_bfgb ;Bs =float64 (_bggfd [2])/_bfgb ;Ls =_ec .LinearInterpolate (Ls ,0.0,1.0,_gfbbe [0],_gfbbe [1]);As =_ec .LinearInterpolate (As ,0.0,1.0,_gfbbe [2],_gfbbe [3]);Bs =_ec .LinearInterpolate (Bs ,0.0,1.0,_gfbbe [4],_gfbbe [5]);
L =(Ls +16)/116+As /500;M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_cgda .WhitePoint [0]*_aaea (L );Y =_cgda .WhitePoint [1]*_aaea (M );Z =_cgda .WhitePoint [2]*_aaea (N );_effa =3.240479*X +-1.537150*Y +-0.498535*Z ;_cgdf =-0.969256*X +1.875992*Y +0.041556*Z ;
_aggg =0.055648*X +-0.204043*Y +1.057311*Z ;_effa =_ed .Min (_ed .Max (_effa ,0),1.0);_cgdf =_ed .Min (_ed .Max (_cgdf ,0),1.0);_aggg =_ed .Min (_ed .Max (_aggg ,0),1.0);_bggfd [0]=uint32 (_effa *_bfgb );_bggfd [1]=uint32 (_cgdf *_bfgb );_bggfd [2]=uint32 (_aggg *_bfgb );
if _fcgcd =_ebfa .WriteSamples (_bggfd );_fcgcd !=nil {return img ,_fcgcd ;};};return _bagc (&_eeba ),nil ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_ebeg *PdfInfo )ToPdfObject ()_cc .PdfObject {_gbca :=_cc .MakeDict ();_gbca .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_ebeg .Title );_gbca .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_ebeg .Author );_gbca .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_ebeg .Subject );
_gbca .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_ebeg .Keywords );_gbca .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_ebeg .Creator );_gbca .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_ebeg .Producer );
_gbca .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_ebeg .Trapped );if _ebeg .CreationDate !=nil {_gbca .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ebeg .CreationDate .ToPdfObject ());};if _ebeg .ModifiedDate !=nil {_gbca .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_ebeg .ModifiedDate .ToPdfObject ());
};for _ ,_cafdf :=range _ebeg ._cbag .Keys (){_gbca .SetIfNotNil (_cafdf ,_ebeg ._cbag .Get (_cafdf ));};return _gbca ;};func (_ced *PdfReader )newPdfAnnotationFromIndirectObject (_edeb *_cc .PdfIndirectObject )(*PdfAnnotation ,error ){_efc ,_ffb :=_edeb .PdfObject .(*_cc .PdfObjectDictionary );
if !_ffb {return nil ,_c .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_ced ._ecbgec .GetModelFromPrimitive (_efc );model !=nil {_bcfb ,_abb :=model .(*PdfAnnotation );if !_abb {return nil ,_c .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _bcfb ,nil ;};_eec :=&PdfAnnotation {};_eec ._cef =_edeb ;_ced ._ecbgec .Register (_efc ,_eec );if _ceged :=_efc .Get ("\u0054\u0079\u0070\u0065");_ceged !=nil {_dee ,_aaad :=_ceged .(*_cc .PdfObjectName );if !_aaad {_df .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_ceged );
}else {if *_dee !="\u0041\u006e\u006eo\u0074"{_df .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_dee );};};};if _ebf :=_efc .Get ("\u0052\u0065\u0063\u0074");
_ebf !=nil {_eec .Rect =_ebf ;};if _fbec :=_efc .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_fbec !=nil {_eec .Contents =_fbec ;};if _cbc :=_efc .Get ("\u0050");_cbc !=nil {_eec .P =_cbc ;};if _cdeg :=_efc .Get ("\u004e\u004d");_cdeg !=nil {_eec .NM =_cdeg ;
};if _beg :=_efc .Get ("\u004d");_beg !=nil {_eec .M =_beg ;};if _gad :=_efc .Get ("\u0046");_gad !=nil {_eec .F =_gad ;};if _gafe :=_efc .Get ("\u0041\u0050");_gafe !=nil {_eec .AP =_gafe ;};if _ebae :=_efc .Get ("\u0041\u0053");_ebae !=nil {_eec .AS =_ebae ;
};if _bade :=_efc .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_bade !=nil {_eec .Border =_bade ;};if _deac :=_efc .Get ("\u0043");_deac !=nil {_eec .C =_deac ;};if _dbd :=_efc .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_dbd !=nil {_eec .StructParent =_dbd ;};if _ggc :=_efc .Get ("\u004f\u0043");_ggc !=nil {_eec .OC =_ggc ;};_cfad :=_efc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _cfad ==nil {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_eec ._fae =nil ;return _eec ,nil ;};_ffbc ,_acec :=_cfad .(*_cc .PdfObjectName );if !_acec {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_cfad );
return nil ,_c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_cfad );};switch *_ffbc {case "\u0054\u0065\u0078\u0074":_dbc ,_fdcb :=_ced .newPdfAnnotationTextFromDict (_efc );
if _fdcb !=nil {return nil ,_fdcb ;};_dbc .PdfAnnotation =_eec ;_eec ._fae =_dbc ;return _eec ,nil ;case "\u004c\u0069\u006e\u006b":_fcba ,_aec :=_ced .newPdfAnnotationLinkFromDict (_efc );if _aec !=nil {return nil ,_aec ;};_fcba .PdfAnnotation =_eec ;
_eec ._fae =_fcba ;return _eec ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_ccdb ,_fbg :=_ced .newPdfAnnotationFreeTextFromDict (_efc );if _fbg !=nil {return nil ,_fbg ;};_ccdb .PdfAnnotation =_eec ;_eec ._fae =_ccdb ;return _eec ,nil ;
case "\u004c\u0069\u006e\u0065":_bfa ,_deea :=_ced .newPdfAnnotationLineFromDict (_efc );if _deea !=nil {return nil ,_deea ;};_bfa .PdfAnnotation =_eec ;_eec ._fae =_bfa ;_df .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_eec ,_eec );
_df .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_bfa ,_bfa );_df .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_bfa .PdfAnnotationMarkup ,_bfa .PdfAnnotationMarkup );
return _eec ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_cfe ,_bde :=_ced .newPdfAnnotationSquareFromDict (_efc );if _bde !=nil {return nil ,_bde ;};_cfe .PdfAnnotation =_eec ;_eec ._fae =_cfe ;return _eec ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_cfc ,_ffg :=_ced .newPdfAnnotationCircleFromDict (_efc );
if _ffg !=nil {return nil ,_ffg ;};_cfc .PdfAnnotation =_eec ;_eec ._fae =_cfc ;return _eec ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_ebb ,_ada :=_ced .newPdfAnnotationPolygonFromDict (_efc );if _ada !=nil {return nil ,_ada ;};_ebb .PdfAnnotation =_eec ;
_eec ._fae =_ebb ;return _eec ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_egde ,_bgd :=_ced .newPdfAnnotationPolyLineFromDict (_efc );if _bgd !=nil {return nil ,_bgd ;};_egde .PdfAnnotation =_eec ;_eec ._fae =_egde ;return _eec ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_ead ,_gefd :=_ced .newPdfAnnotationHighlightFromDict (_efc );if _gefd !=nil {return nil ,_gefd ;};_ead .PdfAnnotation =_eec ;_eec ._fae =_ead ;return _eec ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_eccef ,_gfgf :=_ced .newPdfAnnotationUnderlineFromDict (_efc );
if _gfgf !=nil {return nil ,_gfgf ;};_eccef .PdfAnnotation =_eec ;_eec ._fae =_eccef ;return _eec ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_dcd ,_ffc :=_ced .newPdfAnnotationSquigglyFromDict (_efc );if _ffc !=nil {return nil ,_ffc ;
};_dcd .PdfAnnotation =_eec ;_eec ._fae =_dcd ;return _eec ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_bbc ,_dfc :=_ced .newPdfAnnotationStrikeOut (_efc );if _dfc !=nil {return nil ,_dfc ;};_bbc .PdfAnnotation =_eec ;_eec ._fae =_bbc ;return _eec ,nil ;
case "\u0043\u0061\u0072e\u0074":_fbba ,_edeg :=_ced .newPdfAnnotationCaretFromDict (_efc );if _edeg !=nil {return nil ,_edeg ;};_fbba .PdfAnnotation =_eec ;_eec ._fae =_fbba ;return _eec ,nil ;case "\u0053\u0074\u0061m\u0070":_eaeb ,_fbef :=_ced .newPdfAnnotationStampFromDict (_efc );
if _fbef !=nil {return nil ,_fbef ;};_eaeb .PdfAnnotation =_eec ;_eec ._fae =_eaeb ;return _eec ,nil ;case "\u0049\u006e\u006b":_edd ,_dfce :=_ced .newPdfAnnotationInkFromDict (_efc );if _dfce !=nil {return nil ,_dfce ;};_edd .PdfAnnotation =_eec ;_eec ._fae =_edd ;
return _eec ,nil ;case "\u0050\u006f\u0070u\u0070":_daab ,_fbeb :=_ced .newPdfAnnotationPopupFromDict (_efc );if _fbeb !=nil {return nil ,_fbeb ;};_daab .PdfAnnotation =_eec ;_eec ._fae =_daab ;return _eec ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_ecb ,_ccdc :=_ced .newPdfAnnotationFileAttachmentFromDict (_efc );
if _ccdc !=nil {return nil ,_ccdc ;};_ecb .PdfAnnotation =_eec ;_eec ._fae =_ecb ;return _eec ,nil ;case "\u0053\u006f\u0075n\u0064":_eccb ,_ccab :=_ced .newPdfAnnotationSoundFromDict (_efc );if _ccab !=nil {return nil ,_ccab ;};_eccb .PdfAnnotation =_eec ;
_eec ._fae =_eccb ;return _eec ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_fgaf ,_fcg :=_ced .newPdfAnnotationRichMediaFromDict (_efc );if _fcg !=nil {return nil ,_fcg ;};_fgaf .PdfAnnotation =_eec ;_eec ._fae =_fgaf ;return _eec ,nil ;case "\u004d\u006f\u0076i\u0065":_beed ,_aaec :=_ced .newPdfAnnotationMovieFromDict (_efc );
if _aaec !=nil {return nil ,_aaec ;};_beed .PdfAnnotation =_eec ;_eec ._fae =_beed ;return _eec ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_ddb ,_dgdg :=_ced .newPdfAnnotationScreenFromDict (_efc );if _dgdg !=nil {return nil ,_dgdg ;};_ddb .PdfAnnotation =_eec ;
_eec ._fae =_ddb ;return _eec ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_fbea ,_cbca :=_ced .newPdfAnnotationWidgetFromDict (_efc );if _cbca !=nil {return nil ,_cbca ;};_fbea .PdfAnnotation =_eec ;_eec ._fae =_fbea ;return _eec ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_aeg ,_abbc :=_ced .newPdfAnnotationPrinterMarkFromDict (_efc );
if _abbc !=nil {return nil ,_abbc ;};_aeg .PdfAnnotation =_eec ;_eec ._fae =_aeg ;return _eec ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_efed ,_aag :=_ced .newPdfAnnotationTrapNetFromDict (_efc );if _aag !=nil {return nil ,_aag ;};_efed .PdfAnnotation =_eec ;
_eec ._fae =_efed ;return _eec ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_aeac ,_dedba :=_ced .newPdfAnnotationWatermarkFromDict (_efc );if _dedba !=nil {return nil ,_dedba ;};_aeac .PdfAnnotation =_eec ;_eec ._fae =_aeac ;return _eec ,nil ;
case "\u0033\u0044":_ecde ,_age :=_ced .newPdfAnnotation3DFromDict (_efc );if _age !=nil {return nil ,_age ;};_ecde .PdfAnnotation =_eec ;_eec ._fae =_ecde ;return _eec ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_eeae ,_afc :=_ced .newPdfAnnotationProjectionFromDict (_efc );
if _afc !=nil {return nil ,_afc ;};_eeae .PdfAnnotation =_eec ;_eec ._fae =_eeae ;return _eec ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_ggdag ,_begc :=_ced .newPdfAnnotationRedactFromDict (_efc );if _begc !=nil {return nil ,_begc ;};_ggdag .PdfAnnotation =_eec ;
_eec ._fae =_ggdag ;return _eec ,nil ;};_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_ffbc );
return nil ,nil ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_cbbdg *PdfPageResources )GetShadingByName (keyName _cc .PdfObjectName )(*PdfShading ,bool ){if _cbbdg .Shading ==nil {return nil ,false ;};_bfafb ,_bgggb :=_cc .TraceToDirectObject (_cbbdg .Shading ).(*_cc .PdfObjectDictionary );if !_bgggb {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cbbdg .Shading );
return nil ,false ;};if _gcddd :=_bfafb .Get (keyName );_gcddd !=nil {_bbcaa ,_gcedd :=_egfd (_gcddd );if _gcedd !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_gcedd );
return nil ,false ;};return _bbcaa ,true ;};return nil ,false ;};

// SetContext set the sub annotation (context).
func (_fcdag *PdfShading )SetContext (ctx PdfModel ){_fcdag ._beacb =ctx };

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_cc .PdfObjectArray ;_fbcgb *Image ;};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_gffgd :_cc .MakeDict (),ColorComponents :colorComponents };
};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_gabde *Image )ToGoImage ()(_ee .Image ,error ){_df .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_gagad ,_ffefee :=_ec .NewImage (int (_gabde .Width ),int (_gabde .Height ),int (_gabde .BitsPerComponent ),_gabde .ColorComponents ,_gabde .Data ,_gabde ._ccee ,_gabde ._aaaacg );
if _ffefee !=nil {return nil ,_ffefee ;};return _gagad ,nil ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_fgag :=NewPdfAnnotation ();_fcf :=&PdfAnnotationSquiggly {};_fcf .PdfAnnotation =_fgag ;_fcf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fgag .SetContext (_fcf );return _fcf ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_cgg :=NewPdfAnnotation ();_bacd :=&PdfAnnotationPolygon {};_bacd .PdfAnnotation =_cgg ;_bacd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgg .SetContext (_bacd );return _bacd ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_adbf *PdfPageResources )AddExtGState (gsName _cc .PdfObjectName ,gsDict _cc .PdfObject )error {if _adbf .ExtGState ==nil {_adbf .ExtGState =_cc .MakeDict ();};_dbbdd :=_adbf .ExtGState ;_efdac ,_cegee :=_cc .TraceToDirectObject (_dbbdd ).(*_cc .PdfObjectDictionary );
if !_cegee {_df .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_dbbdd ,_cc .TraceToDirectObject (_dbbdd ));
return _cc .ErrTypeError ;};_efdac .Set (gsName ,gsDict );return nil ;};

// ToInteger convert to an integer format.
func (_bgcb *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_effce :=_ed .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_effce *_bgcb .C ()),uint32 (_effce *_bgcb .M ()),uint32 (_effce *_bgcb .Y ()),uint32 (_effce *_bgcb .K ())};};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _cc .PdfObjectArray )(*PdfRectangle ,error ){_adecg :=PdfRectangle {};if arr .Len ()!=4{return nil ,_ede .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _gegfcg error ;_adecg .Llx ,_gegfcg =_cc .GetNumberAsFloat (arr .Get (0));if _gegfcg !=nil {return nil ,_gegfcg ;};_adecg .Lly ,_gegfcg =_cc .GetNumberAsFloat (arr .Get (1));if _gegfcg !=nil {return nil ,_gegfcg ;};_adecg .Urx ,_gegfcg =_cc .GetNumberAsFloat (arr .Get (2));
if _gegfcg !=nil {return nil ,_gegfcg ;};_adecg .Ury ,_gegfcg =_cc .GetNumberAsFloat (arr .Get (3));if _gegfcg !=nil {return nil ,_gegfcg ;};return &_adecg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_aad *PdfAnnotationPolyLine )ToPdfObject ()_cc .PdfObject {_aad .PdfAnnotation .ToPdfObject ();_dbae :=_aad ._cef ;_cag :=_dbae .PdfObject .(*_cc .PdfObjectDictionary );_aad .PdfAnnotationMarkup .appendToPdfDictionary (_cag );_cag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_cag .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_aad .Vertices );_cag .SetIfNotNil ("\u004c\u0045",_aad .LE );_cag .SetIfNotNil ("\u0042\u0053",_aad .BS );_cag .SetIfNotNil ("\u0049\u0043",_aad .IC );_cag .SetIfNotNil ("\u0042\u0045",_aad .BE );
_cag .SetIfNotNil ("\u0049\u0054",_aad .IT );_cag .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_aad .Measure );return _dbae ;};

// A returns the value of the A component of the color.
func (_dfeg *PdfColorCalRGB )A ()float64 {return _dfeg [0]};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_cce :=NewPdfAction ();_dbb :=&PdfActionThread {};_dbb .PdfAction =_cce ;_cce .SetContext (_dbb );return _dbb ;};

// ToInteger convert to an integer format.
func (_bfff *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_gbaf :=_ed .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gbaf *_bfff .A ()),uint32 (_gbaf *_bfff .B ()),uint32 (_gbaf *_bfff .C ())};};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fcfefd *PdfShadingType1 )ToPdfObject ()_cc .PdfObject {_fcfefd .PdfShading .ToPdfObject ();_cbcdf ,_adaecf :=_fcfefd .getShadingDict ();if _adaecf !=nil {_df .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fcfefd .Domain !=nil {_cbcdf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fcfefd .Domain );};if _fcfefd .Matrix !=nil {_cbcdf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_fcfefd .Matrix );};if _fcfefd .Function !=nil {if len (_fcfefd .Function )==1{_cbcdf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fcfefd .Function [0].ToPdfObject ());
}else {_dfede :=_cc .MakeArray ();for _ ,_gfedc :=range _fcfefd .Function {_dfede .Append (_gfedc .ToPdfObject ());};_cbcdf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dfede );};};return _fcfefd ._ccfe ;};func (_edafad *PdfWriter )checkLicense ()error {_bcgdb :=_abc .GetLicenseKey ();
if (_bcgdb ==nil ||!_bcgdb .IsLicensed ())&&!_ffafb {_c .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");_c .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _ede .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_caegf :=PdfColorCalGray (grayVal );return &_caegf ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_cgggda :=NewPdfOutline ();_cgggda ._efbcf =&_cgggda ;return _cgggda ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_cc .PdfObjectInteger ;BitsPerComponent *_cc .PdfObjectInteger ;BitsPerFlag *_cc .PdfObjectInteger ;Decode *_cc .PdfObjectArray ;Function []PdfFunction ;};func (_deeg *PdfReader )newPdfAnnotation3DFromDict (_cfff *_cc .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_cbcd :=PdfAnnotation3D {};
_cbcd .T3DD =_cfff .Get ("\u0033\u0044\u0044");_cbcd .T3DV =_cfff .Get ("\u0033\u0044\u0056");_cbcd .T3DA =_cfff .Get ("\u0033\u0044\u0041");_cbcd .T3DI =_cfff .Get ("\u0033\u0044\u0049");_cbcd .T3DB =_cfff .Get ("\u0033\u0044\u0042");return &_cbcd ,nil ;
};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_aafa *PdfAppender )UpdateObject (obj _cc .PdfObject ){_aafa .replaceObject (obj ,obj );if _ ,_eegb :=_aafa ._bdge [obj ];!_eegb {_aafa ._bcdd =append (_aafa ._bcdd ,obj );_aafa ._bdge [obj ]=struct{}{};};};func (_eaa *PdfReader )newPdfActionGotoEFromDict (_acbc *_cc .PdfObjectDictionary )(*PdfActionGoToE ,error ){_ccaa ,_dgfg :=_gfg (_acbc .Get ("\u0046"));
if _dgfg !=nil {return nil ,_dgfg ;};return &PdfActionGoToE {D :_acbc .Get ("\u0044"),NewWindow :_acbc .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_acbc .Get ("\u0054"),F :_ccaa },nil ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _cc .PdfObject ;T3DV _cc .PdfObject ;T3DA _cc .PdfObject ;T3DI _cc .PdfObject ;T3DB _cc .PdfObject ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_aagc FieldFlag )Mask ()uint32 {return uint32 (_aagc )};

// MergePageWith appends page content to source Pdf file page content.
func (_gacb *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_dagc :=pageNum -1;var _bea *PdfPage ;for _gebf ,_adaeed :=range _gacb ._dfaa {if _gebf ==_dagc {_bea =_adaeed ;};};if _bea ==nil {return _c .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _bea ._bfgcg !=nil &&_bea ._bfgcg .GetParser ()==_gacb ._eaeg ._bbed {_bea =_bea .Duplicate ();_gacb ._dfaa [_dagc ]=_bea ;};page =page .Duplicate ();_cafcfc (page );_dcac :=_adaee (_bea );_gdgef :=_adaee (page );_cebg :=make (map[_cc .PdfObjectName ]_cc .PdfObjectName );
for _fggf :=range _gdgef {if _ ,_fccc :=_dcac [_fggf ];_fccc {for _gdgf :=1;true ;_gdgf ++{_daaf :=_cc .PdfObjectName (string (_fggf )+_gf .Itoa (_gdgf ));if _ ,_abbb :=_dcac [_daaf ];!_abbb {_cebg [_fggf ]=_daaf ;break ;};};};};_bdga ,_aafb :=page .GetContentStreams ();
if _aafb !=nil {return _aafb ;};_effgg ,_aafb :=_bea .GetContentStreams ();if _aafb !=nil {return _aafb ;};for _dgag ,_cdba :=range _bdga {for _cdaf ,_fcce :=range _cebg {_cdba =_fa .Replace (_cdba ,"\u002f"+string (_cdaf ),"\u002f"+string (_fcce ),-1);
};_bdga [_dgag ]=_cdba ;};_effgg =append (_effgg ,_bdga ...);if _gefa :=_bea .SetContentStreams (_effgg ,_cc .NewFlateEncoder ());_gefa !=nil {return _gefa ;};_bea ._dagff =append (_bea ._dagff ,page ._dagff ...);if _bea .Resources ==nil {_bea .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_bea .Resources .Font =_gacb .mergeResources (_bea .Resources .Font ,page .Resources .Font ,_cebg );_bea .Resources .XObject =_gacb .mergeResources (_bea .Resources .XObject ,page .Resources .XObject ,_cebg );_bea .Resources .Properties =_gacb .mergeResources (_bea .Resources .Properties ,page .Resources .Properties ,_cebg );
if _bea .Resources .ProcSet ==nil {_bea .Resources .ProcSet =page .Resources .ProcSet ;};_bea .Resources .Shading =_gacb .mergeResources (_bea .Resources .Shading ,page .Resources .Shading ,_cebg );_bea .Resources .ExtGState =_gacb .mergeResources (_bea .Resources .ExtGState ,page .Resources .ExtGState ,_cebg );
};_ffcg ,_aafb :=_bea .GetMediaBox ();if _aafb !=nil {return _aafb ;};_ffca ,_aafb :=page .GetMediaBox ();if _aafb !=nil {return _aafb ;};var _fbab bool ;if _ffcg .Llx > _ffca .Llx {_ffcg .Llx =_ffca .Llx ;_fbab =true ;};if _ffcg .Lly > _ffca .Lly {_ffcg .Lly =_ffca .Lly ;
_fbab =true ;};if _ffcg .Urx < _ffca .Urx {_ffcg .Urx =_ffca .Urx ;_fbab =true ;};if _ffcg .Ury < _ffca .Ury {_ffcg .Ury =_ffca .Ury ;_fbab =true ;};if _fbab {_bea .MediaBox =_ffcg ;};return nil ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _cc .PdfObject ;FontFamily _cc .PdfObject ;FontStretch _cc .PdfObject ;FontWeight _cc .PdfObject ;Flags _cc .PdfObject ;FontBBox _cc .PdfObject ;ItalicAngle _cc .PdfObject ;Ascent _cc .PdfObject ;Descent _cc .PdfObject ;
Leading _cc .PdfObject ;CapHeight _cc .PdfObject ;XHeight _cc .PdfObject ;StemV _cc .PdfObject ;StemH _cc .PdfObject ;AvgWidth _cc .PdfObject ;MaxWidth _cc .PdfObject ;MissingWidth _cc .PdfObject ;FontFile _cc .PdfObject ;FontFile2 _cc .PdfObject ;FontFile3 _cc .PdfObject ;
CharSet _cc .PdfObject ;_febd int ;_fbddf float64 ;*fontFile ;_gbgc *_edg .TtfType ;

// Additional entries for CIDFonts
Style _cc .PdfObject ;Lang _cc .PdfObject ;FD _cc .PdfObject ;CIDSet _cc .PdfObject ;_dfdd *_cc .PdfIndirectObject ;};func (_caba *PdfWriter )writeOutputIntents ()error {if len (_caba ._ccfc )==0{return nil ;};_debab :=make ([]_cc .PdfObject ,len (_caba ._ccfc ));
for _aagce ,_efefc :=range _caba ._ccfc {_efbfc :=_efefc .ToPdfObject ();_debab [_aagce ]=_cc .MakeIndirectObject (_efbfc );};_aebgdd :=_cc .MakeIndirectObject (_cc .MakeArray (_debab ...));_caba ._feff .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_aebgdd );
if _fdbf :=_caba .addObjects (_aebgdd );_fdbf !=nil {return _fdbf ;};return nil ;};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_ebeb *PdfColorspaceICCBased )GetContainingPdfObject ()_cc .PdfObject {return _ebeb ._ecdc };

// ToPdfObject implements interface PdfModel.
func (_dg *PdfActionSetOCGState )ToPdfObject ()_cc .PdfObject {_dg .PdfAction .ToPdfObject ();_ddc :=_dg ._dae ;_fgf :=_ddc .PdfObject .(*_cc .PdfObjectDictionary );_fgf .SetIfNotNil ("\u0053",_cc .MakeName (string (ActionTypeSetOCGState )));_fgf .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_dg .State );
_fgf .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_dg .PreserveRB );return _ddc ;};

// ToGoTime returns the date in time.Time format.
func (_bebdc PdfDate )ToGoTime ()_b .Time {_ffbff :=int (_bebdc ._gcded *60*60+_bebdc ._ebdg *60);switch _bebdc ._dafbd {case '-':_ffbff =-_ffbff ;case 'Z':_ffbff =0;};_bcga :=_c .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_bebdc ._dafbd ,_bebdc ._gcded ,_bebdc ._ebdg );
_cbcbg :=_b .FixedZone (_bcga ,_ffbff );return _b .Date (int (_bebdc ._dceda ),_b .Month (_bebdc ._ecgba ),int (_bebdc ._bdddb ),int (_bebdc ._fgcccb ),int (_bebdc ._abdd ),int (_bebdc ._eaded ),0,_cbcbg );};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_dcad *PdfColorspaceCalGray )ToPdfObject ()_cc .PdfObject {_abcfg :=&_cc .PdfObjectArray {};_abcfg .Append (_cc .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_baeb :=_cc .MakeDict ();if _dcad .WhitePoint !=nil {_baeb .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_cc .MakeArray (_cc .MakeFloat (_dcad .WhitePoint [0]),_cc .MakeFloat (_dcad .WhitePoint [1]),_cc .MakeFloat (_dcad .WhitePoint [2])));
}else {_df .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _dcad .BlackPoint !=nil {_baeb .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_cc .MakeArray (_cc .MakeFloat (_dcad .BlackPoint [0]),_cc .MakeFloat (_dcad .BlackPoint [1]),_cc .MakeFloat (_dcad .BlackPoint [2])));
};_baeb .Set ("\u0047\u0061\u006dm\u0061",_cc .MakeFloat (_dcad .Gamma ));_abcfg .Append (_baeb );if _dcad ._dedf !=nil {_dcad ._dedf .PdfObject =_abcfg ;return _dcad ._dedf ;};return _abcfg ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_edg .CharMetrics ;

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gafeea pdfFontType0 )GetRuneMetrics (r rune )(_edg .CharMetrics ,bool ){if _gafeea .DescendantFont ==nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_gafeea );
return _edg .CharMetrics {},false ;};return _gafeea .DescendantFont .GetRuneMetrics (r );};

// RemovePage removes a page by number.
func (_efbe *PdfAppender )RemovePage (pageNum int ){_gaae :=pageNum -1;_efbe ._dfaa =append (_efbe ._dfaa [0:_gaae ],_efbe ._dfaa [pageNum :]...);};type pdfFontSimple struct{fontCommon ;_ggdfc *_cc .PdfIndirectObject ;_fdcc map[_cbf .CharCode ]float64 ;
_fbed _cbf .TextEncoder ;_gbbe _cbf .TextEncoder ;_bbaccb *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _cc .PdfObject ;LastChar _cc .PdfObject ;Widths _cc .PdfObject ;Encoding _cc .PdfObject ;_gageb *_edg .RuneCharSafeMap ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_ccefg *PdfFont )CharcodesToStrings (charcodes []_cbf .CharCode )([]string ,int ,int ){_fggbb :=_ccefg .baseFields ();_bgcc :=make ([]string ,0,len (charcodes ));_gfab :=0;_cegc :=_ccefg .Encoder ();_fafa :=_fggbb ._fgbf !=nil &&_ccefg .IsSimple ()&&_ccefg .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_fa .Contains (_fggbb ._fgbf .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_fafa &&_cegc !=nil {switch _eadb :=_cegc .(type ){case _cbf .SimpleEncoder :_debg :=_eadb .BaseName ();if _ ,_dgddgd :=_egdd [_debg ];_dgddgd {for _ ,_dedg :=range charcodes {if _fgagd ,_agdce :=_cegc .CharcodeToRune (_dedg );_agdce {_bgcc =append (_bgcc ,string (_fgagd ));
}else {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_dedg ,charcodes ,_fggbb .isCIDFont (),_ccefg ,_cegc );
_gfab ++;_bgcc =append (_bgcc ,_fac .MissingCodeString );};};return _bgcc ,len (_bgcc ),_gfab ;};};};for _ ,_cgfac :=range charcodes {if _fggbb ._fgbf !=nil {if _bccbec ,_bage :=_fggbb ._fgbf .CharcodeToUnicode (_fac .CharCode (_cgfac ));_bage {_bgcc =append (_bgcc ,_bccbec );
continue ;};};if _cegc !=nil {if _eabg ,_bafff :=_cegc .CharcodeToRune (_cgfac );_bafff {_bgcc =append (_bgcc ,string (_eabg ));continue ;};};_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_cgfac ,charcodes ,_fggbb .isCIDFont (),_ccefg ,_cegc );
_gfab ++;_bgcc =append (_bgcc ,_fac .MissingCodeString );};if _gfab !=0{_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_gfab ,_ccefg );
};return _bgcc ,len (_bgcc ),_gfab ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_bdegg *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_dgabag :=_dac .NewReader (img .getBase ());_ffac :=_ec .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._ccee ,img ._aaaacg );
_cffd :=_dac .NewWriter (_ffac );_gdecc :=_ed .Pow (2,float64 (img .BitsPerComponent ))-1;_gcfcb :=_bdegg .GetNumComponents ();_agfef :=make ([]uint32 ,_gcfcb );_adbcb :=make ([]float64 ,_gcfcb );for {_agbf :=_dgabag .ReadSamples (_agfef );if _agbf ==_cd .EOF {break ;
}else if _agbf !=nil {return img ,_agbf ;};for _bbbf :=0;_bbbf < _gcfcb ;_bbbf ++{_dccac :=float64 (_agfef [_bbbf ])/_gdecc ;_adbcb [_bbbf ]=_dccac ;};_bbdbc ,_agbf :=_bdegg .TintTransform .Evaluate (_adbcb );if _agbf !=nil {return img ,_agbf ;};for _ ,_faeb :=range _bbdbc {_faeb =_ed .Min (_ed .Max (0,_faeb ),1.0);
if _agbf =_cffd .WriteSample (uint32 (_faeb *_gdecc ));_agbf !=nil {return img ,_agbf ;};};};return _bdegg .AlternateSpace .ImageToRGB (_bagc (&_ffac ));};

// GetPageDict converts the Page to a PDF object dictionary.
func (_gbba *PdfPage )GetPageDict ()*_cc .PdfObjectDictionary {_debbg :=_gbba ._gcead ;_debbg .Clear ();_debbg .Set ("\u0054\u0079\u0070\u0065",_cc .MakeName ("\u0050\u0061\u0067\u0065"));_debbg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gbba .Parent );
if _gbba .LastModified !=nil {_debbg .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_gbba .LastModified .ToPdfObject ());};if _gbba .Resources !=nil {_debbg .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gbba .Resources .ToPdfObject ());
};if _gbba .CropBox !=nil {_debbg .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_gbba .CropBox .ToPdfObject ());};if _gbba .MediaBox !=nil {_debbg .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_gbba .MediaBox .ToPdfObject ());};if _gbba .BleedBox !=nil {_debbg .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_gbba .BleedBox .ToPdfObject ());
};if _gbba .TrimBox !=nil {_debbg .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_gbba .TrimBox .ToPdfObject ());};if _gbba .ArtBox !=nil {_debbg .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_gbba .ArtBox .ToPdfObject ());};_debbg .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_gbba .BoxColorInfo );
_debbg .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_gbba .Contents );if _gbba .Rotate !=nil {_debbg .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_cc .MakeInteger (*_gbba .Rotate ));};_debbg .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_gbba .Group );
_debbg .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_gbba .Thumb );_debbg .SetIfNotNil ("\u0042",_gbba .B );_debbg .SetIfNotNil ("\u0044\u0075\u0072",_gbba .Dur );_debbg .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_gbba .Trans );_debbg .SetIfNotNil ("\u0041\u0041",_gbba .AA );
_debbg .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gbba .Metadata );_debbg .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_gbba .PieceInfo );_debbg .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_gbba .StructParents );
_debbg .SetIfNotNil ("\u0049\u0044",_gbba .ID );_debbg .SetIfNotNil ("\u0050\u005a",_gbba .PZ );_debbg .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_gbba .SeparationInfo );_debbg .SetIfNotNil ("\u0054\u0061\u0062\u0073",_gbba .Tabs );
_debbg .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_gbba .TemplateInstantiated );_debbg .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_gbba .PresSteps );_debbg .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_gbba .UserUnit );
_debbg .SetIfNotNil ("\u0056\u0050",_gbba .VP );if _gbba ._dagff !=nil {_gddfaa :=_cc .MakeArray ();for _ ,_dgedb :=range _gbba ._dagff {if _bbdbe :=_dgedb .GetContext ();_bbdbe !=nil {_gddfaa .Append (_bbdbe .ToPdfObject ());}else {_gddfaa .Append (_dgedb .ToPdfObject ());
};};if _gddfaa .Len ()> 0{_debbg .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_gddfaa );};}else if _gbba .Annots !=nil {_debbg .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_gbba .Annots );};return _debbg ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_bdec *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_cdeff ,_cabc :=color .(*PdfColorCalRGB );if !_cabc {_df .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_ede .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cafc :=_cdeff .A ();_ebbad :=_cdeff .B ();_aee :=_cdeff .C ();X :=_bdec .Matrix [0]*_ed .Pow (_cafc ,_bdec .Gamma [0])+_bdec .Matrix [3]*_ed .Pow (_ebbad ,_bdec .Gamma [1])+_bdec .Matrix [6]*_ed .Pow (_aee ,_bdec .Gamma [2]);
Y :=_bdec .Matrix [1]*_ed .Pow (_cafc ,_bdec .Gamma [0])+_bdec .Matrix [4]*_ed .Pow (_ebbad ,_bdec .Gamma [1])+_bdec .Matrix [7]*_ed .Pow (_aee ,_bdec .Gamma [2]);Z :=_bdec .Matrix [2]*_ed .Pow (_cafc ,_bdec .Gamma [0])+_bdec .Matrix [5]*_ed .Pow (_ebbad ,_bdec .Gamma [1])+_bdec .Matrix [8]*_ed .Pow (_aee ,_bdec .Gamma [2]);
_fgage :=3.240479*X +-1.537150*Y +-0.498535*Z ;_bbgc :=-0.969256*X +1.875992*Y +0.041556*Z ;_addgf :=0.055648*X +-0.204043*Y +1.057311*Z ;_fgage =_ed .Min (_ed .Max (_fgage ,0),1.0);_bbgc =_ed .Min (_ed .Max (_bbgc ,0),1.0);_addgf =_ed .Min (_ed .Max (_addgf ,0),1.0);
return NewPdfColorDeviceRGB (_fgage ,_bbgc ,_addgf ),nil ;};func (_cbad *PdfFilespec )getDict ()*_cc .PdfObjectDictionary {if _babff ,_bacb :=_cbad ._adeca .(*_cc .PdfIndirectObject );_bacb {_cafgg ,_ggff :=_babff .PdfObject .(*_cc .PdfObjectDictionary );
if !_ggff {return nil ;};return _cafgg ;}else if _daabg ,_bggbe :=_cbad ._adeca .(*_cc .PdfObjectDictionary );_bggbe {return _daabg ;}else {_df .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_cbad ._adeca );
return nil ;};};

// Encoder returns the font's text encoder.
func (_dedbc pdfFontType0 )Encoder ()_cbf .TextEncoder {return _dedbc ._feggc };

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_ebaca *PdfPattern )SetContext (ctx PdfModel ){_ebaca ._dfcbb =ctx };func (_cbaf *PdfReader )newPdfFieldFromIndirectObject (_gabd *_cc .PdfIndirectObject ,_cffg *PdfField )(*PdfField ,error ){if _edebf ,_face :=_cbaf ._ecbgec .GetModelFromPrimitive (_gabd ).(*PdfField );
_face {return _edebf ,nil ;};_bgfaa ,_bfeec :=_cc .GetDict (_gabd );if !_bfeec {return nil ,_c .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_egbfd :=NewPdfField ();_egbfd ._geafg =_gabd ;_egbfd ._geafg .PdfObject =_bgfaa ;if _dfdg ,_gedb :=_cc .GetName (_bgfaa .Get ("\u0046\u0054"));_gedb {_egbfd .FT =_dfdg ;};if _cffg !=nil {_egbfd .Parent =_cffg ;};_egbfd .T ,_ =_bgfaa .Get ("\u0054").(*_cc .PdfObjectString );
_egbfd .TU ,_ =_bgfaa .Get ("\u0054\u0055").(*_cc .PdfObjectString );_egbfd .TM ,_ =_bgfaa .Get ("\u0054\u004d").(*_cc .PdfObjectString );_egbfd .Ff ,_ =_bgfaa .Get ("\u0046\u0066").(*_cc .PdfObjectInteger );_egbfd .V =_bgfaa .Get ("\u0056");_egbfd .DV =_bgfaa .Get ("\u0044\u0056");
_egbfd .AA =_bgfaa .Get ("\u0041\u0041");if DA :=_bgfaa .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_cc .GetString (DA );_egbfd .VariableText =&VariableText {DA :DA };Q ,_ :=_bgfaa .Get ("\u0051").(*_cc .PdfObjectInteger );DS ,_ :=_bgfaa .Get ("\u0044\u0053").(*_cc .PdfObjectString );
RV :=_bgfaa .Get ("\u0052\u0056");_egbfd .VariableText .Q =Q ;_egbfd .VariableText .DS =DS ;_egbfd .VariableText .RV =RV ;};_bcebbg :=_egbfd .FT ;if _bcebbg ==nil &&_cffg !=nil {_bcebbg =_cffg .FT ;};if _bcebbg !=nil {switch *_bcebbg {case "\u0054\u0078":_gccda ,_ggbc :=_fbfg (_bgfaa );
if _ggbc !=nil {return nil ,_ggbc ;};_gccda .PdfField =_egbfd ;_egbfd ._egbe =_gccda ;case "\u0043\u0068":_cfag ,_gfaa :=_gdaag (_bgfaa );if _gfaa !=nil {return nil ,_gfaa ;};_cfag .PdfField =_egbfd ;_egbfd ._egbe =_cfag ;case "\u0042\u0074\u006e":_decc ,_ceede :=_bgcbd (_bgfaa );
if _ceede !=nil {return nil ,_ceede ;};_decc .PdfField =_egbfd ;_egbfd ._egbe =_decc ;case "\u0053\u0069\u0067":_bgag ,_aecd :=_cbaf .newPdfFieldSignatureFromDict (_bgfaa );if _aecd !=nil {return nil ,_aecd ;};_bgag .PdfField =_egbfd ;_egbfd ._egbe =_bgag ;
default:_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_egbfd .FT );return nil ,_ede .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _fge ,_bdgb :=_cc .GetName (_bgfaa .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_bdgb {if *_fge =="\u0057\u0069\u0064\u0067\u0065\u0074"{_cbcdb ,_gdbe :=_cbaf .newPdfAnnotationFromIndirectObject (_gabd );if _gdbe !=nil {return nil ,_gdbe ;};_fgca ,_cccf :=_cbcdb .GetContext ().(*PdfAnnotationWidget );
if !_cccf {return nil ,_ede .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_fgca ._gda =_egbfd ;_fgca .Parent =_egbfd ._geafg ;_egbfd .Annotations =append (_egbfd .Annotations ,_fgca );
return _egbfd ,nil ;};};_cebf :=true ;if _eafgg ,_gced :=_cc .GetArray (_bgfaa .Get ("\u004b\u0069\u0064\u0073"));_gced {_dafbc :=make ([]*_cc .PdfIndirectObject ,0,_eafgg .Len ());for _ ,_ecgc :=range _eafgg .Elements (){_ffagb ,_baebb :=_cc .GetIndirect (_ecgc );
if !_baebb {_gebb ,_fcca :=_cc .GetStream (_ecgc );if _fcca &&_gebb .PdfObjectDictionary !=nil {_dggcc ,_fgac :=_cc .GetNameVal (_gebb .Get ("\u0054\u0079\u0070\u0065"));if _fgac &&_dggcc =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_df .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_ede .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_cabbg ,_eeeb :=_cc .GetDict (_ffagb );
if !_eeeb {return nil ,ErrTypeCheck ;};if _cebf {_cebf =!_edeba (_cabbg );};_dafbc =append (_dafbc ,_ffagb );};for _ ,_baef :=range _dafbc {if _cebf {_fegg ,_fcdd :=_cbaf .newPdfAnnotationFromIndirectObject (_baef );if _fcdd !=nil {_df .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_fcdd );
return nil ,_fcdd ;};_degge ,_bgabb :=_fegg ._fae .(*PdfAnnotationWidget );if !_bgabb {return nil ,ErrTypeCheck ;};_degge ._gda =_egbfd ;_egbfd .Annotations =append (_egbfd .Annotations ,_degge );}else {_dfab ,_cfcb :=_cbaf .newPdfFieldFromIndirectObject (_baef ,_egbfd );
if _cfcb !=nil {_df .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_cfcb );return nil ,_cfcb ;};_egbfd .Kids =append (_egbfd .Kids ,_dfab );
};};};return _egbfd ,nil ;};func (_bbfe *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _cc .PdfObject ;Sy _cc .PdfObject ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );func _gafge ()string {_aaefb .Lock ();defer _aaefb .Unlock ();return _bcge };func _accde (_bdged *EmbeddedFile )*PdfFilespec {_aeba :=&PdfFilespec {};
_aeba ._adeca =_cc .MakeIndirectObject (_cc .MakeDict ());_aeba .Desc =_cc .MakeString (_bdged .Description );_aeba .EF =_bdged .ToPdfObject ();_aeba .F =_cc .MakeString (_bdged .Name );_aeba .UF =_cc .MakeEncodedString (_bdged .Name ,true );_cgfdf :="U\u006e\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064";
switch _bdged .Relationship {case RelationshipSource :_cgfdf ="\u0053\u006f\u0075\u0072\u0063\u0065";case RelationshipData :_cgfdf ="\u0044\u0061\u0074\u0061";case RelationshipAlternative :_cgfdf ="A\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065";
case RelationshipSupplement :_cgfdf ="\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074";};_aeba .AFRelationship =_cc .MakeName (_cgfdf );return _aeba ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_fadff *PdfWriter )SetNameDictionary (names _cc .PdfObject )error {if names ==nil {return nil ;};_fadff ._ccagg =_decdd (names );_df .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_fadff ._feff .Set ("\u004e\u0061\u006de\u0073",names );return _fadff .addObjects (names );};

// ToPdfObject implements interface PdfModel.
func (_eceg *PdfAnnotationPopup )ToPdfObject ()_cc .PdfObject {_eceg .PdfAnnotation .ToPdfObject ();_gebc :=_eceg ._cef ;_gaa :=_gebc .PdfObject .(*_cc .PdfObjectDictionary );_gaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0050\u006f\u0070u\u0070"));
_gaa .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_eceg .Parent );_gaa .SetIfNotNil ("\u004f\u0070\u0065\u006e",_eceg .Open );return _gebc ;};func (_ggac *PdfReader )newPdfAcroFormFromDict (_dfbcdd *_cc .PdfIndirectObject ,_gfaaf *_cc .PdfObjectDictionary )(*PdfAcroForm ,error ){_gbaab :=NewPdfAcroForm ();
if _dfbcdd !=nil {_gbaab ._cgbg =_dfbcdd ;_dfbcdd .PdfObject =_cc .MakeDict ();};if _bbecd :=_gfaaf .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_bbecd !=nil &&!_cc .IsNullObject (_bbecd ){_ecgcf ,_eaffb :=_cc .GetArray (_bbecd );if !_eaffb {return nil ,_c .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_bbecd );
};var _debfe []*PdfField ;for _ ,_dffcb :=range _ecgcf .Elements (){_cbbg ,_dgcf :=_cc .GetIndirect (_dffcb );if !_dgcf {if _ ,_afgaa :=_dffcb .(*_cc .PdfObjectNull );_afgaa {_df .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_df .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_dffcb );
return nil ,_c .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_daeg ,_deddf :=_ggac .newPdfFieldFromIndirectObject (_cbbg ,nil );
if _deddf !=nil {return nil ,_deddf ;};_df .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_daeg );_debfe =append (_debfe ,_daeg );};_gbaab .Fields =&_debfe ;};if _eaege :=_gfaaf .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_eaege !=nil {_acgg ,_cfcg :=_cc .GetBool (_eaege );if _cfcg {_gbaab .NeedAppearances =_acgg ;}else {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_eaege );
};};if _bafdb :=_gfaaf .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_bafdb !=nil {_gffg ,_eaagde :=_cc .GetInt (_bafdb );if _eaagde {_gbaab .SigFlags =_gffg ;}else {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bafdb );
};};if _eefccd :=_gfaaf .Get ("\u0043\u004f");_eefccd !=nil {_bbfgd ,_gebef :=_cc .GetArray (_eefccd );if _gebef {_gbaab .CO =_bbfgd ;}else {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_eefccd );
};};if _gffa :=_gfaaf .Get ("\u0044\u0052");_gffa !=nil {if _adgec ,_ddgea :=_cc .GetDict (_gffa );_ddgea {_fbbc ,_dcbed :=NewPdfPageResourcesFromDict (_adgec );if _dcbed !=nil {_df .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_dcbed );
return nil ,_dcbed ;};_gbaab .DR =_fbbc ;}else {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_gffa );};};if _gfbcf :=_gfaaf .Get ("\u0044\u0041");
_gfbcf !=nil {_dgdda ,_cbbe :=_cc .GetString (_gfbcf );if _cbbe {_gbaab .DA =_dgdda ;}else {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_gfbcf );
};};if _cagba :=_gfaaf .Get ("\u0051");_cagba !=nil {_abedc ,_fccag :=_cc .GetInt (_cagba );if _fccag {_gbaab .Q =_abedc ;}else {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_cagba );
};};if _cabe :=_gfaaf .Get ("\u0058\u0046\u0041");_cabe !=nil {_gbaab .XFA =_cabe ;};if _gcab :=_gfaaf .Get ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e");_gcab !=nil {_gbaab .ADBEEchoSign =_gcab ;};_gbaab .ToPdfObject ();
return _gbaab ,nil ;};

// AddOCSPs adds OCSPs to DSS.
func (_gddd *DSS )AddOCSPs (ocsps [][]byte )([]*_cc .PdfObjectStream ,error ){return _gddd .add (&_gddd .OCSPs ,_gddd ._ggfg ,ocsps );};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_bbd .PSProgram ;_gegg *_bbd .PSExecutor ;_bgee []byte ;_fded *_cc .PdfObjectStream ;};func (_fdcgg *PdfWriter )writeOutlines ()error {if _fdcgg ._afeb ==nil {return nil ;};_df .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_fdcgg ._afeb );
_ceeba :=_fdcgg ._afeb .ToPdfObject ();_df .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_ceeba ,_ceeba ,_ceeba );_fdcgg ._feff .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_ceeba );
_dcfbae :=_fdcgg .addObjects (_ceeba );if _dcfbae !=nil {return _dcfbae ;};return nil ;};type fontFile struct{_gbab string ;_cece string ;_abdgb _cbf .SimpleEncoder ;};func (_cff *PdfReader )newPdfAnnotationCaretFromDict (_cgec *_cc .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_cbgc :=PdfAnnotationCaret {};
_adcd ,_cfbg :=_cff .newPdfAnnotationMarkupFromDict (_cgec );if _cfbg !=nil {return nil ,_cfbg ;};_cbgc .PdfAnnotationMarkup =_adcd ;_cbgc .RD =_cgec .Get ("\u0052\u0044");_cbgc .Sy =_cgec .Get ("\u0053\u0079");return &_cbgc ,nil ;};

// NewPdfShadingPatternType3 creates an empty shading pattern type 3 object.
func NewPdfShadingPatternType3 ()*PdfShadingPatternType3 {_ddfef :=&PdfShadingPatternType3 {};_ddfef .Matrix =_cc .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_ddfef .PdfPattern =&PdfPattern {};_ddfef .PdfPattern .PatternType =int64 (*_cc .MakeInteger (2));
_ddfef .PdfPattern ._dfcbb =_ddfef ;_ddfef .PdfPattern ._ecegf =_cc .MakeIndirectObject (_cc .MakeDict ());return _ddfef ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_geafg :_cc .MakeIndirectObject (_cc .MakeDict ())}};

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_cc .PdfParser ;DiffPolicy _fd .DiffPolicy ;};func (_aedggg *PdfReader )newPdfSignatureReferenceFromDict (_cgfabf *_cc .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _ffaca ,_cdgbc :=_aedggg ._ecbgec .GetModelFromPrimitive (_cgfabf ).(*PdfSignatureReference );
_cdgbc {return _ffaca ,nil ;};_bbead :=&PdfSignatureReference {_ebgeg :_cgfabf ,Data :_cgfabf .Get ("\u0044\u0061\u0074\u0061")};var _fgfbac bool ;_bbead .Type ,_ =_cc .GetName (_cgfabf .Get ("\u0054\u0079\u0070\u0065"));_bbead .TransformMethod ,_fgfbac =_cc .GetName (_cgfabf .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_fgfbac {_df .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_bbead .TransformParams ,_ =_cc .GetDict (_cgfabf .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_bbead .DigestMethod ,_ =_cc .GetName (_cgfabf .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _bbead ,nil ;};

// B returns the value of the B component of the color.
func (_becd *PdfColorCalRGB )B ()float64 {return _becd [1]};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_ag :=NewPdfAction ();_daa :=&PdfActionGoTo3DView {};_daa .PdfAction =_ag ;_ag .SetContext (_daa );return _daa ;};

// A returns the value of the A component of the color.
func (_bgcf *PdfColorLab )A ()float64 {return _bgcf [1]};func (_bfgba *Image )samplesAddPadding (_bfab []uint32 )[]uint32 {_fegcf :=_ec .BytesPerLine (int (_bfgba .Width ),int (_bfgba .BitsPerComponent ),_bfgba .ColorComponents )*(8/int (_bfgba .BitsPerComponent ));
_debgac :=_fegcf *int (_bfgba .Height );if len (_bfab )==_debgac {return _bfab ;};_bbfa :=make ([]uint32 ,_debgac );_edde :=int (_bfgba .Width )*_bfgba .ColorComponents ;for _agcgd :=0;_agcgd < int (_bfgba .Height );_agcgd ++{_aafe :=_agcgd *int (_bfgba .Width );
_deee :=_agcgd *_fegcf ;for _bdadg :=0;_bdadg < _edde ;_bdadg ++{_bbfa [_deee +_bdadg ]=_bfab [_aafe +_bdadg ];};};return _bbfa ;};func _egcfa (_dbgd *_cc .PdfIndirectObject )(*PdfOutline ,error ){_becb ,_fabdc :=_dbgd .PdfObject .(*_cc .PdfObjectDictionary );
if !_fabdc {return nil ,_c .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_dbegg :=NewPdfOutline ();if _abbg :=_becb .Get ("\u0054\u0079\u0070\u0065");
_abbg !=nil {_fdgbf ,_cbgac :=_abbg .(*_cc .PdfObjectName );if _cbgac {if *_fdgbf !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_fdgbf );
};};};if _egaa :=_becb .Get ("\u0043\u006f\u0075n\u0074");_egaa !=nil {_cabcf ,_bfdc :=_cc .GetNumberAsInt64 (_egaa );if _bfdc !=nil {return nil ,_bfdc ;};_dbegg .Count =&_cabcf ;};return _dbegg ,nil ;};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_gffgd :_cc .MakeDict ()};
};

// GetContentStreams returns the content stream as an array of strings.
func (_eaaeb *PdfPage )GetContentStreams ()([]string ,error ){_fdgdd :=_eaaeb .GetContentStreamObjs ();var _baefg []string ;for _ ,_becce :=range _fdgdd {_affg ,_ffcaf :=_effca (_becce );if _ffcaf !=nil {return nil ,_ffcaf ;};_baefg =append (_baefg ,_affg );
};return _baefg ,nil ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _cc .PdfObject ;H _cc .PdfObject ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_fae PdfModel ;Rect _cc .PdfObject ;Contents _cc .PdfObject ;P _cc .PdfObject ;NM _cc .PdfObject ;M _cc .PdfObject ;F _cc .PdfObject ;AP _cc .PdfObject ;AS _cc .PdfObject ;Border _cc .PdfObject ;C _cc .PdfObject ;StructParent _cc .PdfObject ;
OC _cc .PdfObject ;_cef *_cc .PdfIndirectObject ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_cdagc :=&PdfColorspaceSpecialSeparation {};return _cdagc ;};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_abbdg *PdfPage )Size ()(float64 ,float64 ,error ){_gdcf ,_bdbf :=_abbdg .GetMediaBox ();if _bdbf !=nil {return 0,0,_bdbf ;};_dagaa ,_cegdf :=_gdcf .Width (),_gdcf .Height ();_aagbc ,_bdbf :=_abbdg .GetRotate ();if _bdbf !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_bdbf .Error ());
};if _egbcc :=_aagbc ;_egbcc %360!=0&&_egbcc %90==0{if _ccdad :=(360+_egbcc %360)%360;_ccdad ==90||_ccdad ==270{_dagaa ,_cegdf =_cegdf ,_dagaa ;};};return _dagaa ,_cegdf ,nil ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _cc .PdfObject ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_cga :=NewPdfAnnotation ();_abef :=&PdfAnnotationSquare {};_abef .PdfAnnotation =_cga ;_abef .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cga .SetContext (_abef );return _abef ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _cd .ReadSeeker )(*PdfReader ,error ){const _fgcbf ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _dcbcbe (rs ,&ReaderOpts {},false ,_fgcbf );};func _dgdbb (_fbcgbg *XObjectImage )error {if _fbcgbg .SMask ==nil {return nil ;
};_agaf ,_adbdb :=_fbcgbg .SMask .(*_cc .PdfObjectStream );if !_adbdb {_df .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _cc .ErrTypeError ;
};_acadac :=_agaf .PdfObjectDictionary ;_dffcd :=_acadac .Get ("\u004d\u0061\u0074t\u0065");if _dffcd ==nil {return nil ;};_aeea ,_feebc :=_bgacg (_dffcd .(*_cc .PdfObjectArray ));if _feebc !=nil {return _feebc ;};_edgff :=_cc .MakeArrayFromFloats ([]float64 {_aeea });
_acadac .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_edgff );return nil ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_abgbb ,_gdgaf :=_baad (basefont );if _gdgaf !=nil {return nil ,_gdgaf ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_abgbb ._fbed =_cbf .NewWinAnsiEncoder ();};return &PdfFont {_ggec :&_abgbb },nil ;
};func (_ccde *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};func (_dcdcg *pdfFontSimple )baseFields ()*fontCommon {return &_dcdcg .fontCommon };

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_caefc *PdfPage )GetRotate ()(int64 ,error ){if _caefc .Rotate !=nil {return *_caefc .Rotate ,nil ;};_baaeb :=_caefc .Parent ;for _baaeb !=nil {_edcce ,_fgcdf :=_cc .GetDict (_baaeb );if !_fgcdf {return 0,_ede .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _adee :=_edcce .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_adee !=nil {_ddaabe ,_deceg :=_cc .GetInt (_adee );if !_deceg {return 0,_ede .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};if _ddaabe !=nil {return int64 (*_ddaabe ),nil ;
};return 0,_ede .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_baaeb =_edcce .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_ede .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_cc .PdfIndirectObject ;SV *_cc .PdfIndirectObject ;};func (_aagb *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _aagb ._cagc };

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_ggece *PdfReader )GetPageLabels ()(_cc .PdfObject ,error ){_dfeea :=_cc .ResolveReference (_ggece ._gfed .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _dfeea ==nil {return nil ,nil ;};if !_ggece ._fcae {_eagee :=_ggece .traverseObjectData (_dfeea );
if _eagee !=nil {return nil ,_eagee ;};};return _dfeea ,nil ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_cceff *PdfOutlineTreeNode )GetContainingPdfObject ()_cc .PdfObject {return _cceff .GetContext ().GetContainingPdfObject ();};

// ToPdfObject returns the PDF representation of the page resources.
func (_bcgdg *PdfPageResources )ToPdfObject ()_cc .PdfObject {_cddbg :=_bcgdg ._bggcc ;_cddbg .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_bcgdg .ExtGState );if _bcgdg ._cffda !=nil {_bcgdg .ColorSpace =_bcgdg ._cffda .ToPdfObject ();};
_cddbg .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_bcgdg .ColorSpace );_cddbg .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_bcgdg .Pattern );_cddbg .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_bcgdg .Shading );
_cddbg .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_bcgdg .XObject );_cddbg .SetIfNotNil ("\u0046\u006f\u006e\u0074",_bcgdg .Font );_cddbg .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_bcgdg .ProcSet );_cddbg .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_bcgdg .Properties );
return _cddbg ;};func _ccaf (_gdfb _cc .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_ffbeb :=NewPdfColorspaceSpecialIndexed ();if _dcfb ,_abca :=_gdfb .(*_cc .PdfIndirectObject );_abca {_ffbeb ._cbcb =_dcfb ;};_gdfb =_cc .TraceToDirectObject (_gdfb );
_fdad ,_aaaeb :=_gdfb .(*_cc .PdfObjectArray );if !_aaaeb {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fdad .Len ()!=4{return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_gdfb =_fdad .Get (0);_ffgb ,_aaaeb :=_gdfb .(*_cc .PdfObjectName );if !_aaaeb {return nil ,_c .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_ffgb !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_gdfb =_fdad .Get (1);_dcgfd ,_cgcb :=DetermineColorspaceNameFromPdfObject (_gdfb );if _cgcb !=nil {return nil ,_cgcb ;};if _dcgfd =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_dcgfd =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_df .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_dcgfd );
return nil ,_aaeg ;};_beea ,_cgcb :=NewPdfColorspaceFromPdfObject (_gdfb );if _cgcb !=nil {return nil ,_cgcb ;};_ffbeb .Base =_beea ;_gdfb =_fdad .Get (2);_badf ,_cgcb :=_cc .GetNumberAsInt64 (_gdfb );if _cgcb !=nil {return nil ,_cgcb ;};if _badf > 255{return nil ,_c .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_ffbeb .HiVal =int (_badf );_gdfb =_fdad .Get (3);_ffbeb .Lookup =_gdfb ;_gdfb =_cc .TraceToDirectObject (_gdfb );var _adfdg []byte ;if _ddec ,_gdgd :=_gdfb .(*_cc .PdfObjectString );_gdgd {_adfdg =_ddec .Bytes ();_df .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_adfdg );
}else if _cbbd ,_gabe :=_gdfb .(*_cc .PdfObjectStream );_gabe {_df .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_gdfb .String ());_df .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_cbbd .Stream ),_cbbd .Stream );
_afga ,_gcebc :=_cc .DecodeStream (_cbbd );if _gcebc !=nil {return nil ,_gcebc ;};_df .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_afga ),_afga );_adfdg =_afga ;}else {_df .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_gdfb );
return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_adfdg )< _ffbeb .Base .GetNumComponents ()*(_ffbeb .HiVal +1){_df .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_df .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_adfdg ),_ffbeb .Base .GetNumComponents (),_ffbeb .HiVal );
}else {_adfdg =_adfdg [:_ffbeb .Base .GetNumComponents ()*(_ffbeb .HiVal +1)];};_ffbeb ._dacb =_adfdg ;return _ffbeb ,nil ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_cbdbfb *XObjectForm )GetContainingPdfObject ()_cc .PdfObject {return _cbdbfb ._accabd };

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_cbeda *PdfFieldSignature )ToPdfObject ()_cc .PdfObject {if _cbeda .PdfAnnotationWidget !=nil {_cbeda .PdfAnnotationWidget .ToPdfObject ();};_cbeda .PdfField .ToPdfObject ();_cfffg :=_cbeda ._geafg ;_gebee :=_cfffg .PdfObject .(*_cc .PdfObjectDictionary );
_gebee .SetIfNotNil ("\u0046\u0054",_cc .MakeName ("\u0053\u0069\u0067"));_gebee .SetIfNotNil ("\u004c\u006f\u0063\u006b",_cbeda .Lock );_gebee .SetIfNotNil ("\u0053\u0056",_cbeda .SV );if _cbeda .V !=nil {_gebee .SetIfNotNil ("\u0056",_cbeda .V .ToPdfObject ());
};return _cfffg ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_cfea []byte ;_ffaae []uint32 ;_aaba *_cc .PdfObjectStream ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_eefcc *PdfField )GetContext ()PdfModel {return _eefcc ._egbe };const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);func (_gbcga *Image )getSuitableEncoder ()(_cc .StreamEncoder ,error ){var (_abege ,_dfgcb =int (_gbcga .Width ),int (_gbcga .Height );
_bgad =make (map[string ]bool );_edbc =true ;_bcefg =false ;_egcdf =func ()*_cc .DCTEncoder {return _cc .NewDCTEncoder ()};_fgcb =func ()*_cc .DCTEncoder {_eafga :=_cc .NewDCTEncoder ();_eafga .BitsPerComponent =16;return _eafga };);for _ddgb :=0;_ddgb < _dfgcb ;
_ddgb ++{for _caaa :=0;_caaa < _abege ;_caaa ++{_ecbce ,_affag :=_gbcga .ColorAt (_caaa ,_ddgb );if _affag !=nil {return nil ,_affag ;};_eabf ,_gagd ,_fecdd ,_cdad :=_ecbce .RGBA ();if _edbc &&(_eabf !=_gagd ||_eabf !=_fecdd ||_gagd !=_fecdd ){_edbc =false ;
};if !_bcefg {switch _ecbce .(type ){case _d .NRGBA :_bcefg =_cdad > 0;};};_bgad [_c .Sprintf ("\u0025\u0064\u002c\u0025\u0064\u002c\u0025\u0064",_eabf ,_gagd ,_fecdd )]=true ;if len (_bgad )> 2&&_bcefg {return _fgcb (),nil ;};};};if _bcefg ||len (_gbcga ._ccee )> 0{return _cc .NewFlateEncoder (),nil ;
};if len (_bgad )<=2{_bfbf :=_gbcga .ConvertToBinary ();if _bfbf !=nil {return nil ,_bfbf ;};return _cc .NewJBIG2Encoder (),nil ;};if _edbc {return _egcdf (),nil ;};if _gbcga .ColorComponents ==1{if _gbcga .BitsPerComponent ==1{return _cc .NewJBIG2Encoder (),nil ;
}else if _gbcga .BitsPerComponent ==8{_aacbf :=_cc .NewDCTEncoder ();_aacbf .ColorComponents =1;return _aacbf ,nil ;};}else if _gbcga .ColorComponents ==3{if _gbcga .BitsPerComponent ==8{return _egcdf (),nil ;}else if _gbcga .BitsPerComponent ==16{return _fgcb (),nil ;
};}else if _gbcga .ColorComponents ==4{_ffdec :=_fgcb ();_ffdec .ColorComponents =4;return _ffdec ,nil ;};return _fgcb (),nil ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_bcdce *PdfPageResources )SetColorspaceByName (keyName _cc .PdfObjectName ,cs PdfColorspace )error {_affcd ,_eagd :=_bcdce .GetColorspaces ();if _eagd !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_eagd );
return _eagd ;};if _affcd ==nil {_affcd =NewPdfPageResourcesColorspaces ();_bcdce .SetColorSpace (_affcd );};_affcd .Set (keyName ,cs );return nil ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;func (_dfbaae *PdfReader )buildOutlineTree (_gbfgg _cc .PdfObject ,_fdbed *PdfOutlineTreeNode ,_feaacd *PdfOutlineTreeNode ,_beabec map[_cc .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _beabec ==nil {_beabec =map[_cc .PdfObject ]struct{}{};
};_beabec [_gbfgg ]=struct{}{};_afbd ,_gdgad :=_gbfgg .(*_cc .PdfIndirectObject );if !_gdgad {return nil ,nil ,_c .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_gbfgg );
};_fabg ,_fegd :=_afbd .PdfObject .(*_cc .PdfObjectDictionary );if !_fegd {return nil ,nil ,_ede .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_df .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_fabg ,_afbd ,_afbd );
if _aacaa :=_fabg .Get ("\u0054\u0069\u0074l\u0065");_aacaa !=nil {_caaeg ,_dccad :=_dfbaae .newPdfOutlineItemFromIndirectObject (_afbd );if _dccad !=nil {return nil ,nil ,_dccad ;};_caaeg .Parent =_fdbed ;_caaeg .Prev =_feaacd ;_fgdfe :=_cc .ResolveReference (_fabg .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_dgdad :=_beabec [_fgdfe ];_fgdfe !=nil &&_fgdfe !=_afbd &&!_dgdad {if !_cc .IsNullObject (_fgdfe ){_fgddf ,_dfacb ,_ccecg :=_dfbaae .buildOutlineTree (_fgdfe ,&_caaeg .PdfOutlineTreeNode ,nil ,_beabec );if _ccecg !=nil {_df .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_ccecg );
}else {_caaeg .First =_fgddf ;_caaeg .Last =_dfacb ;};};};_eeacb :=_cc .ResolveReference (_fabg .Get ("\u004e\u0065\u0078\u0074"));if _ ,_ceedc :=_beabec [_eeacb ];_eeacb !=nil &&_eeacb !=_afbd &&!_ceedc {if !_cc .IsNullObject (_eeacb ){_eebaag ,_gbfae ,_eeedb :=_dfbaae .buildOutlineTree (_eeacb ,_fdbed ,&_caaeg .PdfOutlineTreeNode ,_beabec );
if _eeedb !=nil {_df .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_eeedb );
}else {_caaeg .Next =_eebaag ;return &_caaeg .PdfOutlineTreeNode ,_gbfae ,nil ;};};};return &_caaeg .PdfOutlineTreeNode ,&_caaeg .PdfOutlineTreeNode ,nil ;};_fdbgg ,_fgccg :=_egcfa (_afbd );if _fgccg !=nil {return nil ,nil ,_fgccg ;};_fdbgg .Parent =_fdbed ;
if _edbdc :=_fabg .Get ("\u0046\u0069\u0072s\u0074");_edbdc !=nil {_edbdc =_cc .ResolveReference (_edbdc );if _ ,_fafc :=_beabec [_edbdc ];_edbdc !=nil &&_edbdc !=_afbd &&!_fafc {_ffgfa :=_cc .TraceToDirectObject (_edbdc );if _ ,_ffged :=_ffgfa .(*_cc .PdfObjectNull );
!_ffged &&_ffgfa !=nil {_fdbga ,_dagcc ,_bagb :=_dfbaae .buildOutlineTree (_edbdc ,&_fdbgg .PdfOutlineTreeNode ,nil ,_beabec );if _bagb !=nil {_df .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_bagb );
}else {_fdbgg .First =_fdbga ;_fdbgg .Last =_dagcc ;};};};};return &_fdbgg .PdfOutlineTreeNode ,&_fdbgg .PdfOutlineTreeNode ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gaff *PdfAnnotationStamp )ToPdfObject ()_cc .PdfObject {_gaff .PdfAnnotation .ToPdfObject ();_adgg :=_gaff ._cef ;_agfa :=_adgg .PdfObject .(*_cc .PdfObjectDictionary );_gaff .PdfAnnotationMarkup .appendToPdfDictionary (_agfa );_agfa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0053\u0074\u0061m\u0070"));
_agfa .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gaff .Name );return _adgg ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_gbegeg *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_cbfba :=RC4_128bit ;if options !=nil {_cbfba =options .Algorithm ;};_cbfbaa :=_bd .PermOwner ;if options !=nil {_cbfbaa =options .Permissions ;};var _ggbeg _ba .Filter ;
switch _cbfba {case RC4_128bit :_ggbeg =_ba .NewFilterV2 (16);case AES_128bit :_ggbeg =_ba .NewFilterAESV2 ();case AES_256bit :_ggbeg =_ba .NewFilterAESV3 ();default:return _c .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_aggbc ,_fbeeb ,_dbgbea :=_cc .PdfCryptNewEncrypt (_ggbeg ,userPass ,ownerPass ,_cbfbaa );if _dbgbea !=nil {return _dbgbea ;};_gbegeg ._acebb =_aggbc ;if _fbeeb .Major !=0{_gbegeg .SetVersion (_fbeeb .Major ,_fbeeb .Minor );};_gbegeg ._eecdc =_fbeeb .Encrypt ;
_gbegeg ._degcb ,_gbegeg ._aebda =_fbeeb .ID0 ,_fbeeb .ID1 ;_dgcfd :=_cc .MakeIndirectObject (_fbeeb .Encrypt );_gbegeg ._acged =_dgcfd ;_gbegeg .addObject (_dgcfd );return nil ;};

// GetStructRoot gets the StructTreeRoot object
func (_eacb *PdfPage )GetStructTreeRoot ()(*_cc .PdfObject ,bool ){_gegaf ,_dgeaf :=_eacb ._caebc .GetCatalogStructTreeRoot ();return &_gegaf ,_dgeaf ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_gfdaf *PdfPageResources )HasFontByName (keyName _cc .PdfObjectName )bool {_ ,_gbaef :=_gfdaf .GetFontByName (keyName );return _gbaef ;};func _fada (_aedgg _cc .PdfObject )(*PdfBorderStyle ,error ){_fddb :=&PdfBorderStyle {};_fddb ._dabf =_aedgg ;
var _bbda *_cc .PdfObjectDictionary ;_aedgg =_cc .TraceToDirectObject (_aedgg );_bbda ,_cada :=_aedgg .(*_cc .PdfObjectDictionary );if !_cada {return nil ,_ede .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _gabf :=_bbda .Get ("\u0054\u0079\u0070\u0065");
_gabf !=nil {_cbde ,_bbcgc :=_gabf .(*_cc .PdfObjectName );if !_bbcgc {_df .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_gabf );
}else {if *_cbde !="\u0042\u006f\u0072\u0064\u0065\u0072"{_df .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_cbde );};};};if _ecaa :=_bbda .Get ("\u0057");
_ecaa !=nil {_gcdc ,_ccgf :=_cc .GetNumberAsFloat (_ecaa );if _ccgf !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_ccgf );return nil ,_ccgf ;};_fddb .W =&_gcdc ;
};if _befaf :=_bbda .Get ("\u0053");_befaf !=nil {_eccbe ,_fbbg :=_befaf .(*_cc .PdfObjectName );if !_fbbg {return nil ,_ede .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _decd BorderStyle ;switch *_eccbe {case "\u0053":_decd =BorderStyleSolid ;case "\u0044":_decd =BorderStyleDashed ;case "\u0042":_decd =BorderStyleBeveled ;case "\u0049":_decd =BorderStyleInset ;case "\u0055":_decd =BorderStyleUnderline ;default:_df .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_eccbe );
return nil ,_ede .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_fddb .S =&_decd ;};if _bcff :=_bbda .Get ("\u0044");_bcff !=nil {_bgc ,_ecbd :=_bcff .(*_cc .PdfObjectArray );
if !_ecbd {_df .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_bcff );return nil ,_ede .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_ggbb ,_cdce :=_bgc .ToIntegerArray ();if _cdce !=nil {_df .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_cdce );
return nil ,_cdce ;};_fddb .D =&_ggbb ;};return _fddb ,nil ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_efda :=NewPdfAnnotation ();_eccf :=&PdfAnnotationStamp {};_eccf .PdfAnnotation =_efda ;_eccf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_efda .SetContext (_eccf );return _eccf ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_acada DefaultImageHandler )NewImageFromGoImage (goimg _ee .Image )(*Image ,error ){_bgbea ,_ggaee :=_ec .FromGoImage (goimg );if _ggaee !=nil {return nil ,_ggaee ;};_cgeda :=_bagc (_bgbea .Base ());return &_cgeda ,nil ;};

// GetContainingPdfObject implements model.PdfModel interface.
func (_deegd *PdfOutputIntent )GetContainingPdfObject ()_cc .PdfObject {return _deegd ._gffgd };

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_decae *PdfColorspaceLab )DecodeArray ()[]float64 {_effd :=[]float64 {0,100};if _decae .Range !=nil &&len (_decae .Range )==4{_effd =append (_effd ,_decae .Range ...);}else {_effd =append (_effd ,-100,100,-100,100);};return _effd ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_bbffe *PdfPattern )ToPdfObject ()_cc .PdfObject {_accga :=_bbffe .getDict ();_accga .Set ("\u0054\u0079\u0070\u0065",_cc .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_accga .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_cc .MakeInteger (_bbffe .PatternType ));
return _bbffe ._ecegf ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_cc .PdfObjectArray ;Matrix *_cc .PdfObjectArray ;Function []PdfFunction ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_dgcbe *PdfPage )SetContentStreams (cStreams []string ,encoder _cc .StreamEncoder )error {if len (cStreams )==0{_dgcbe .Contents =nil ;return nil ;};if encoder ==nil {encoder =_cc .NewRawEncoder ();};var _babb []*_cc .PdfObjectStream ;for _ ,_gebea :=range cStreams {_fcfb :=&_cc .PdfObjectStream {};
_fcfda :=encoder .MakeStreamDict ();_gebaa ,_aecfd :=encoder .EncodeBytes ([]byte (_gebea ));if _aecfd !=nil {return _aecfd ;};_fcfda .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cc .MakeInteger (int64 (len (_gebaa ))));_fcfb .PdfObjectDictionary =_fcfda ;
_fcfb .Stream =_gebaa ;_babb =append (_babb ,_fcfb );};if len (_babb )==1{_dgcbe .Contents =_babb [0];}else {_bdecb :=_cc .MakeArray ();for _ ,_fagda :=range _babb {_bdecb .Append (_fagda );};_dgcbe .Contents =_bdecb ;};return nil ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//
//	f(x) = y_0, ..., y_(n-1)
//
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_ebdbg *_cc .PdfIndirectObject ;};type modelManager struct{_ffbae map[PdfModel ]_cc .PdfObject ;_cffdf map[_cc .PdfObject ]PdfModel ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_cffa *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _cffa .AlternateSpace ==nil {return nil ,_ede .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _cffa .AlternateSpace .ColorToRGB (color );};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_eedee *PdfPageResources )GetPatternByName (keyName _cc .PdfObjectName )(*PdfPattern ,bool ){if _eedee .Pattern ==nil {return nil ,false ;};_fegdg ,_gfbbc :=_cc .TraceToDirectObject (_eedee .Pattern ).(*_cc .PdfObjectDictionary );if !_gfbbc {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eedee .Pattern );
return nil ,false ;};if _efbfb :=_fegdg .Get (keyName );_efbfb !=nil {_cdge ,_feefaf :=_aaacc (_efbfb );if _feefaf !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_feefaf );
return nil ,false ;};return _cdge ,true ;};return nil ,false ;};func (_gcdb *LTV )getCRLs (_beeac []*_ffd .Certificate )([][]byte ,error ){_cebc :=make ([][]byte ,0,len (_beeac ));for _ ,_cgbgd :=range _beeac {for _ ,_fafdg :=range _cgbgd .CRLDistributionPoints {if _gcdb .CertClient .IsCA (_cgbgd ){continue ;
};_dbbed ,_cegd :=_gcdb .CRLClient .MakeRequest (_fafdg ,_cgbgd );if _cegd !=nil {_df .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_cegd );continue ;
};_cebc =append (_cebc ,_dbbed );};};return _cebc ,nil ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_dgafdf *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _dgafdf ._dagff !=nil {return _dgafdf ._dagff ,nil ;};if _dgafdf .Annots ==nil {_dgafdf ._dagff =[]*PdfAnnotation {};return nil ,nil ;};if _dgafdf ._caebc ==nil {_dgafdf ._dagff =[]*PdfAnnotation {};
return nil ,nil ;};_bgfca ,_bcace :=_dgafdf ._caebc .loadAnnotations (_dgafdf .Annots );if _bcace !=nil {return nil ,_bcace ;};if _bgfca ==nil {_dgafdf ._dagff =[]*PdfAnnotation {};};_dgafdf ._dagff =_bgfca ;return _dgafdf ._dagff ,nil ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_egffb *PdfPageResources )SetFontByName (keyName _cc .PdfObjectName ,obj _cc .PdfObject )error {if _egffb .Font ==nil {_egffb .Font =_cc .MakeDict ();};_fddbc ,_dfged :=_cc .TraceToDirectObject (_egffb .Font ).(*_cc .PdfObjectDictionary );if !_dfged {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_cc .TraceToDirectObject (_egffb .Font ));
return _cc .ErrTypeError ;};_fddbc .Set (keyName ,obj );return nil ;};

// AddOutlineTree adds outlines to a PDF file.
func (_gbbde *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_gbbde ._afeb =outlineTree };

// GetFillImage get attached model.Image in push button.
func (_fceca *PdfFieldButton )GetFillImage ()*Image {if _fceca .IsPush (){return _fceca ._fbcgb ;};return nil ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
//   - Adding certificates, OCSP and CRL information in the global scope of the
//     DSS. The global data is used for validating any of the signatures present
//     in the document.
//   - Adding certificates, OCSP and CRL information for a single signature,
//     through an entry in the VRI dictionary of the DSS. The added data is used
//     for validating that particular signature only. This is the recommended
//     method for adding validation data for a signature. However, this is not
//     is not possible in the same revision the signature is applied. Validation
//     data for a signature is added based on the Contents entry of the signature,
//     which is known only after the revision is written. Even if the Contents
//     are known (e.g. when signing externally), updating the DSS at that point
//     would invalidate the calculated signature. As a result, if adding LTV
//     in the same revision is a requirement, use the first method.
//     See LTV.EnableChain.
//
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_dcf .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_dcf .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_dcf .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_cbgcf *PdfAppender ;_ffedd *DSS ;};func _gacdg (_dffd _cc .PdfObject )(*PdfColorspaceDeviceN ,error ){_dcdga :=NewPdfColorspaceDeviceN ();if _ccca ,_ebebc :=_dffd .(*_cc .PdfIndirectObject );_ebebc {_dcdga ._bagf =_ccca ;};_dffd =_cc .TraceToDirectObject (_dffd );
_adbadb ,_ccbb :=_dffd .(*_cc .PdfObjectArray );if !_ccbb {return nil ,_c .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _adbadb .Len ()!=4&&_adbadb .Len ()!=5{return nil ,_c .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_dffd =_adbadb .Get (0);_cgecf ,_ccbb :=_dffd .(*_cc .PdfObjectName );if !_ccbb {return nil ,_c .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_cgecf !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_c .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_dffd =_adbadb .Get (1);
_dffd =_cc .TraceToDirectObject (_dffd );_cega ,_ccbb :=_dffd .(*_cc .PdfObjectArray );if !_ccbb {return nil ,_c .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_dcdga .ColorantNames =_cega ;_dffd =_adbadb .Get (2);_bdbd ,_cdbdd :=NewPdfColorspaceFromPdfObject (_dffd );if _cdbdd !=nil {return nil ,_cdbdd ;};_dcdga .AlternateSpace =_bdbd ;_efece ,_cdbdd :=_adade (_adbadb .Get (3));if _cdbdd !=nil {return nil ,_cdbdd ;
};_dcdga .TintTransform =_efece ;if _adbadb .Len ()==5{_ccgd ,_ffbab :=_gagc (_adbadb .Get (4));if _ffbab !=nil {return nil ,_ffbab ;};_dcdga .Attributes =_ccgd ;};return _dcdga ,nil ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_ccee []byte ;_aaaacg []float64 ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_ecgdd *pdfFontSimple )SetEncoder (encoder _cbf .TextEncoder ){_ecgdd ._fbed =encoder };

// String returns the name of the colorspace (DeviceN).
func (_dccaa *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// Encoder returns the font's text encoder.
func (_dfda *PdfFont )Encoder ()_cbf .TextEncoder {_degc :=_dfda .actualFont ();if _degc ==nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_dfda ._ggec );
return nil ;};return _degc .Encoder ();};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_cc .PdfObjectArray ;TI *_cc .PdfObjectInteger ;I *_cc .PdfObjectArray ;};

// GetContainingPdfObject implements interface PdfModel.
func (_caed *PdfSignature )GetContainingPdfObject ()_cc .PdfObject {return _caed ._faecf };

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _cd .ReadSeeker )(*PdfReader ,error ){const _gcddf ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _dcbcbe (rs ,&ReaderOpts {LazyLoad :true },false ,_gcddf );
};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_gcddg *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_cc .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ede .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bdba ,_fbcg :=_cc .GetNumbersAsFloat (objects );
if _fbcg !=nil {return nil ,_fbcg ;};return _gcddg .ColorFromFloats (_bdba );};

// ToPdfObject implements interface PdfModel.
func (_cgeb *PdfAnnotationCircle )ToPdfObject ()_cc .PdfObject {_cgeb .PdfAnnotation .ToPdfObject ();_gae :=_cgeb ._cef ;_ggfdf :=_gae .PdfObject .(*_cc .PdfObjectDictionary );_cgeb .PdfAnnotationMarkup .appendToPdfDictionary (_ggfdf );_ggfdf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_ggfdf .SetIfNotNil ("\u0042\u0053",_cgeb .BS );_ggfdf .SetIfNotNil ("\u0049\u0043",_cgeb .IC );_ggfdf .SetIfNotNil ("\u0042\u0045",_cgeb .BE );_ggfdf .SetIfNotNil ("\u0052\u0044",_cgeb .RD );return _gae ;};func _dagf (_bfdf *PdfField ,_caeff _cc .PdfObject ){for _ ,_afcf :=range _bfdf .Annotations {_afcf .AS =_caeff ;
_afcf .ToPdfObject ();};};

// ToPdfObject returns a PDF object representation of the outline.
func (_dadge *Outline )ToPdfObject ()_cc .PdfObject {return _dadge .ToPdfOutline ().ToPdfObject ()};

// GetTrailer returns the PDF's trailer dictionary.
func (_cdbae *PdfReader )GetTrailer ()(*_cc .PdfObjectDictionary ,error ){_ffbfc :=_cdbae ._bbed .GetTrailer ();if _ffbfc ==nil {return nil ,_ede .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _ffbfc ,nil ;
};func _ebcb (_ffdcd _cc .PdfObject ,_agag *PdfReader )(*OutlineDest ,error ){_eeaef ,_bbdgf :=_cc .GetArray (_ffdcd );if !_bbdgf {return nil ,_ede .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_ebcae :=_eeaef .Len ();if _ebcae < 2{return nil ,_c .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_ebcae );
};_ababf :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_accg :=_eeaef .Get (0);if _cgcdc ,_fbgc :=_cc .GetIndirect (_accg );_fbgc {if _ ,_dgbgd ,_abae :=_agag .PageFromIndirectObject (_cgcdc );_abae ==nil {_ababf .Page =int64 (_dgbgd -1);}else {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_cgcdc );
};_ababf .PageObj =_cgcdc ;}else if _fgddd ,_febb :=_cc .GetIntVal (_accg );_febb {if _fgddd >=0&&_fgddd < len (_agag .PageList ){_ababf .PageObj =_agag .PageList [_fgddd ].GetPageAsIndirectObject ();}else {_df .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_fgddd );
};_ababf .Page =int64 (_fgddd );}else {return nil ,_c .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_accg );};_cgfb ,_bbdgf :=_cc .GetNameVal (_eeaef .Get (1));
if !_bbdgf {_df .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_eeaef .Get (1));
return _ababf ,nil ;};switch _cgfb {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _ebcae > 2{_ababf .Y ,_ =_cc .GetNumberAsFloat (_cc .TraceToDirectObject (_eeaef .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _ebcae > 2{_ababf .X ,_ =_cc .GetNumberAsFloat (_cc .TraceToDirectObject (_eeaef .Get (2)));
};case "\u0058\u0059\u005a":if _ebcae > 4{_ababf .X ,_ =_cc .GetNumberAsFloat (_cc .TraceToDirectObject (_eeaef .Get (2)));_ababf .Y ,_ =_cc .GetNumberAsFloat (_cc .TraceToDirectObject (_eeaef .Get (3)));_ababf .Zoom ,_ =_cc .GetNumberAsFloat (_cc .TraceToDirectObject (_eeaef .Get (4)));
};default:_cgfb ="\u0046\u0069\u0074";};_ababf .Mode =_cgfb ;return _ababf ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bgdc *PdfPageResourcesColorspaces )ToPdfObject ()_cc .PdfObject {_cgffg :=_cc .MakeDict ();for _ ,_fagdg :=range _bgdc .Names {_cgffg .Set (_cc .PdfObjectName (_fagdg ),_bgdc .Colorspaces [_fagdg ].ToPdfObject ());};if _bgdc ._egfac !=nil {_bgdc ._egfac .PdfObject =_cgffg ;
return _bgdc ._egfac ;};return _cgffg ;};

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_acgab PdfOutputIntentType )String ()string {switch _acgab {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cc .PdfObject ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_bcebb *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _bcebb .Range };

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_cae :=NewPdfAnnotation ();_aeda :=&PdfAnnotationCaret {};_aeda .PdfAnnotation =_cae ;_aeda .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cae .SetContext (_aeda );return _aeda ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_efab *PdfShadingPatternType3 )ToPdfObject ()_cc .PdfObject {_efab .PdfPattern .ToPdfObject ();_dedfc :=_efab .getDict ();if _efab .Shading !=nil {_dedfc .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_efab .Shading .ToPdfObject ());};if _efab .Matrix !=nil {_dedfc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_efab .Matrix );
};if _efab .ExtGState !=nil {_dedfc .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_efab .ExtGState );};return _efab ._ecegf ;};

// ToPdfObject converts the font to a PDF representation.
func (_gged *pdfFontType3 )ToPdfObject ()_cc .PdfObject {if _gged ._gbdg ==nil {_gged ._gbdg =&_cc .PdfIndirectObject {};};_bfgd :=_gged .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_gged ._gbdg .PdfObject =_bfgd ;if _gged .FirstChar !=nil {_bfgd .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_gged .FirstChar );
};if _gged .LastChar !=nil {_bfgd .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_gged .LastChar );};if _gged .Widths !=nil {_bfgd .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_gged .Widths );};if _gged .Encoding !=nil {_bfgd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gged .Encoding );
}else if _gged ._debcd !=nil {_gdfgg :=_gged ._debcd .ToPdfObject ();if _gdfgg !=nil {_bfgd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gdfgg );};};if _gged .FontBBox !=nil {_bfgd .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_gged .FontBBox );
};if _gged .FontMatrix !=nil {_bfgd .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_gged .FontMatrix );};if _gged .CharProcs !=nil {_bfgd .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_gged .CharProcs );};if _gged .Resources !=nil {_bfgd .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gged .Resources );
};return _gged ._gbdg ;};func (_gbef *PdfWriter )setCatalogVersion (){_gbef ._feff .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_cc .MakeName (_c .Sprintf ("\u0025\u0064\u002e%\u0064",_gbef ._gfgfa .Major ,_gbef ._gfgfa .Minor )));};func (_fgfa *PdfReader )newPdfAnnotationInkFromDict (_aaaa *_cc .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_caeg :=PdfAnnotationInk {};
_ebe ,_dcga :=_fgfa .newPdfAnnotationMarkupFromDict (_aaaa );if _dcga !=nil {return nil ,_dcga ;};_caeg .PdfAnnotationMarkup =_ebe ;_caeg .InkList =_aaaa .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_caeg .BS =_aaaa .Get ("\u0042\u0053");return &_caeg ,nil ;
};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_efcbc *PdfShadingType6 )ToPdfObject ()_cc .PdfObject {_efcbc .PdfShading .ToPdfObject ();_cecca ,_dfde :=_efcbc .getShadingDict ();if _dfde !=nil {_df .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _efcbc .BitsPerCoordinate !=nil {_cecca .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_efcbc .BitsPerCoordinate );};if _efcbc .BitsPerComponent !=nil {_cecca .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_efcbc .BitsPerComponent );
};if _efcbc .BitsPerFlag !=nil {_cecca .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_efcbc .BitsPerFlag );};if _efcbc .Decode !=nil {_cecca .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_efcbc .Decode );};if _efcbc .Function !=nil {if len (_efcbc .Function )==1{_cecca .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_efcbc .Function [0].ToPdfObject ());
}else {_ebacc :=_cc .MakeArray ();for _ ,_egdgf :=range _efcbc .Function {_ebacc .Append (_egdgf .ToPdfObject ());};_cecca .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ebacc );};};return _efcbc ._ccfe ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
//   - For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//     for Type 1 Fonts".
//   - For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//     "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//     conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//     encoding and use the glyph indices as character codes, as described following Table 118.
func (_ccec *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_eaegg ,_ ,_ffab :=_ccec .CharcodesToUnicodeWithStats (_ccec .BytesToCharcodes (data ));_fagd :=_cbf .ExpandLigatures (_eaegg );return _fagd ,_eaf .RuneCountInString (_fagd ),_ffab ;
};

// GetNumComponents returns the number of color components (3 for RGB).
func (_facac *PdfColorDeviceRGB )GetNumComponents ()int {return 3};func (_faef *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _faef ._cagc ==nil &&_faef .DescendantFont !=nil {return _faef .DescendantFont .FontDescriptor ();};return _faef ._cagc ;
};

// Register registers (caches) a model to primitive object relationship.
func (_bbeag *modelManager )Register (primitive _cc .PdfObject ,model PdfModel ){_bbeag ._ffbae [model ]=primitive ;_bbeag ._cffdf [primitive ]=model ;};func (_egea *PdfWriter )optimizeDocument ()error {if _egea ._gdebc ==nil {return nil ;};_cdacg ,_cdffee :=_cc .GetDict (_egea ._egdc );
if !_cdffee {return _ede .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_fbggb :=_dc .Document {ID :[2]string {_egea ._degcb ,_egea ._aebda },Version :_egea ._gfgfa ,Objects :_egea ._gedfdc ,Info :_cdacg ,Crypt :_egea ._acebb ,UseHashBasedID :_egea ._bafa };
if _gadgg :=_egea ._gdebc .ApplyStandard (&_fbggb );_gadgg !=nil {return _gadgg ;};_egea ._degcb ,_egea ._aebda =_fbggb .ID [0],_fbggb .ID [1];_egea ._gfgfa =_fbggb .Version ;_egea ._gedfdc =_fbggb .Objects ;_egea ._egdc .PdfObject =_fbggb .Info ;_egea ._bafa =_fbggb .UseHashBasedID ;
_egea ._acebb =_fbggb .Crypt ;_gbcad :=make (map[_cc .PdfObject ]struct{},len (_egea ._gedfdc ));for _ ,_agec :=range _egea ._gedfdc {_gbcad [_agec ]=struct{}{};};_egea ._abbbc =_gbcad ;return nil ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _cc .PdfObject ;AN _cc .PdfObject ;OP _cc .PdfObject ;JS _cc .PdfObject ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);
FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);
FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<26);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);
FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<27););

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_ggda :=&PdfAnnotation {};_ggda ._cef =_cc .MakeIndirectObject (_cc .MakeDict ());return _ggda ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_gbaabg *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _cdccc []*PdfField ;_eadffd :=map[*_cc .PdfIndirectObject ]struct{}{};for _ ,_edacb :=range _gbaabg .PageList {_dabgf ,_cacbd :=_edacb .GetAnnotations ();if _cacbd !=nil {return _cacbd ;
};for _ ,_baefb :=range _dabgf {var _faded *PdfField ;switch _aeee :=_baefb .GetContext ().(type ){case *PdfAnnotationWidget :if _aeee ._gda !=nil {_faded =_aeee ._gda ;break ;};if _geebac ,_dadf :=_cc .GetIndirect (_aeee .Parent );_dadf {_faded ,_cacbd =_gbaabg .newPdfFieldFromIndirectObject (_geebac ,nil );
if _cacbd ==nil {break ;};_df .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_geebac ,_cacbd );
};if _aeee ._cef !=nil {_faded ,_cacbd =_gbaabg .newPdfFieldFromIndirectObject (_aeee ._cef ,nil );if _cacbd ==nil {break ;};_df .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_aeee ._cef ,_cacbd );
};};if _faded ==nil {continue ;};if _ ,_bbfbc :=_eadffd [_faded ._geafg ];_bbfbc {continue ;};_eadffd [_faded ._geafg ]=struct{}{};_cdccc =append (_cdccc ,_faded );};};if len (_cdccc )==0{return nil ;};if _gbaabg .AcroForm ==nil {_gbaabg .AcroForm =NewPdfAcroForm ();
};_gbaabg .AcroForm .Fields =&_cdccc ;return nil ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_gfff *_cc .PdfIndirectObject ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// Encoder returns the font's text encoder.
func (_fccbfg pdfFontType3 )Encoder ()_cbf .TextEncoder {return _fccbfg ._debcd };func (_gfcgc *Image )resampleLowBits (_fbbd []uint32 ){_bdaaa :=_ec .BytesPerLine (int (_gfcgc .Width ),int (_gfcgc .BitsPerComponent ),_gfcgc .ColorComponents );_abda :=make ([]byte ,_gfcgc .ColorComponents *_bdaaa *int (_gfcgc .Height ));
_bgdgc :=int (_gfcgc .BitsPerComponent )*_gfcgc .ColorComponents *int (_gfcgc .Width );_aedb :=uint8 (8);var (_eaad ,_egce int ;_bgedg uint32 ;);for _fbgag :=0;_fbgag < int (_gfcgc .Height );_fbgag ++{_egce =_fbgag *_bdaaa ;for _cgccb :=0;_cgccb < _bgdgc ;
_cgccb ++{_bgedg =_fbbd [_eaad ];_aedb -=uint8 (_gfcgc .BitsPerComponent );_abda [_egce ]|=byte (_bgedg )<<_aedb ;if _aedb ==0{_aedb =8;_egce ++;};_eaad ++;};};_gfcgc .Data =_abda ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_bgabbf *Outline )Insert (index uint ,item *OutlineItem ){_cfbbd :=uint (len (_bgabbf .Entries ));if index > _cfbbd {index =_cfbbd ;};_bgabbf .Entries =append (_bgabbf .Entries [:index ],append ([]*OutlineItem {item },_bgabbf .Entries [index :]...)...);
};

// Evaluate runs the function on the passed in slice and returns the results.
func (_fdafd *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_fdafd .NumInputs {_df .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_ede .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _fdafd ._ffaae ==nil {_cgca :=_fdafd .processSamples ();if _cgca !=nil {return nil ,_cgca ;};};_edcge :=_fdafd .Encode ;if _edcge ==nil {_edcge =[]float64 {};
for _fdeag :=0;_fdeag < len (_fdafd .Size );_fdeag ++{_edcge =append (_edcge ,0);_edcge =append (_edcge ,float64 (_fdafd .Size [_fdeag ]-1));};};_fdae :=_fdafd .Decode ;if _fdae ==nil {_fdae =_fdafd .Range ;};_cafgc :=make ([]int ,len (x ));for _dggce :=0;
_dggce < len (x );_dggce ++{_cabg :=x [_dggce ];_gcad :=_ed .Min (_ed .Max (_cabg ,_fdafd .Domain [2*_dggce ]),_fdafd .Domain [2*_dggce +1]);_agbag :=_ec .LinearInterpolate (_gcad ,_fdafd .Domain [2*_dggce ],_fdafd .Domain [2*_dggce +1],_edcge [2*_dggce ],_edcge [2*_dggce +1]);
_gdbdf :=_ed .Min (_ed .Max (_agbag ,0),float64 (_fdafd .Size [_dggce ]-1));_dedee :=int (_ed .Floor (_gdbdf +0.5));if _dedee < 0{_dedee =0;}else if _dedee > _fdafd .Size [_dggce ]{_dedee =_fdafd .Size [_dggce ]-1;};_cafgc [_dggce ]=_dedee ;};_bcbg :=_cafgc [0];
for _beac :=1;_beac < _fdafd .NumInputs ;_beac ++{_gcce :=_cafgc [_beac ];for _bffeb :=0;_bffeb < _beac ;_bffeb ++{_gcce *=_fdafd .Size [_bffeb ];};_bcbg +=_gcce ;};_bcbg *=_fdafd .NumOutputs ;var _faedb []float64 ;for _fcbac :=0;_fcbac < _fdafd .NumOutputs ;
_fcbac ++{_eceaeb :=_bcbg +_fcbac ;if _eceaeb >=len (_fdafd ._ffaae ){_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_cbce :=_fdafd ._ffaae [_eceaeb ];_dfaea :=_ec .LinearInterpolate (float64 (_cbce ),0,_ed .Pow (2,float64 (_fdafd .BitsPerSample )),_fdae [2*_fcbac ],_fdae [2*_fcbac +1]);_bfeab :=_ed .Min (_ed .Max (_dfaea ,_fdafd .Range [2*_fcbac ]),_fdafd .Range [2*_fcbac +1]);
_faedb =append (_faedb ,_bfeab );};return _faedb ,nil ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_bbege *LTV )EnableChain (chain []*_ffd .Certificate )error {return _bbege .enable (nil ,chain ,"")};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_egfac *_cc .PdfIndirectObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_ffae *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ede .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_feeef :=vals [0];if _feeef < 0.0||_feeef > 100.0{_df .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_feeef );
return nil ,ErrColorOutOfRange ;};_ggefg :=vals [1];_fcgea :=float64 (-100);_cfdc :=float64 (100);if len (_ffae .Range )> 1{_fcgea =_ffae .Range [0];_cfdc =_ffae .Range [1];};if _ggefg < _fcgea ||_ggefg > _cfdc {_df .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_ggefg ,_fcgea ,_cfdc );
return nil ,ErrColorOutOfRange ;};_cdde :=vals [2];_cbgd :=float64 (-100);_cged :=float64 (100);if len (_ffae .Range )> 3{_cbgd =_ffae .Range [2];_cged =_ffae .Range [3];};if _cdde < _cbgd ||_cdde > _cged {_df .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_cdde ,_cbgd ,_cged );
return nil ,ErrColorOutOfRange ;};_egef :=NewPdfColorLab (_feeef ,_ggefg ,_cdde );return _egef ,nil ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_cab :=NewPdfAnnotation ();_ggga :=&PdfAnnotationWidget {};_ggga .PdfAnnotation =_cab ;_cab .SetContext (_ggga );return _ggga ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_egge *Image )GetParamsDict ()*_cc .PdfObjectDictionary {_edgfeb :=_cc .MakeDict ();_edgfeb .Set ("\u0057\u0069\u0064t\u0068",_cc .MakeInteger (_egge .Width ));_edgfeb .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_cc .MakeInteger (_egge .Height ));
_edgfeb .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_cc .MakeInteger (int64 (_egge .ColorComponents )));_edgfeb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cc .MakeInteger (_egge .BitsPerComponent ));
return _edgfeb ;};

// EmbeddedFile represents an embedded file.
type EmbeddedFile struct{Name string ;Content []byte ;FileType string ;Description string ;Relationship FileRelationship ;Hash string ;CreationTime _b .Time ;ModTime _b .Time ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_faecf *_cc .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_cc .PdfObjectName ;Filter *_cc .PdfObjectName ;SubFilter *_cc .PdfObjectName ;Contents *_cc .PdfObjectString ;Cert _cc .PdfObject ;ByteRange *_cc .PdfObjectArray ;Reference *_cc .PdfObjectArray ;Changes *_cc .PdfObjectArray ;Name *_cc .PdfObjectString ;
M *_cc .PdfObjectString ;Location *_cc .PdfObjectString ;Reason *_cc .PdfObjectString ;ContactInfo *_cc .PdfObjectString ;R *_cc .PdfObjectInteger ;V *_cc .PdfObjectInteger ;PropBuild *_cc .PdfObjectDictionary ;PropAuthTime *_cc .PdfObjectInteger ;PropAuthType *_cc .PdfObjectName ;
};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_edadc :=&PdfColorspaceLab {};_edadc .BlackPoint =[]float64 {0.0,0.0,0.0};_edadc .Range =[]float64 {-100,100,-100,100};return _edadc ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_fedb *PdfColorCalRGB )GetNumComponents ()int {return 3};

// NewPdfShadingType3 creates an empty shading type 3 dictionary.
func NewPdfShadingType3 ()*PdfShadingType3 {_cbda :=&PdfShadingType3 {};_cbda .PdfShading =&PdfShading {};_cbda .PdfShading ._ccfe =_cc .MakeIndirectObject (_cc .MakeDict ());_cbda .PdfShading ._beacb =_cbda ;return _cbda ;};func (_dgb *PdfReader )newPdfAnnotationTrapNetFromDict (_cfbgb *_cc .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_eagbb :=PdfAnnotationTrapNet {};
return &_eagbb ,nil ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_dfef *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _dfef .RunesToCharcodeBytes ([]rune (str ));};

// AddCerts adds certificates to DSS.
func (_dgcdb *DSS )AddCerts (certs [][]byte )([]*_cc .PdfObjectStream ,error ){return _dgcdb .add (&_dgcdb .Certs ,_dgcdb ._cdee ,certs );};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_eeea *PdfOutlineItem )GetContainingPdfObject ()_cc .PdfObject {return _eeea ._bfdgf };

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_efec *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_efec .updateObjectsDeep (dss .ToPdfObject (),nil );};_efec ._gbfd =dss ;};func (_bdff *PdfReader )loadAction (_effc _cc .PdfObject )(*PdfAction ,error ){if _bdfb ,_cdd :=_cc .GetIndirect (_effc );
_cdd {_dgfd ,_gdae :=_bdff .newPdfActionFromIndirectObject (_bdfb );if _gdae !=nil {return nil ,_gdae ;};return _dgfd ,nil ;}else if !_cc .IsNullObject (_effc ){return nil ,_ede .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};func (_caefe *PdfReader )resolveReference (_bcadd *_cc .PdfObjectReference )(_cc .PdfObject ,bool ,error ){_bfcf ,_bcdfa :=_caefe ._bbed .ObjCache [int (_bcadd .ObjectNumber )];if !_bcdfa {_df .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_bcadd );
_ecbea ,_cgceb :=_caefe ._bbed .LookupByReference (*_bcadd );if _cgceb !=nil {return nil ,false ,_cgceb ;};_caefe ._bbed .ObjCache [int (_bcadd .ObjectNumber )]=_ecbea ;return _ecbea ,false ,nil ;};return _bfcf ,true ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_acce *PdfAnnotationMovie )ToPdfObject ()_cc .PdfObject {_acce .PdfAnnotation .ToPdfObject ();_debf :=_acce ._cef ;_cbb :=_debf .PdfObject .(*_cc .PdfObjectDictionary );_cbb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u004d\u006f\u0076i\u0065"));
_cbb .SetIfNotNil ("\u0054",_acce .T );_cbb .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_acce .Movie );_cbb .SetIfNotNil ("\u0041",_acce .A );return _debf ;};

// GetRevisionNumber returns the version of the current Pdf document
func (_cgccc *PdfReader )GetRevisionNumber ()int {return _cgccc ._bbed .GetRevisionNumber ()};func (_acee *LTV )enable (_eggba ,_cede []*_ffd .Certificate ,_dbga string )error {_ddfee ,_fdbdc ,_cdac :=_acee .buildCertChain (_eggba ,_cede );if _cdac !=nil {return _cdac ;
};_abcba ,_cdac :=_acee .getCerts (_ddfee );if _cdac !=nil {return _cdac ;};var _geeed ,_fddba [][]byte ;if _acee .OCSPClient !=nil {_geeed ,_cdac =_acee .getOCSPs (_ddfee ,_fdbdc );if _cdac !=nil {return _cdac ;};};if _acee .CRLClient !=nil {_fddba ,_cdac =_acee .getCRLs (_ddfee );
if _cdac !=nil {return _cdac ;};};_abgd :=_acee ._ffedd ;_cdgg ,_cdac :=_abgd .AddCerts (_abcba );if _cdac !=nil {return _cdac ;};_dffeb ,_cdac :=_abgd .AddOCSPs (_geeed );if _cdac !=nil {return _cdac ;};_cdcbe ,_cdac :=_abgd .AddCRLs (_fddba );if _cdac !=nil {return _cdac ;
};if _dbga !=""{_abgd .VRI [_dbga ]=&VRI {Cert :_cdgg ,OCSP :_dffeb ,CRL :_cdcbe };};_acee ._cbgcf .SetDSS (_abgd );return nil ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// Add appends a top level outline item to the outline.
func (_ebddg *Outline )Add (item *OutlineItem ){_ebddg .Entries =append (_ebddg .Entries ,item )};var (CourierName =_edg .CourierName ;CourierBoldName =_edg .CourierBoldName ;CourierObliqueName =_edg .CourierObliqueName ;CourierBoldObliqueName =_edg .CourierBoldObliqueName ;
HelveticaName =_edg .HelveticaName ;HelveticaBoldName =_edg .HelveticaBoldName ;HelveticaObliqueName =_edg .HelveticaObliqueName ;HelveticaBoldObliqueName =_edg .HelveticaBoldObliqueName ;SymbolName =_edg .SymbolName ;ZapfDingbatsName =_edg .ZapfDingbatsName ;
TimesRomanName =_edg .TimesRomanName ;TimesBoldName =_edg .TimesBoldName ;TimesItalicName =_edg .TimesItalicName ;TimesBoldItalicName =_edg .TimesBoldItalicName ;);func _fbbag (_afcgf *_cc .PdfObjectDictionary )(*PdfShadingType6 ,error ){_gbgb :=PdfShadingType6 {};
_ggcc :=_afcgf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _ggcc ==nil {_df .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_decaea ,_cafcd :=_ggcc .(*_cc .PdfObjectInteger );if !_cafcd {_df .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ggcc );
return nil ,_cc .ErrTypeError ;};_gbgb .BitsPerCoordinate =_decaea ;_ggcc =_afcgf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ggcc ==nil {_df .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_decaea ,_cafcd =_ggcc .(*_cc .PdfObjectInteger );if !_cafcd {_df .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ggcc );
return nil ,_cc .ErrTypeError ;};_gbgb .BitsPerComponent =_decaea ;_ggcc =_afcgf .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _ggcc ==nil {_df .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_decaea ,_cafcd =_ggcc .(*_cc .PdfObjectInteger );if !_cafcd {_df .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ggcc );
return nil ,_cc .ErrTypeError ;};_gbgb .BitsPerComponent =_decaea ;_ggcc =_afcgf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ggcc ==nil {_df .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dacgf ,_cafcd :=_ggcc .(*_cc .PdfObjectArray );if !_cafcd {_df .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggcc );
return nil ,_cc .ErrTypeError ;};_gbgb .Decode =_dacgf ;if _gccada :=_afcgf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_gccada !=nil {_gbgb .Function =[]PdfFunction {};if _eeggb ,_eccbf :=_gccada .(*_cc .PdfObjectArray );_eccbf {for _ ,_dcgg :=range _eeggb .Elements (){_bbecf ,_gfafb :=_adade (_dcgg );
if _gfafb !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gfafb );return nil ,_gfafb ;};_gbgb .Function =append (_gbgb .Function ,_bbecf );
};}else {_ceda ,_ageab :=_adade (_gccada );if _ageab !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ageab );return nil ,_ageab ;
};_gbgb .Function =append (_gbgb .Function ,_ceda );};};return &_gbgb ,nil ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_gfgffd *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_gaac :=_dac .NewReader (img .getBase ());_ccabe :=_ec .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_gafd :=_dac .NewWriter (_ccabe );
_edcf :=_ed .Pow (2,float64 (img .BitsPerComponent ))-1;_faea :=make ([]uint32 ,3);var (_dfaab uint32 ;ANorm ,X ,Y ,Z ,_ddeba ,_cbeb ,_fbdc float64 ;_afge error ;);for {_dfaab ,_afge =_gaac .ReadSample ();if _afge ==_cd .EOF {break ;}else if _afge !=nil {return img ,_afge ;
};ANorm =float64 (_dfaab )/_edcf ;X =_gfgffd .WhitePoint [0]*_ed .Pow (ANorm ,_gfgffd .Gamma );Y =_gfgffd .WhitePoint [1]*_ed .Pow (ANorm ,_gfgffd .Gamma );Z =_gfgffd .WhitePoint [2]*_ed .Pow (ANorm ,_gfgffd .Gamma );_ddeba =3.240479*X +-1.537150*Y +-0.498535*Z ;
_cbeb =-0.969256*X +1.875992*Y +0.041556*Z ;_fbdc =0.055648*X +-0.204043*Y +1.057311*Z ;_ddeba =_ed .Min (_ed .Max (_ddeba ,0),1.0);_cbeb =_ed .Min (_ed .Max (_cbeb ,0),1.0);_fbdc =_ed .Min (_ed .Max (_fbdc ,0),1.0);_faea [0]=uint32 (_ddeba *_edcf );_faea [1]=uint32 (_cbeb *_edcf );
_faea [2]=uint32 (_fbdc *_edcf );if _afge =_gafd .WriteSamples (_faea );_afge !=nil {return img ,_afge ;};};return _bagc (&_ccabe ),nil ;};func (_gbgce *PdfAcroForm )fill (_dggdc FieldValueProvider ,_dbfcg FieldAppearanceGenerator )error {if _gbgce ==nil {return nil ;
};_egebg ,_gccdc :=_dggdc .FieldValues ();if _gccdc !=nil {return _gccdc ;};for _ ,_agcgb :=range _gbgce .AllFields (){_edgda :=_agcgb .PartialName ();_eebfe ,_geecc :=_egebg [_edgda ];if !_geecc {if _ggdde ,_dabfd :=_agcgb .FullName ();_dabfd ==nil {_eebfe ,_geecc =_egebg [_ggdde ];
};};if !_geecc {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_edgda );
continue ;};if _bfcac :=_dbbc (_agcgb ,_eebfe );_bfcac !=nil {return _bfcac ;};if _dbfcg ==nil {continue ;};for _ ,_dfdb :=range _agcgb .Annotations {_afggfb ,_bcfd :=_dbfcg .GenerateAppearanceDict (_gbgce ,_agcgb ,_dfdb );if _bcfd !=nil {return _bcfd ;
};_dfdb .AP =_afggfb ;_dfdb .ToPdfObject ();};};return nil ;};func (_ddgf *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};func (_aded Image )getBase ()_ec .ImageBase {return _ec .NewImageBase (int (_aded .Width ),int (_aded .Height ),int (_aded .BitsPerComponent ),_aded .ColorComponents ,_aded .Data ,_aded ._ccee ,_aded ._aaaacg );
};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1. It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2. If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3. If there is no /MissingWidth then a failure is returned.
//
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
//
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_gcbba *PdfFont )GetCharMetrics (code _cbf .CharCode )(CharMetrics ,bool ){var _fedcd _edg .CharMetrics ;switch _ceega :=_gcbba ._ggec .(type ){case *pdfFontSimple :if _ffgcd ,_gdba :=_ceega .GetCharMetrics (code );_gdba {return _ffgcd ,_gdba ;};
case *pdfFontType0 :if _acge ,_ggefd :=_ceega .GetCharMetrics (code );_ggefd {return _acge ,_ggefd ;};case *pdfCIDFontType0 :if _geega ,_faag :=_ceega .GetCharMetrics (code );_faag {return _geega ,_faag ;};case *pdfCIDFontType2 :if _aabgg ,_bgccd :=_ceega .GetCharMetrics (code );
_bgccd {return _aabgg ,_bgccd ;};case *pdfFontType3 :if _gbfgc ,_efg :=_ceega .GetCharMetrics (code );_efg {return _gbfgc ,_efg ;};default:_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_gcbba ._ggec );
return _fedcd ,false ;};if _ccga ,_beag :=_gcbba .GetFontDescriptor ();_beag ==nil &&_ccga !=nil {return _edg .CharMetrics {Wx :_ccga ._fbddf },true ;};_df .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_gcbba );
return _fedcd ,false ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_fd .DiffResults ;IsCrlFound bool ;IsOcspFound bool ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _b .Time ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_bfgbdc *Image )ToJBIG2Image ()(*_cc .JBIG2Image ,error ){_adcde ,_gggfc :=_bfgbdc .ToGoImage ();if _gggfc !=nil {return nil ,_gggfc ;};return _cc .GoImageToJBIG2 (_adcde ,_cc .JB2ImageAutoThreshold );};func (_beaf *PdfWriter )setDocInfo (_cbdag _cc .PdfObject ){if _beaf .hasObject (_beaf ._egdc ){delete (_beaf ._abbbc ,_beaf ._egdc );
delete (_beaf ._adgcd ,_beaf ._egdc );for _cafae ,_eeggd :=range _beaf ._gedfdc {if _eeggd ==_beaf ._egdc {copy (_beaf ._gedfdc [_cafae :],_beaf ._gedfdc [_cafae +1:]);_beaf ._gedfdc [len (_beaf ._gedfdc )-1]=nil ;_beaf ._gedfdc =_beaf ._gedfdc [:len (_beaf ._gedfdc )-1];
break ;};};};_ccgfg :=_cc .PdfIndirectObject {};_ccgfg .PdfObject =_cbdag ;_beaf ._egdc =&_ccgfg ;_beaf .addObject (&_ccgfg );};

// String returns a human readable description of `fontfile`.
func (_bcgf *fontFile )String ()string {_fbcaa :="\u005b\u004e\u006f\u006e\u0065\u005d";if _bcgf ._abdgb !=nil {_fbcaa =_bcgf ._abdgb .String ();};return _c .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_bcgf ._gbab ,_fbcaa );
};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_ae :=NewPdfAction ();_acc :=&PdfActionSetOCGState {};_acc .PdfAction =_ae ;_ae .SetContext (_acc );return _acc ;};

// GetXHeight returns the XHeight of the font `descriptor`.
func (_ggdf *PdfFontDescriptor )GetXHeight ()(float64 ,error ){return _cc .GetNumberAsFloat (_ggdf .XHeight );};

// GetContentStream returns the pattern cell's content stream
func (_eebdcg *PdfTilingPattern )GetContentStream ()([]byte ,error ){_aggab ,_ ,_bdffeg :=_eebdcg .GetContentStreamWithEncoder ();return _aggab ,_bdffeg ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_cc .PdfObject ,error );};

// GetAscent returns the Ascent of the font `descriptor`.
func (_dcaa *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _cc .GetNumberAsFloat (_dcaa .Ascent );};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_fefef *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _agda []_cbf .TextEncoder ;var _bdeb _cbf .CMapEncoder ;if _eagae :=_fefef .baseFields ()._fgbf ;_eagae !=nil {_bdeb =_cbf .NewCMapEncoder ("",nil ,_eagae );};_ecgbbe :=_fefef .Encoder ();
if _ecgbbe !=nil {switch _fbag :=_ecgbbe .(type ){case _cbf .SimpleEncoder :_acda :=_fbag .BaseName ();if _ ,_gfffe :=_egdd [_acda ];_gfffe {_agda =append (_agda ,_ecgbbe );};};};if len (_agda )==0{if _fefef .baseFields ()._fgbf !=nil {_agda =append (_agda ,_bdeb );
};if _ecgbbe !=nil {_agda =append (_agda ,_ecgbbe );};};var _faddc _aac .Buffer ;var _dcffd int ;for _ ,_effag :=range data {var _ddgfg bool ;for _ ,_bcba :=range _agda {if _baeae :=_bcba .Encode (string (_effag ));len (_baeae )> 0{_faddc .Write (_baeae );
_ddgfg =true ;break ;};};if !_ddgfg {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_effag );
_dcffd ++;};};if _dcffd !=0{_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_dcffd ,_fefef ,_agda );
};return _faddc .Bytes (),_dcffd ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _cc .PdfObject ;T _cc .PdfObject ;Operation _cc .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_bgb *PdfAnnotationFileAttachment )ToPdfObject ()_cc .PdfObject {_bgb .PdfAnnotation .ToPdfObject ();_ffef :=_bgb ._cef ;_ega :=_ffef .PdfObject .(*_cc .PdfObjectDictionary );_bgb .PdfAnnotationMarkup .appendToPdfDictionary (_ega );_ega .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_ega .SetIfNotNil ("\u0046\u0053",_bgb .FS );_ega .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bgb .Name );return _ffef ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cc .PdfObject ;};func (_fgcf *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _fgcf ._cagc };

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_bdfbc *PdfPageResources )SetXObjectByName (keyName _cc .PdfObjectName ,stream *_cc .PdfObjectStream )error {if _bdfbc .XObject ==nil {_bdfbc .XObject =_cc .MakeDict ();};_afbcc :=_cc .TraceToDirectObject (_bdfbc .XObject );_bgfb ,_agcc :=_afbcc .(*_cc .PdfObjectDictionary );
if !_agcc {_df .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_bdfbc .XObject ,_afbcc );return _ede .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_bgfb .Set (keyName ,stream );return nil ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_cc .PdfObjectName ;Colorants _cc .PdfObject ;Process _cc .PdfObject ;MixingHints _cc .PdfObject ;_efaeb *_cc .PdfIndirectObject ;};func (_aaebb *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};


// ToPdfObject implements interface PdfModel.
func (_bdae *PdfFilespec )ToPdfObject ()_cc .PdfObject {_bdcb :=_bdae .getDict ();_bdcb .Clear ();_bdcb .Set ("\u0054\u0079\u0070\u0065",_cc .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_bdcb .SetIfNotNil ("\u0046\u0053",_bdae .FS );
_bdcb .SetIfNotNil ("\u0046",_bdae .F );_bdcb .SetIfNotNil ("\u0055\u0046",_bdae .UF );_bdcb .SetIfNotNil ("\u0044\u004f\u0053",_bdae .DOS );_bdcb .SetIfNotNil ("\u004d\u0061\u0063",_bdae .Mac );_bdcb .SetIfNotNil ("\u0055\u006e\u0069\u0078",_bdae .Unix );
_bdcb .SetIfNotNil ("\u0049\u0044",_bdae .ID );_bdcb .SetIfNotNil ("\u0056",_bdae .V );_bdcb .SetIfNotNil ("\u0045\u0046",_bdae .EF );_bdcb .SetIfNotNil ("\u0052\u0046",_bdae .RF );_bdcb .SetIfNotNil ("\u0044\u0065\u0073\u0063",_bdae .Desc );_bdcb .SetIfNotNil ("\u0043\u0049",_bdae .CI );
_bdcb .SetIfNotNil ("\u0041\u0046\u0052\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070",_bdae .AFRelationship );return _bdae ._adeca ;};func _efbfg (_edgf *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_edgf }};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_fedec *_cc .PdfIndirectObject ;_aacbd *_cc .PdfIndirectObject ;_bbegb map[_cc .PdfObject ]struct{};_gedfdc []_cc .PdfObject ;_abbbc map[_cc .PdfObject ]struct{};_bbef []*_cc .PdfIndirectObject ;_afeb *PdfOutlineTreeNode ;_feff *_cc .PdfObjectDictionary ;
_eddfg []_cc .PdfObject ;_egdc *_cc .PdfIndirectObject ;_gacfdb *_cg .Writer ;_edgfea int64 ;_fdeagb error ;_acebb *_cc .PdfCrypt ;_eecdc *_cc .PdfObjectDictionary ;_acged *_cc .PdfIndirectObject ;_gacge *_cc .PdfObjectArray ;_gfgfa _cc .Version ;_bddag *bool ;
_fgebe map[_cc .PdfObject ][]*_cc .PdfObjectDictionary ;_fadf *PdfAcroForm ;_ccagg *Names ;_cbgef Optimizer ;_gdebc StandardApplier ;_faff map[int ]crossReference ;_cgfda int64 ;ObjNumOffset int ;_dfeeg bool ;_gddc _cc .XrefTable ;_adged int64 ;_beda int64 ;
_dcacf map[_cc .PdfObject ]int64 ;_adgcd map[_cc .PdfObject ]struct{};_gbace string ;_ccfc []*PdfOutputIntent ;_bafa bool ;_degcb ,_aebda string ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_cacb ,_dfcf :=_aa .Open (filePath );if _dfcf !=nil {_df .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_dfcf );
return nil ,_dfcf ;};defer _cacb .Close ();return NewCompositePdfFontFromTTF (_cacb );};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_cf PdfModel ;Type _cc .PdfObject ;S _cc .PdfObject ;Next _cc .PdfObject ;_dae *_cc .PdfIndirectObject ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_agaa *PdfReader )PageFromIndirectObject (ind *_cc .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_agaa .PageList )!=len (_agaa ._fbad ){return nil ,0,_ede .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _daged ,_cfced :=range _agaa ._fbad {if _cfced ==ind {return _agaa .PageList [_daged ],_daged +1,nil ;};};return nil ,0,_ede .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};var _eebdc =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};
func (_ebbd *pdfFontSimple )updateStandard14Font (){_gdef ,_gafdf :=_ebbd .Encoder ().(_cbf .SimpleEncoder );if !_gafdf {_df .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_ebbd .Encoder (),_ebbd );
return ;};_dbcc :=_gdef .Charcodes ();_ebbd ._fdcc =make (map[_cbf .CharCode ]float64 ,len (_dbcc ));for _ ,_eaagd :=range _dbcc {_afce ,_ :=_gdef .CharcodeToRune (_eaagd );_gegfd ,_ :=_ebbd ._gageb .Read (_afce );_ebbd ._fdcc [_eaagd ]=_gegfd .Wx ;};};


// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_acabb *PdfColorspaceSpecialIndexed )ToPdfObject ()_cc .PdfObject {_afead :=_cc .MakeArray (_cc .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_afead .Append (_acabb .Base .ToPdfObject ());_afead .Append (_cc .MakeInteger (int64 (_acabb .HiVal )));
_afead .Append (_acabb .Lookup );if _acabb ._cbcb !=nil {_acabb ._cbcb .PdfObject =_afead ;return _acabb ._cbcb ;};return _afead ;};

// SetReason sets the `Reason` field of the signature.
func (_caeae *PdfSignature )SetReason (reason string ){_caeae .Reason =_cc .MakeEncodedString (reason ,true );};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_cc .PdfObjectInteger ;TilingType *_cc .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_cc .PdfObjectFloat ;YStep *_cc .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_cc .PdfObjectArray ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );
func (_adfbba *PdfReader )buildPageList (_deabfg *_cc .PdfIndirectObject ,_efedf *_cc .PdfIndirectObject ,_aacef map[_cc .PdfObject ]struct{})error {if _deabfg ==nil {return nil ;};if _ ,_ecabe :=_aacef [_deabfg ];_ecabe {_df .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_deabfg .ObjectNumber );
return nil ;};_aacef [_deabfg ]=struct{}{};_bcbff ,_gdgcf :=_deabfg .PdfObject .(*_cc .PdfObjectDictionary );if !_gdgcf {return _ede .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_afdc ,_gdgcf :=(*_bcbff ).Get ("\u0054\u0079\u0070\u0065").(*_cc .PdfObjectName );
if !_gdgcf {if _bcbff .Get ("\u004b\u0069\u0064\u0073")==nil {return _ede .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_df .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_afdc =_cc .MakeName ("\u0050\u0061\u0067e\u0073");_bcbff .Set ("\u0054\u0079\u0070\u0065",_afdc );};_df .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_afdc ,_deabfg );
if *_afdc =="\u0050\u0061\u0067\u0065"{_dbbb ,_ggdagb :=_adfbba .newPdfPageFromDict (_bcbff );if _ggdagb !=nil {return _ggdagb ;};_dbbb .setContainer (_deabfg );if _efedf !=nil {_bcbff .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_efedf );};_adfbba ._fbad =append (_adfbba ._fbad ,_deabfg );
_adfbba .PageList =append (_adfbba .PageList ,_dbbb );return nil ;};if *_afdc !="\u0050\u0061\u0067e\u0073"{_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_afdc );
return _ede .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _efedf !=nil {_bcbff .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_efedf );};if !_adfbba ._fcae {_beba :=_adfbba .traverseObjectData (_deabfg );if _beba !=nil {return _beba ;};};_ebedc ,_becae :=_adfbba ._bbed .Resolve (_bcbff .Get ("\u004b\u0069\u0064\u0073"));
if _becae !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _becae ;};var _edgef *_cc .PdfObjectArray ;
_edgef ,_gdgcf =_ebedc .(*_cc .PdfObjectArray );if !_gdgcf {_agdcd ,_edfdc :=_ebedc .(*_cc .PdfIndirectObject );if !_edfdc {return _ede .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};
_edgef ,_gdgcf =_agdcd .PdfObject .(*_cc .PdfObjectArray );if !_gdgcf {return _ede .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_df .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_edgef );
for _bffee ,_cdecfd :=range _edgef .Elements (){_fcgeb ,_cdgdb :=_cc .GetIndirect (_cdecfd );if !_cdgdb {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_fcgeb );
return _ede .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_edgef .Set (_bffee ,_fcgeb );_becae =_adfbba .buildPageList (_fcgeb ,_deabfg ,_aacef );if _becae !=nil {return _becae ;
};};return nil ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_edega *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_abde *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ede .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bga :=vals [0];if _bga < 0.0||_bga > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bga );
return nil ,ErrColorOutOfRange ;};_fcgdb :=vals [1];if _fcgdb < 0.0||_fcgdb > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bga );return nil ,ErrColorOutOfRange ;
};_ddfe :=vals [2];if _ddfe < 0.0||_ddfe > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bga );return nil ,ErrColorOutOfRange ;};_bddc :=NewPdfColorDeviceRGB (_bga ,_fcgdb ,_ddfe );
return _bddc ,nil ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_dbe :=&PdfColorspaceCalGray {};_dbe .BlackPoint =[]float64 {0.0,0.0,0.0};_dbe .Gamma =1;return _dbe ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_ffggg *PdfReader )Inspect ()(map[string ]int ,error ){return _ffggg ._bbed .Inspect ()};func _ggfeg (_edggb map[_edg .GID ]int ,_cfgaf uint16 )*_cc .PdfObjectArray {_cdbea :=&_cc .PdfObjectArray {};_dgacd :=_edg .GID (_cfgaf );for _ecga :=_edg .GID (0);
_ecga < _dgacd ;{_fdbc ,_ggaa :=_edggb [_ecga ];if !_ggaa {_ecga ++;continue ;};_dgba :=_ecga ;for _ecdad :=_dgba +1;_ecdad < _dgacd ;_ecdad ++{if _dadg ,_baga :=_edggb [_ecdad ];!_baga ||_fdbc !=_dadg {break ;};_dgba =_ecdad ;};_cdbea .Append (_cc .MakeInteger (int64 (_ecga )));
_cdbea .Append (_cc .MakeInteger (int64 (_dgba )));_cdbea .Append (_cc .MakeInteger (int64 (_fdbc )));_ecga =_dgba +1;};return _cdbea ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_gceg :=&PdfFilespec {};_gceg ._adeca =_cc .MakeIndirectObject (_cc .MakeDict ());return _gceg ;};func (_gcbcdb *PdfSignature )extractChainFromPKCS7 ()([]*_ffd .Certificate ,error ){_abegg ,_adabf :=_bb .Parse (_gcbcdb .Contents .Bytes ());
if _adabf !=nil {return nil ,_adabf ;};return _abegg .Certificates ,nil ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_fabeb *PdfPage )Duplicate ()*PdfPage {_becbg :=*_fabeb ;_becbg ._gcead =_cc .MakeDict ();_becbg ._bfgcg =_cc .MakeIndirectObject (_becbg ._gcead );_becbg ._gebd =*_becbg ._gcead ;return &_becbg ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_gfcfc ,_feaa :=_edg .NewStdFontByName (HelveticaName );if !_feaa {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_cegff :=_daaff (_gfcfc );return &PdfFont {_ggec :&_cegff };};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_aadd *_cc .PdfIndirectObject ;};

// Transform rectangle with the supplied matrix.
func (_fcdff *PdfRectangle )Transform (transformMatrix _ga .Matrix ){_fcdff .Llx ,_fcdff .Lly =transformMatrix .Transform (_fcdff .Llx ,_fcdff .Lly );_fcdff .Urx ,_fcdff .Ury =transformMatrix .Transform (_fcdff .Urx ,_fcdff .Ury );_fcdff .Normalize ();
};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_dbac *PdfOutlineTreeNode )ToPdfObject ()_cc .PdfObject {return _dbac .GetContext ().ToPdfObject ()};func _eecbc (_ddfcd *_cc .PdfObjectStream )(*PdfFunctionType4 ,error ){_feaffd :=&PdfFunctionType4 {};_feaffd ._fded =_ddfcd ;_eabgc :=_ddfcd .PdfObjectDictionary ;
_ffded ,_bgdge :=_cc .TraceToDirectObject (_eabgc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cc .PdfObjectArray );if !_bgdge {_df .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ede .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _ffded .Len ()%2!=0{_df .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ede .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_fcdaf ,_afbbb :=_ffded .ToFloat64Array ();
if _afbbb !=nil {return nil ,_afbbb ;};_feaffd .Domain =_fcdaf ;_ffded ,_bgdge =_cc .TraceToDirectObject (_eabgc .Get ("\u0052\u0061\u006eg\u0065")).(*_cc .PdfObjectArray );if _bgdge {if _ffded .Len ()< 0||_ffded .Len ()%2!=0{return nil ,_ede .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_cbaa ,_fege :=_ffded .ToFloat64Array ();if _fege !=nil {return nil ,_fege ;};_feaffd .Range =_cbaa ;};_bbfdb ,_afbbb :=_cc .DecodeStream (_ddfcd );if _afbbb !=nil {return nil ,_afbbb ;};_feaffd ._bgee =_bbfdb ;_gabef :=_bbd .NewPSParser (_bbfdb );_dfgad ,_afbbb :=_gabef .Parse ();
if _afbbb !=nil {return nil ,_afbbb ;};_feaffd .Program =_dfgad ;return _feaffd ,nil ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_cc .PdfObjectStream ;OCSP []*_cc .PdfObjectStream ;CRL []*_cc .PdfObjectStream ;TU *_cc .PdfObjectString ;TS *_cc .PdfObjectString ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _cc .PdfObject ;Q _cc .PdfObject ;RC _cc .PdfObject ;DS _cc .PdfObject ;CL _cc .PdfObject ;IT _cc .PdfObject ;BE _cc .PdfObject ;RD _cc .PdfObject ;BS _cc .PdfObject ;LE _cc .PdfObject ;
};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _cc .PdfObject ;NewWindow _cc .PdfObject ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_ace :=NewPdfAction ();_gfa :=&PdfActionRendition {};_gfa .PdfAction =_ace ;_ace .SetContext (_gfa );return _gfa ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_cabf *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _cabf .Alternate ==nil {_df .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _cabf .N ==1{_df .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_cgdfg :=NewPdfColorspaceDeviceGray ();return _cgdfg .ImageToRGB (img );}else if _cabf .N ==3{_df .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _cabf .N ==4{_df .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_dcab :=NewPdfColorspaceDeviceCMYK ();return _dcab .ImageToRGB (img );}else {return img ,_ede .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_df .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_cabf );
_ceeb ,_babf :=_cabf .Alternate .ImageToRGB (img );_df .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_df .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_ceeb );
return _ceeb ,_babf ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_cc .PdfObjectStream )(*XObjectForm ,error ){_gace :=&XObjectForm {};_gace ._accabd =stream ;_efgc :=*(stream .PdfObjectDictionary );_gdff ,_deec :=_cc .NewEncoderFromStream (stream );if _deec !=nil {return nil ,_deec ;
};_gace .Filter =_gdff ;if _faddge :=_efgc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_faddge !=nil {_gffge ,_aedbgb :=_faddge .(*_cc .PdfObjectName );if !_aedbgb {return nil ,_ede .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_gffge !="\u0046\u006f\u0072\u006d"{_df .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_ede .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _fgbaeb :=_efgc .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_fgbaeb !=nil {_gace .FormType =_fgbaeb ;};if _ccefe :=_efgc .Get ("\u0042\u0042\u006f\u0078");_ccefe !=nil {_gace .BBox =_ccefe ;};if _dfccc :=_efgc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_dfccc !=nil {_gace .Matrix =_dfccc ;};if _fgggc :=_efgc .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_fgggc !=nil {_fgggc =_cc .TraceToDirectObject (_fgggc );_cbcdd ,_fgebc :=_fgggc .(*_cc .PdfObjectDictionary );if !_fgebc {_df .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_cc .ErrTypeError ;};_adcf ,_aaege :=NewPdfPageResourcesFromDict (_cbcdd );if _aaege !=nil {_df .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_aaege ;};_gace .Resources =_adcf ;_df .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_gace .Resources );};_gace .Group =_efgc .Get ("\u0047\u0072\u006fu\u0070");_gace .Ref =_efgc .Get ("\u0052\u0065\u0066");
_gace .MetaData =_efgc .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_gace .PieceInfo =_efgc .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_gace .LastModified =_efgc .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_gace .StructParent =_efgc .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_gace .StructParents =_efgc .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_gace .OPI =_efgc .Get ("\u004f\u0050\u0049");
_gace .OC =_efgc .Get ("\u004f\u0043");_gace .Name =_efgc .Get ("\u004e\u0061\u006d\u0065");_gace .Stream =stream .Stream ;return _gace ,nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_fefcb *PdfShadingPatternType2 )ToPdfObject ()_cc .PdfObject {_fefcb .PdfPattern .ToPdfObject ();_afccc :=_fefcb .getDict ();if _fefcb .Shading !=nil {_afccc .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_fefcb .Shading .ToPdfObject ());};if _fefcb .Matrix !=nil {_afccc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_fefcb .Matrix );
};if _fefcb .ExtGState !=nil {_afccc .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_fefcb .ExtGState );};return _fefcb ._ecegf ;};func _fbfg (_gbeaa *_cc .PdfObjectDictionary )(*PdfFieldText ,error ){_cdfb :=&PdfFieldText {};_cdfb .DA ,_ =_cc .GetString (_gbeaa .Get ("\u0044\u0041"));
_cdfb .Q ,_ =_cc .GetInt (_gbeaa .Get ("\u0051"));_cdfb .DS ,_ =_cc .GetString (_gbeaa .Get ("\u0044\u0053"));_cdfb .RV =_gbeaa .Get ("\u0052\u0056");_cdfb .MaxLen ,_ =_cc .GetInt (_gbeaa .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _cdfb ,nil ;
};func (_bagd *PdfReader )newPdfSignatureFromIndirect (_ebgfee *_cc .PdfIndirectObject )(*PdfSignature ,error ){_agbea ,_gefad :=_ebgfee .PdfObject .(*_cc .PdfObjectDictionary );if !_gefad {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _ebegb ,_bdded :=_bagd ._ecbgec .GetModelFromPrimitive (_ebgfee ).(*PdfSignature );_bdded {return _ebegb ,nil ;};_aggcf :=&PdfSignature {};_aggcf ._faecf =_ebgfee ;_aggcf .Type ,_ =_cc .GetName (_agbea .Get ("\u0054\u0079\u0070\u0065"));
_aggcf .Filter ,_gefad =_cc .GetName (_agbea .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_gefad {_df .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_aggcf .SubFilter ,_ =_cc .GetName (_agbea .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_aggcf .Contents ,_gefad =_cc .GetString (_agbea .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_gefad {_df .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _cedeg ,_dfdad :=_cc .GetArray (_agbea .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_dfdad {_aggcf .Reference =_cc .MakeArray ();for _ ,_ccdcca :=range _cedeg .Elements (){_aaafc ,_ggfb :=_cc .GetDict (_ccdcca );
if !_ggfb {_df .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_aaade ,_ecac :=_bagd .newPdfSignatureReferenceFromDict (_aaafc );if _ecac !=nil {return nil ,_ecac ;};_aggcf .Reference .Append (_aaade .ToPdfObject ());};};_aggcf .Cert =_agbea .Get ("\u0043\u0065\u0072\u0074");_aggcf .ByteRange ,_ =_cc .GetArray (_agbea .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_aggcf .Changes ,_ =_cc .GetArray (_agbea .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_aggcf .Name ,_ =_cc .GetString (_agbea .Get ("\u004e\u0061\u006d\u0065"));_aggcf .M ,_ =_cc .GetString (_agbea .Get ("\u004d"));_aggcf .Location ,_ =_cc .GetString (_agbea .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_aggcf .Reason ,_ =_cc .GetString (_agbea .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_aggcf .ContactInfo ,_ =_cc .GetString (_agbea .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_aggcf .R ,_ =_cc .GetInt (_agbea .Get ("\u0052"));
_aggcf .V ,_ =_cc .GetInt (_agbea .Get ("\u0056"));_aggcf .PropBuild ,_ =_cc .GetDict (_agbea .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_aggcf .PropAuthTime ,_ =_cc .GetInt (_agbea .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_aggcf .PropAuthType ,_ =_cc .GetName (_agbea .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_bagd ._ecbgec .Register (_ebgfee ,_aggcf );return _aggcf ,nil ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_fcbgea *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_efca ,_gaebf :=color .(*PdfColorDeviceGray );if !_gaebf {_df .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_ede .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_efca ),float64 (*_efca ),float64 (*_efca )),nil ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_gdgcce *modelManager )GetPrimitiveFromModel (model PdfModel )_cc .PdfObject {_ebbfg ,_fdbcg :=_gdgcce ._ffbae [model ];if !_fdbcg {return nil ;};return _ebbfg ;};func (_ffed *PdfReader )newPdfActionGoTo3DViewFromDict (_faf *_cc .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_faf .Get ("\u0054\u0041"),V :_faf .Get ("\u0056")},nil ;
};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1. Use the ToUnicode CMap if there is one.
//  2. Use the underlying font's encoding.
func (_geac *PdfFont )CharcodesToUnicode (charcodes []_cbf .CharCode )[]rune {_deef ,_ ,_ :=_geac .CharcodesToUnicodeWithStats (charcodes );return _deef ;};func (_dged *LTV )getOCSPs (_adacg []*_ffd .Certificate ,_agabe map[string ]*_ffd .Certificate )([][]byte ,error ){_bbfbeg :=make ([][]byte ,0,len (_adacg ));
for _ ,_aacd :=range _adacg {for _ ,_afeg :=range _aacd .OCSPServer {if _dged .CertClient .IsCA (_aacd ){continue ;};_beegd ,_dcffe :=_agabe [_aacd .Issuer .CommonName ];if !_dcffe {_df .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_ddcbb ,_aaac :=_dged .OCSPClient .MakeRequest (_afeg ,_aacd ,_beegd );if _aaac !=nil {_df .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_aaac );
continue ;};_bbfbeg =append (_bbfbeg ,_ddcbb );};};return _bbfbeg ,nil ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_gecfb :=&PdfPageResourcesColorspaces {};_gecfb .Names =[]string {};_gecfb .Colorspaces =map[string ]PdfColorspace {};_gecfb ._egfac =&_cc .PdfIndirectObject {};return _gecfb ;};

// NewEmbeddedFileFromContent construct a new EmbeddedFile from supplied file content.
func NewEmbeddedFileFromContent (content []byte )(*EmbeddedFile ,error ){_dfaaf :=_fgb .Detect (content );_cggg :=_bf .Sum (content );_bgae :=&EmbeddedFile {Name :"\u0061\u0074\u0074\u0061\u0063\u0068\u006d\u0065\u006e\u0074",Content :content ,FileType :_dfaaf .String (),Hash :_db .EncodeToString (_cggg [:])};
return _bgae ,nil ;};var _ggbgg =_cb .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_dabf _cc .PdfObject ;};func _cgfc (_gafcc _cc .PdfObject )(map[_cbf .CharCode ]float64 ,error ){if _gafcc ==nil {return nil ,nil ;};_egcbf ,_ggebd :=_cc .GetArray (_gafcc );if !_ggebd {return nil ,nil ;
};_edgfa :=map[_cbf .CharCode ]float64 {};_gcbda :=_egcbf .Len ();for _dgeb :=0;_dgeb < _gcbda -1;_dgeb ++{_gbebc :=_cc .TraceToDirectObject (_egcbf .Get (_dgeb ));_edfb ,_ccafc :=_cc .GetIntVal (_gbebc );if !_ccafc {return nil ,_c .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_dgeb ,_gbebc );
};_dgeb ++;if _dgeb > _gcbda -1{return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_egcbf );};_bgdf :=_cc .TraceToDirectObject (_egcbf .Get (_dgeb ));
switch _bgdf .(type ){case *_cc .PdfObjectArray :_aagca ,_ :=_cc .GetArray (_bgdf );if _eccefd ,_faed :=_aagca .ToFloat64Array ();_faed ==nil {for _deafcf :=0;_deafcf < len (_eccefd );_deafcf ++{_edgfa [_cbf .CharCode (_edfb +_deafcf )]=_eccefd [_deafcf ];
};}else {return nil ,_c .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_dgeb ,_bgdf );};case *_cc .PdfObjectInteger :_acbee ,_cdaa :=_cc .GetIntVal (_bgdf );
if !_cdaa {return nil ,_c .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_dgeb ,_bgdf );};_dgeb ++;if _dgeb > _gcbda -1{return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_egcbf );
};_bfbb :=_egcbf .Get (_dgeb );_daeed ,_cfccg :=_cc .GetNumberAsFloat (_bfbb );if _cfccg !=nil {return nil ,_c .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_dgeb ,_bfbb );
};for _gedd :=_edfb ;_gedd <=_acbee ;_gedd ++{_edgfa [_cbf .CharCode (_gedd )]=_daeed ;};default:return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_dgeb ,_bgdf );
};};return _edgfa ,nil ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_cc .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// HasShadingByName checks whether a shading is defined by the specified keyName.
func (_dgdgg *PdfPageResources )HasShadingByName (keyName _cc .PdfObjectName )bool {_ ,_gffbb :=_dgdgg .GetShadingByName (keyName );return _gffbb ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _cc .PdfObject ;Volume _cc .PdfObject ;Synchronous _cc .PdfObject ;Repeat _cc .PdfObject ;Mix _cc .PdfObject ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_bebae :=&XObjectForm {};_ecdcbe :=&_cc .PdfObjectStream {};_ecdcbe .PdfObjectDictionary =_cc .MakeDict ();_bebae ._accabd =_ecdcbe ;return _bebae ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_dcbbg *modelManager )GetModelFromPrimitive (primitive _cc .PdfObject )PdfModel {model ,_gbfbee :=_dcbbg ._cffdf [primitive ];if !_gbfbee {return nil ;};return model ;};

// ToPdfObject implements interface PdfModel.
func (_faca *PdfActionURI )ToPdfObject ()_cc .PdfObject {_faca .PdfAction .ToPdfObject ();_edcb :=_faca ._dae ;_egb :=_edcb .PdfObject .(*_cc .PdfObjectDictionary );_egb .SetIfNotNil ("\u0053",_cc .MakeName (string (ActionTypeURI )));_egb .SetIfNotNil ("\u0055\u0052\u0049",_faca .URI );
_egb .SetIfNotNil ("\u0049\u0073\u004da\u0070",_faca .IsMap );return _edcb ;};func _gedf (_acbac *_cc .PdfObjectDictionary ,_gcbe *fontCommon )(*pdfFontType3 ,error ){_gagcd :=_fbdg (_gcbe );_bgfc :=_acbac .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _bgfc ==nil {_bgfc =_cc .MakeInteger (0);};_gagcd .FirstChar =_bgfc ;_gbffb ,_eafb :=_cc .GetIntVal (_bgfc );if !_eafb {_df .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_bgfc );
return nil ,_cc .ErrTypeError ;};_cgggd :=_cbf .CharCode (_gbffb );_bgfc =_acbac .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _bgfc ==nil {_bgfc =_cc .MakeInteger (255);};_gagcd .LastChar =_bgfc ;_gbffb ,_eafb =_cc .GetIntVal (_bgfc );if !_eafb {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_bgfc );
return nil ,_cc .ErrTypeError ;};_dfgca :=_cbf .CharCode (_gbffb );_bgfc =_acbac .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _bgfc !=nil {_gagcd .Resources =_bgfc ;};_bgfc =_acbac .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _bgfc ==nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_bgfc );
return nil ,_cc .ErrNotSupported ;};_gagcd .CharProcs =_bgfc ;_bgfc =_acbac .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _bgfc ==nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_bgfc );
return nil ,_cc .ErrNotSupported ;};_gagcd .FontMatrix =_bgfc ;_gagcd ._aacf =make (map[_cbf .CharCode ]float64 );_bgfc =_acbac .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _bgfc !=nil {_gagcd .Widths =_bgfc ;_cagd ,_gfga :=_cc .GetArray (_bgfc );if !_gfga {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_bgfc );
return nil ,_cc .ErrTypeError ;};_ebcc ,_bdffe :=_cagd .ToFloat64Array ();if _bdffe !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_bdffe ;};if len (_ebcc )!=int (_dfgca -_cgggd +1){_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_dfgca -_cgggd +1,len (_ebcc ));
return nil ,_cc .ErrRangeError ;};_aegf ,_gfga :=_cc .GetArray (_gagcd .FontMatrix );if !_gfga {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_aegf );
return nil ,_bdffe ;};_gffc ,_bdffe :=_aegf .ToFloat64Array ();if _bdffe !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_bdffe ;};_gfgfc :=_ga .NewMatrix (_gffc [0],_gffc [1],_gffc [2],_gffc [3],_gffc [4],_gffc [5]);for _fadef ,_fdcba :=range _ebcc {_dgbab ,_ :=_gfgfc .Transform (_fdcba ,_fdcba );_gagcd ._aacf [_cgggd +_cbf .CharCode (_fadef )]=_dgbab ;};};_gagcd .Encoding =_cc .TraceToDirectObject (_acbac .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_affa :=_acbac .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _affa !=nil {_gagcd ._dcadd =_cc .TraceToDirectObject (_affa );_ebca ,_cfaff :=_cgabg (_gagcd ._dcadd ,&_gagcd .fontCommon );if _cfaff !=nil {return nil ,_cfaff ;};_gagcd ._fgbf =_ebca ;
};if _cbdde :=_gagcd ._fgbf ;_cbdde !=nil {_gagcd ._debcd =_cbf .NewCMapEncoder ("",nil ,_cbdde );}else {_gagcd ._debcd =_cbf .NewPdfDocEncoder ();};return _gagcd ,nil ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_fbfgf PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _fbfgf ._ggec .getFontDescriptor (),nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bcccg *PdfShadingType7 )ToPdfObject ()_cc .PdfObject {_bcccg .PdfShading .ToPdfObject ();_bcgb ,_agbed :=_bcccg .getShadingDict ();if _agbed !=nil {_df .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bcccg .BitsPerCoordinate !=nil {_bcgb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bcccg .BitsPerCoordinate );};if _bcccg .BitsPerComponent !=nil {_bcgb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bcccg .BitsPerComponent );
};if _bcccg .BitsPerFlag !=nil {_bcgb .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_bcccg .BitsPerFlag );};if _bcccg .Decode !=nil {_bcgb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bcccg .Decode );};if _bcccg .Function !=nil {if len (_bcccg .Function )==1{_bcgb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bcccg .Function [0].ToPdfObject ());
}else {_gadc :=_cc .MakeArray ();for _ ,_gegfa :=range _bcccg .Function {_gadc .Append (_gegfa .ToPdfObject ());};_bcgb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gadc );};};return _bcccg ._ccfe ;};func _gccgc ()_b .Time {_aaefb .Lock ();
defer _aaefb .Unlock ();return _cbfbg };

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_aaefb .Lock ();defer _aaefb .Unlock ();_ffabe =producer };func _bebf (_gefdc _cc .PdfObject )(*PdfColorspaceLab ,error ){_bcab :=NewPdfColorspaceLab ();if _aebg ,_eefg :=_gefdc .(*_cc .PdfIndirectObject );_eefg {_bcab ._gfff =_aebg ;
};_gefdc =_cc .TraceToDirectObject (_gefdc );_ggeg ,_ebec :=_gefdc .(*_cc .PdfObjectArray );if !_ebec {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ggeg .Len ()!=2{return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_gefdc =_cc .TraceToDirectObject (_ggeg .Get (0));_fcge ,_ebec :=_gefdc .(*_cc .PdfObjectName );if !_ebec {return nil ,_c .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_fcge !="\u004c\u0061\u0062"{return nil ,_c .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_gefdc =_cc .TraceToDirectObject (_ggeg .Get (1));_ggef ,_ebec :=_gefdc .(*_cc .PdfObjectDictionary );
if !_ebec {return nil ,_c .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_gefdc =_ggef .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_gefdc =_cc .TraceToDirectObject (_gefdc );_fcbf ,_ebec :=_gefdc .(*_cc .PdfObjectArray );if !_ebec {return nil ,_c .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _fcbf .Len ()!=3{return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_gagf ,_cbfff :=_fcbf .GetAsFloat64Slice ();if _cbfff !=nil {return nil ,_cbfff ;};_bcab .WhitePoint =_gagf ;_gefdc =_ggef .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _gefdc !=nil {_gefdc =_cc .TraceToDirectObject (_gefdc );
_ccgfd ,_feba :=_gefdc .(*_cc .PdfObjectArray );if !_feba {return nil ,_c .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _ccgfd .Len ()!=3{return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_eegbc ,_afbb :=_ccgfd .GetAsFloat64Slice ();if _afbb !=nil {return nil ,_afbb ;};_bcab .BlackPoint =_eegbc ;};_gefdc =_ggef .Get ("\u0052\u0061\u006eg\u0065");if _gefdc !=nil {_gefdc =_cc .TraceToDirectObject (_gefdc );_ggde ,_dgfc :=_gefdc .(*_cc .PdfObjectArray );
if !_dgfc {_df .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_c .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ggde .Len ()!=4{_df .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_ggdg ,_acbab :=_ggde .GetAsFloat64Slice ();if _acbab !=nil {return nil ,_acbab ;};_bcab .Range =_ggdg ;};return _bcab ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_fdgd *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ede .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gagbc :=vals [0];if _gagbc < 0.0||_gagbc > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gagbc );
return nil ,ErrColorOutOfRange ;};_bfae :=vals [1];if _bfae < 0.0||_bfae > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bfae );return nil ,ErrColorOutOfRange ;
};_baae :=vals [2];if _baae < 0.0||_baae > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_baae );return nil ,ErrColorOutOfRange ;};_bbab :=NewPdfColorCalRGB (_gagbc ,_bfae ,_baae );
return _bbab ,nil ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_eeaab *PdfWriter )AddPage (page *PdfPage )error {const _efdg ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_cafcfc (page );_cedgd :=page .ToPdfObject ();_df .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_df .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_cedgd );_dgfggb ,_bbade :=_cc .GetIndirect (_cedgd );if !_bbade {return _ede .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_df .Log .Trace ("\u0025\u0073",_dgfggb );_df .Log .Trace ("\u0025\u0073",_dgfggb .PdfObject );_fecab ,_bbade :=_cc .GetDict (_dgfggb .PdfObject );if !_bbade {return _ede .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_abfb ,_bbade :=_cc .GetName (_fecab .Get ("\u0054\u0079\u0070\u0065"));if !_bbade {return _c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_fecab .Get ("\u0054\u0079\u0070\u0065"));
};if _abfb .String ()!="\u0050\u0061\u0067\u0065"{return _ede .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_fbfag :=[]_cc .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_gbaec ,_dgfba :=_cc .GetIndirect (_fecab .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_df .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_fecab .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_dgfba );
for _dgfba {_df .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gbaec );_dbgda ,_aedbg :=_cc .GetDict (_gbaec .PdfObject );if !_aedbg {return _ede .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_bacba :=range _fbfag {_df .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bacba );if _fecab .Get (_bacba )!=nil {_df .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _bdce :=_dbgda .Get (_bacba );_bdce !=nil {_df .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bacba );_fecab .Set (_bacba ,_bdce );};};_gbaec ,_dgfba =_cc .GetIndirect (_dbgda .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_df .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dbgda .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_df .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_fecab .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eeaab ._aacbd );_dgfggb .PdfObject =_fecab ;_dbcfc ,_bbade :=_cc .GetDict (_eeaab ._aacbd .PdfObject );if !_bbade {return _ede .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_ddcab ,_bbade :=_cc .GetArray (_dbcfc .Get ("\u004b\u0069\u0064\u0073"));if !_bbade {return _ede .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_ddcab .Append (_dgfggb );_eeaab ._bbegb [_fecab ]=struct{}{};_cgaa ,_bbade :=_cc .GetInt (_dbcfc .Get ("\u0043\u006f\u0075n\u0074"));if !_bbade {return _ede .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_cgaa =*_cgaa +1;if page ._caebc ==nil {_eecfb :=_abc .Track (_eeaab ._gbace ,_efdg );if _eecfb !=nil {return _eecfb ;};}else {_cfagb :=_abc .Track (page ._caebc ._bfffa ,_efdg );if _cfagb !=nil {return _cfagb ;};};_eeaab .addObject (_dgfggb );_cfcd :=_eeaab .addObjects (_fecab );
if _cfcd !=nil {return _cfcd ;};return nil ;};func _fbdg (_cegcb *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_cegcb }};

// ToPdfObject implements interface PdfModel.
func (_aef *PdfActionJavaScript )ToPdfObject ()_cc .PdfObject {_aef .PdfAction .ToPdfObject ();_adg :=_aef ._dae ;_dfa :=_adg .PdfObject .(*_cc .PdfObjectDictionary );_dfa .SetIfNotNil ("\u0053",_cc .MakeName (string (ActionTypeJavaScript )));_dfa .SetIfNotNil ("\u004a\u0053",_aef .JS );
return _adg ;};func _cafcfc (_cbfee *PdfPage ){_bdaef :=_abc .GetLicenseKey ();if _bdaef !=nil &&_bdaef .IsLicensed (){return ;};_dgdcg :=_cc .PdfObjectName ("\u0055\u0046\u0031");if !_cbfee .Resources .HasFontByName (_dgdcg ){_cbfee .Resources .SetFontByName (_dgdcg ,DefaultFont ().ToPdfObject ());
};var _ecbdf []string ;_ecbdf =append (_ecbdf ,"\u0071");_ecbdf =append (_ecbdf ,"\u0042\u0054");_ecbdf =append (_ecbdf ,_c .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_dgdcg .String ()));_ecbdf =append (_ecbdf ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");
_ecbdf =append (_ecbdf ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_addab :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_ecbdf =append (_ecbdf ,_c .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_addab ));_ecbdf =append (_ecbdf ,"\u0045\u0054");_ecbdf =append (_ecbdf ,"\u0051");_eeggc :=_fa .Join (_ecbdf ,"\u000a");_cbfee .AddContentStreamByString (_eeggc );_cbfee .ToPdfObject ();
};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _cc .PdfObject ;MK _cc .PdfObject ;A _cc .PdfObject ;AA _cc .PdfObject ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_eggb *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_bgea :=_dac .NewReader (img .getBase ());_ecaf :=_ec .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_cdag :=_dac .NewWriter (_ecaf );
_beae :=_ed .Pow (2,float64 (img .BitsPerComponent ))-1;_geba :=make ([]uint32 ,3);var (_gfgdb error ;_ddce ,_cacda ,_cbgf ,_faga ,_efdc ,_bffc float64 ;);for {_gfgdb =_bgea .ReadSamples (_geba );if _gfgdb ==_cd .EOF {break ;}else if _gfgdb !=nil {return img ,_gfgdb ;
};_ddce =float64 (_geba [0])/_beae ;_cacda =float64 (_geba [1])/_beae ;_cbgf =float64 (_geba [2])/_beae ;_faga =_eggb .Matrix [0]*_ed .Pow (_ddce ,_eggb .Gamma [0])+_eggb .Matrix [3]*_ed .Pow (_cacda ,_eggb .Gamma [1])+_eggb .Matrix [6]*_ed .Pow (_cbgf ,_eggb .Gamma [2]);
_efdc =_eggb .Matrix [1]*_ed .Pow (_ddce ,_eggb .Gamma [0])+_eggb .Matrix [4]*_ed .Pow (_cacda ,_eggb .Gamma [1])+_eggb .Matrix [7]*_ed .Pow (_cbgf ,_eggb .Gamma [2]);_bffc =_eggb .Matrix [2]*_ed .Pow (_ddce ,_eggb .Gamma [0])+_eggb .Matrix [5]*_ed .Pow (_cacda ,_eggb .Gamma [1])+_eggb .Matrix [8]*_ed .Pow (_cbgf ,_eggb .Gamma [2]);
_ddce =3.240479*_faga +-1.537150*_efdc +-0.498535*_bffc ;_cacda =-0.969256*_faga +1.875992*_efdc +0.041556*_bffc ;_cbgf =0.055648*_faga +-0.204043*_efdc +1.057311*_bffc ;_ddce =_ed .Min (_ed .Max (_ddce ,0),1.0);_cacda =_ed .Min (_ed .Max (_cacda ,0),1.0);
_cbgf =_ed .Min (_ed .Max (_cbgf ,0),1.0);_geba [0]=uint32 (_ddce *_beae );_geba [1]=uint32 (_cacda *_beae );_geba [2]=uint32 (_cbgf *_beae );if _gfgdb =_cdag .WriteSamples (_geba );_gfgdb !=nil {return img ,_gfgdb ;};};return _bagc (&_ecaf ),nil ;};

// HasPatternByName checks whether a pattern object is defined by the specified keyName.
func (_dgfeb *PdfPageResources )HasPatternByName (keyName _cc .PdfObjectName )bool {_ ,_bgcaa :=_dgfeb .GetPatternByName (keyName );return _bgcaa ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_gcbcef *PdfPageResources )SetXObjectImageByName (keyName _cc .PdfObjectName ,ximg *XObjectImage )error {_agddg :=ximg .ToPdfObject ().(*_cc .PdfObjectStream );_bacgg :=_gcbcef .SetXObjectByName (keyName ,_agddg );return _bacgg ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_aaefb .Lock ();defer _aaefb .Unlock ();_fcafc =keywords };func _ddfc (_acdcd *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_acdcd }};

// ToPdfObject implements interface PdfModel.
func (_bcfec *PdfTransformParamsDocMDP )ToPdfObject ()_cc .PdfObject {_aaedeb :=_cc .MakeDict ();_aaedeb .SetIfNotNil ("\u0054\u0079\u0070\u0065",_bcfec .Type );_aaedeb .SetIfNotNil ("\u0056",_bcfec .V );_aaedeb .SetIfNotNil ("\u0050",_bcfec .P );return _aaedeb ;
};func _afddc (_adad *_cc .PdfObjectDictionary ,_fbge *fontCommon ,_bebga _cbf .TextEncoder )(*pdfFontSimple ,error ){_abaad :=_ddfc (_fbge );_abaad ._gbbe =_bebga ;if _bebga ==nil {_eeafb :=_adad .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _eeafb ==nil {_eeafb =_cc .MakeInteger (0);
};_abaad .FirstChar =_eeafb ;_ccda ,_eeeg :=_cc .GetIntVal (_eeafb );if !_eeeg {_df .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_eeafb );
return nil ,_cc .ErrTypeError ;};_ebcdf :=_cbf .CharCode (_ccda );_eeafb =_adad .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _eeafb ==nil {_eeafb =_cc .MakeInteger (255);};_abaad .LastChar =_eeafb ;_ccda ,_eeeg =_cc .GetIntVal (_eeafb );
if !_eeeg {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_eeafb );return nil ,_cc .ErrTypeError ;
};_fdbeg :=_cbf .CharCode (_ccda );_abaad ._fdcc =make (map[_cbf .CharCode ]float64 );_eeafb =_adad .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _eeafb !=nil {_abaad .Widths =_eeafb ;_adca ,_ffgg :=_cc .GetArray (_eeafb );if !_ffgg {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_eeafb );
return nil ,_cc .ErrTypeError ;};_aeaea ,_fdgfd :=_adca .ToFloat64Array ();if _fdgfd !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_fdgfd ;};if len (_aeaea )!=int (_fdbeg -_ebcdf +1){_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_fdbeg -_ebcdf +1,len (_aeaea ));
return nil ,_cc .ErrRangeError ;};for _gcgef ,_bebca :=range _aeaea {_abaad ._fdcc [_ebcdf +_cbf .CharCode (_gcgef )]=_bebca ;};};};_abaad .Encoding =_cc .TraceToDirectObject (_adad .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _abaad ,nil ;
};func (_bgfgd *PdfReader )traverseObjectData (_eacae _cc .PdfObject )error {return _cc .ResolveReferencesDeep (_eacae ,_bgfgd ._gcfcc );};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// GetContainingPdfObject implements interface PdfModel.
func (_cafdfg *PdfFilespec )GetContainingPdfObject ()_cc .PdfObject {return _cafdfg ._adeca };

// FileRelationship represents a attachment file relationship type.
type FileRelationship int ;

// IsValid checks if the given pdf output intent type is valid.
func (_fbbde PdfOutputIntentType )IsValid ()bool {return _fbbde >=PdfOutputIntentTypeA1 &&_fbbde <=PdfOutputIntentTypeX ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _cc .PdfObject )(_cc .PdfObjectName ,error ){var _ggge *_cc .PdfObjectName ;var _dfbe *_cc .PdfObjectArray ;if _gfbdg ,_fcgd :=obj .(*_cc .PdfIndirectObject );_fcgd {if _adgf ,_bgdb :=_gfbdg .PdfObject .(*_cc .PdfObjectArray );
_bgdb {_dfbe =_adgf ;}else if _abad ,_accd :=_gfbdg .PdfObject .(*_cc .PdfObjectName );_accd {_ggge =_abad ;};}else if _fdaa ,_afgf :=obj .(*_cc .PdfObjectArray );_afgf {_dfbe =_fdaa ;}else if _ccad ,_cdec :=obj .(*_cc .PdfObjectName );_cdec {_ggge =_ccad ;
};if _ggge !=nil {switch *_ggge {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_ggge ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_ggge ,nil ;
};};if _dfbe !=nil &&_dfbe .Len ()> 0{if _gcag ,_aecf :=_dfbe .Get (0).(*_cc .PdfObjectName );_aecf {switch *_gcag {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _dfbe .Len ()==1{return *_gcag ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_gcag ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_gcag ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_gcag ,nil ;};};};return "",nil ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_gagb *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_cadag *PdfSignature )GetDocMDPPermission ()(_fd .DocMDPPermission ,bool ){for _ ,_edged :=range _cadag .Reference .Elements (){if _bbge ,_afaee :=_cc .GetDict (_edged );_afaee {if _bfgae ,_aebbf :=_cc .GetNameVal (_bbge .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_aebbf &&_bfgae =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _gbaac ,_gbeebe :=_cc .GetDict (_bbge .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_gbeebe {if P ,_cfbfb :=_cc .GetIntVal (_gbaac .Get ("\u0050"));
_cfbfb {return _fd .DocMDPPermission (P ),true ;};};};};};return 0,false ;};func _cdgf (_eeac *_cc .PdfObjectStream )(*PdfFunctionType0 ,error ){_cfbff :=&PdfFunctionType0 {};_cfbff ._aaba =_eeac ;_daagdd :=_eeac .PdfObjectDictionary ;_deccf ,_cfafd :=_cc .TraceToDirectObject (_daagdd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cc .PdfObjectArray );
if !_cfafd {_df .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ede .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _deccf .Len ()< 0||_deccf .Len ()%2!=0{_df .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ede .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_cfbff .NumInputs =_deccf .Len ()/2;_eafdfe ,_fdbef :=_deccf .ToFloat64Array ();if _fdbef !=nil {return nil ,_fdbef ;};_cfbff .Domain =_eafdfe ;_deccf ,_cfafd =_cc .TraceToDirectObject (_daagdd .Get ("\u0052\u0061\u006eg\u0065")).(*_cc .PdfObjectArray );
if !_cfafd {_df .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_ede .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _deccf .Len ()< 0||_deccf .Len ()%2!=0{return nil ,_ede .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_cfbff .NumOutputs =_deccf .Len ()/2;_bccbf ,_fdbef :=_deccf .ToFloat64Array ();if _fdbef !=nil {return nil ,_fdbef ;
};_cfbff .Range =_bccbf ;_deccf ,_cfafd =_cc .TraceToDirectObject (_daagdd .Get ("\u0053\u0069\u007a\u0065")).(*_cc .PdfObjectArray );if !_cfafd {_df .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_ede .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_gabea ,_fdbef :=_deccf .ToIntegerArray ();
if _fdbef !=nil {return nil ,_fdbef ;};if len (_gabea )!=_cfbff .NumInputs {_df .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_ede .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfbff .Size =_gabea ;_deebg ,_cfafd :=_cc .TraceToDirectObject (_daagdd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_cc .PdfObjectInteger );
if !_cfafd {_df .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_ede .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_deebg !=1&&*_deebg !=2&&*_deebg !=4&&*_deebg !=8&&*_deebg !=12&&*_deebg !=16&&*_deebg !=24&&*_deebg !=32{_df .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_deebg );
return nil ,_ede .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfbff .BitsPerSample =int (*_deebg );_cfbff .Order =1;_agaeg ,_cfafd :=_cc .TraceToDirectObject (_daagdd .Get ("\u004f\u0072\u0064e\u0072")).(*_cc .PdfObjectInteger );
if _cfafd {if *_agaeg !=1&&*_agaeg !=3{_df .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_agaeg );return nil ,_ede .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfbff .Order =int (*_agaeg );
};_deccf ,_cfafd =_cc .TraceToDirectObject (_daagdd .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_cc .PdfObjectArray );if _cfafd {_gfcae ,_eecfae :=_deccf .ToFloat64Array ();if _eecfae !=nil {return nil ,_eecfae ;};_cfbff .Encode =_gfcae ;};_deccf ,_cfafd =_cc .TraceToDirectObject (_daagdd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_cc .PdfObjectArray );
if _cfafd {_aacfa ,_addc :=_deccf .ToFloat64Array ();if _addc !=nil {return nil ,_addc ;};_cfbff .Decode =_aacfa ;};_gabfb ,_fdbef :=_cc .DecodeStream (_eeac );if _fdbef !=nil {return nil ,_fdbef ;};_cfbff ._cfea =_gabfb ;return _cfbff ,nil ;};func _gagc (_bafg _cc .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_gefaa :=&PdfColorspaceDeviceNAttributes {};
var _ffaec *_cc .PdfObjectDictionary ;switch _agee :=_bafg .(type ){case *_cc .PdfIndirectObject :_gefaa ._efaeb =_agee ;var _fdac bool ;_ffaec ,_fdac =_agee .PdfObject .(*_cc .PdfObjectDictionary );if !_fdac {_df .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_ede .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_cc .PdfObjectDictionary :_ffaec =_agee ;case *_cc .PdfObjectReference :_dadd :=_agee .Resolve ();return _gagc (_dadd );default:_df .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_ede .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _aggb :=_ffaec .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_aggb !=nil {_eaffg ,_beadc :=_cc .TraceToDirectObject (_aggb ).(*_cc .PdfObjectName );if !_beadc {_df .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_ede .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_gefaa .Subtype =_eaffg ;};if _caadf :=_ffaec .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_caadf !=nil {_gefaa .Colorants =_caadf ;};if _gfbe :=_ffaec .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_gfbe !=nil {_gefaa .Process =_gfbe ;};if _baaf :=_ffaec .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_baaf !=nil {_gefaa .MixingHints =_baaf ;};return _gefaa ,nil ;};func (_bgaca *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _gcbdg []*PdfFieldSignature ;
for _ ,_geacd :=range _bgaca .AllFields (){switch _cddee :=_geacd .GetContext ().(type ){case *PdfFieldSignature :_efef :=_cddee ;_gcbdg =append (_gcbdg ,_efef );};};return _gcbdg ;};

// AddCRLs adds CRLs to DSS.
func (_bdbb *DSS )AddCRLs (crls [][]byte )([]*_cc .PdfObjectStream ,error ){return _bdbb .add (&_bdbb .CRLs ,_bdbb ._agcb ,crls );};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_aegg *PdfPattern )GetContext ()PdfModel {return _aegg ._dfcbb };

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_fbe :=NewPdfAnnotation ();_egg :=&PdfAnnotationHighlight {};_egg .PdfAnnotation =_fbe ;_egg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fbe .SetContext (_egg );return _egg ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_cgbd *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_cgbd .HiVal )};};

// PdfColorPatternType3 represents a color shading pattern type 3 (Radial).
type PdfColorPatternType3 struct{Color PdfColor ;PatternName _cc .PdfObjectName ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_ddefg *PdfPattern )GetContainingPdfObject ()_cc .PdfObject {return _ddefg ._ecegf };

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_gcgg :=PdfWriter {};_gcgg ._abbbc =map[_cc .PdfObject ]struct{}{};_gcgg ._gedfdc =[]_cc .PdfObject {};_gcgg ._fgebe =map[_cc .PdfObject ][]*_cc .PdfObjectDictionary {};_gcgg ._adgcd =map[_cc .PdfObject ]struct{}{};_gcgg ._gfgfa .Major =1;
_gcgg ._gfgfa .Minor =3;_gfgac :=_cc .MakeDict ();_ebaef :=[]struct{_fdddb _cc .PdfObjectName ;_gdcfd string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_adbade ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_ebfcf ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_aeacd ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_fdaad ()},{"\u0054\u0069\u0074l\u0065",_gafge ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_eccde ()}};
for _ ,_fbddb :=range _ebaef {if _fbddb ._gdcfd !=""{_gfgac .Set (_fbddb ._fdddb ,_cc .MakeString (_fbddb ._gdcfd ));};};if _efeg :=_fffg ();!_efeg .IsZero (){if _cgdd ,_cdabe :=NewPdfDateFromTime (_efeg );_cdabe ==nil {_gfgac .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_cgdd .ToPdfObject ());
};};if _ffbbe :=_gccgc ();!_ffbbe .IsZero (){if _gbcd ,_cgbba :=NewPdfDateFromTime (_ffbbe );_cgbba ==nil {_gfgac .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_gbcd .ToPdfObject ());};};_adebf :=_cc .PdfIndirectObject {};_adebf .PdfObject =_gfgac ;_gcgg ._egdc =&_adebf ;
_gcgg .addObject (&_adebf );_fagaf :=_cc .PdfIndirectObject {};_ccfd :=_cc .MakeDict ();_ccfd .Set ("\u0054\u0079\u0070\u0065",_cc .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_fagaf .PdfObject =_ccfd ;_gcgg ._fedec =&_fagaf ;_gcgg .addObject (_gcgg ._fedec );
_gfgge ,_aedgc :=_acef ("\u0077");if _aedgc !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aedgc );};_gcgg ._gbace =_gfgge ;_ccfa :=_cc .PdfIndirectObject {};_fedee :=_cc .MakeDict ();_fedee .Set ("\u0054\u0079\u0070\u0065",_cc .MakeName ("\u0050\u0061\u0067e\u0073"));
_gdgce :=_cc .PdfObjectArray {};_fedee .Set ("\u004b\u0069\u0064\u0073",&_gdgce );_fedee .Set ("\u0043\u006f\u0075n\u0074",_cc .MakeInteger (0));_ccfa .PdfObject =_fedee ;_gcgg ._aacbd =&_ccfa ;_gcgg ._bbegb =map[_cc .PdfObject ]struct{}{};_gcgg .addObject (_gcgg ._aacbd );
_ccfd .Set ("\u0050\u0061\u0067e\u0073",&_ccfa );_gcgg ._feff =_ccfd ;_df .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_fagaf );return _gcgg ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_bbdgb *PdfPage )GetAllContentStreams ()(string ,error ){_dadbg ,_gbeeb :=_bbdgb .GetContentStreams ();if _gbeeb !=nil {return "",_gbeeb ;};return _fa .Join (_dadbg ,"\u0020"),nil ;};func _acef (_aefeb string )(string ,error ){var _eccab _aac .Buffer ;
_eccab .WriteString (_aefeb );_dafbcc :=make ([]byte ,8+16);_cagcd :=_b .Now ().UTC ().UnixNano ();_g .BigEndian .PutUint64 (_dafbcc ,uint64 (_cagcd ));_ ,_eceaf :=_da .Read (_dafbcc [8:]);if _eceaf !=nil {return "",_eceaf ;};_eccab .WriteString (_db .EncodeToString (_dafbcc ));
return _eccab .String (),nil ;};func _cfce (_adgce *[]*PdfField ,_ggefgf FieldFilterFunc ,_fdea bool )[]*PdfField {if _adgce ==nil {return nil ;};_deggg :=*_adgce ;if len (*_adgce )==0{return nil ;};_gadg :=_deggg [:0];if _ggefgf ==nil {_ggefgf =func (*PdfField )bool {return true };
};var _gbga []*PdfField ;for _ ,_cbac :=range _deggg {_degf :=_ggefgf (_cbac );if _degf {_gbga =append (_gbga ,_cbac );if len (_cbac .Kids )> 0{_gbga =append (_gbga ,_cfce (&_cbac .Kids ,_ggefgf ,_fdea )...);};};if !_fdea ||!_degf ||len (_cbac .Kids )> 0{_gadg =append (_gadg ,_cbac );
};};*_adgce =_gadg ;return _gbga ;};func (_ccg *PdfReader )newPdfAnnotationSquigglyFromDict (_dge *_cc .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_eagf :=PdfAnnotationSquiggly {};_dagb ,_dfba :=_ccg .newPdfAnnotationMarkupFromDict (_dge );if _dfba !=nil {return nil ,_dfba ;
};_eagf .PdfAnnotationMarkup =_dagb ;_eagf .QuadPoints =_dge .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_eagf ,nil ;};

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_cc .PdfObjectString ;Q *_cc .PdfObjectInteger ;DS *_cc .PdfObjectString ;RV _cc .PdfObject ;};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_cggd *PdfReader )GetCatalogMarkInfo ()(_cc .PdfObject ,bool ){if _cggd ._gfed ==nil {return nil ,false ;};_egeba :=_cggd ._gfed .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _egeba ,_egeba !=nil ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_ceag *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _ceag ._dfcbb .(*PdfShadingPattern );};

// Write writes out the PDF.
func (_acabf *PdfWriter )Write (writer _cd .Writer )error {_df .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_cdggb :=_acabf .checkLicense ();if _cdggb !=nil {return _cdggb ;};if _cdggb =_acabf .writeOutlines ();_cdggb !=nil {return _cdggb ;};if _cdggb =_acabf .writeAcroFormFields ();
_cdggb !=nil {return _cdggb ;};if _cdggb =_acabf .writeNamesDictionary ();_cdggb !=nil {return _cdggb ;};_acabf .checkPendingObjects ();if _cdggb =_acabf .writeOutputIntents ();_cdggb !=nil {return _cdggb ;};_acabf .setCatalogVersion ();_acabf .copyObjects ();
if _cdggb =_acabf .optimize ();_cdggb !=nil {return _cdggb ;};if _cdggb =_acabf .optimizeDocument ();_cdggb !=nil {return _cdggb ;};var _cbcgag _a .Hash ;if _acabf ._bafa {_cbcgag =_bf .New ();writer =_cd .MultiWriter (_cbcgag ,writer );};_acabf .setWriter (writer );
_febcf :=_acabf .checkCrossReferenceStream ();_dfegc ,_febcf :=_acabf .mapObjectStreams (_febcf );_acabf .adjustXRefAffectedVersion (_febcf );_acabf .writeDocumentVersion ();_acabf .updateObjectNumbers ();_acabf .writeObjects ();if _cdggb =_acabf .writeObjectsInStreams (_dfegc );
_cdggb !=nil {return _cdggb ;};_acdb :=_acabf ._edgfea ;var _bgde int ;for _egdbe :=range _acabf ._faff {if _egdbe > _bgde {_bgde =_egdbe ;};};if _acabf ._bafa {if _cdggb =_acabf .setHashIDs (_cbcgag );_cdggb !=nil {return _cdggb ;};};if _febcf {if _cdggb =_acabf .writeXRefStreams (_bgde ,_acdb );
_cdggb !=nil {return _cdggb ;};}else {_acabf .writeTrailer (_bgde );};_acabf .makeOffSetReference (_acdb );if _cdggb =_acabf .flushWriter ();_cdggb !=nil {return _cdggb ;};return nil ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _cc .PdfObject ;BS _cc .PdfObject ;};

// GetPdfInfo returns the PDF info dictionary.
func (_bgffc *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_egdga ,_dfcfg :=_bgffc .GetTrailer ();if _dfcfg !=nil {return nil ,_dfcfg ;};var _bfcab *_cc .PdfObjectDictionary ;_bfge :=_egdga .Get ("\u0049\u006e\u0066\u006f");switch _ggebdd :=_bfge .(type ){case *_cc .PdfObjectReference :_bffec :=_ggebdd ;
_bfge ,_dfcfg =_bgffc .GetIndirectObjectByNumber (int (_bffec .ObjectNumber ));_bfge =_cc .TraceToDirectObject (_bfge );if _dfcfg !=nil {return nil ,_dfcfg ;};_bfcab ,_ =_bfge .(*_cc .PdfObjectDictionary );case *_cc .PdfObjectDictionary :_bfcab =_ggebdd ;
};if _bfcab ==nil {return nil ,_ede .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_ccgga ,_dfcfg :=NewPdfInfoFromObject (_bfcab );if _dfcfg !=nil {return nil ,_dfcfg ;
};return _ccgga ,nil ;};

// R returns the value of the red component of the color.
func (_adfa *PdfColorDeviceRGB )R ()float64 {return _adfa [0]};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_ggec pdfFont };

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_aggda :=&PdfPageResources {};_aggda ._bggcc =_cc .MakeDict ();return _aggda ;};func (_abgf *PdfWriter )mapObjectStreams (_ddadg bool )(map[_cc .PdfObject ]bool ,bool ){_gedgbd :=make (map[_cc .PdfObject ]bool );
for _ ,_cgedf :=range _abgf ._gedfdc {if _fcbb ,_cdgeg :=_cgedf .(*_cc .PdfObjectStreams );_cdgeg {_ddadg =true ;for _ ,_effbb :=range _fcbb .Elements (){_gedgbd [_effbb ]=true ;if _fdag ,_bfeggf :=_effbb .(*_cc .PdfIndirectObject );_bfeggf {_gedgbd [_fdag .PdfObject ]=true ;
};};};};return _gedgbd ,_ddadg ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_eggd *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _eggd .AlternateSpace ==nil {return nil ,_ede .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _eggd .AlternateSpace .ColorToRGB (color );};

// GetOptimizer returns current PDF optimizer.
func (_gbeaf *PdfWriter )GetOptimizer ()Optimizer {return _gbeaf ._cbgef };func _gfdgc ()*modelManager {_aecab :=modelManager {};_aecab ._ffbae =map[PdfModel ]_cc .PdfObject {};_aecab ._cffdf =map[_cc .PdfObject ]PdfModel {};return &_aecab ;};var _ pdfFont =(*pdfFontSimple )(nil );


// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// PdfShadingPatternType2 is shading patterns that will use a Type 2 shading pattern (Axial).
type PdfShadingPatternType2 struct{*PdfPattern ;Shading *PdfShadingType2 ;Matrix *_cc .PdfObjectArray ;ExtGState _cc .PdfObject ;};

// HasFontByName checks if has font resource by name.
func (_fcbc *PdfPage )HasFontByName (name _cc .PdfObjectName )bool {_dadac ,_eccbb :=_fcbc .Resources .Font .(*_cc .PdfObjectDictionary );if !_eccbb {return false ;};if _ecceec :=_dadac .Get (name );_ecceec !=nil {return true ;};return false ;};

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_cdbbf :=Permissions {};_cdbbf .DocMDP =docMdp ;_cfdcb :=_cc .MakeDict ();_cfdcb .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_cdbbf ._gadeg =_cfdcb ;return &_cdbbf ;};

// ToPdfObject returns the PDF representation of the function.
func (_agbe *PdfFunctionType4 )ToPdfObject ()_cc .PdfObject {_fggfe :=_agbe ._fded ;if _fggfe ==nil {_agbe ._fded =&_cc .PdfObjectStream {};_fggfe =_agbe ._fded ;};_adcce :=_cc .MakeDict ();_adcce .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cc .MakeInteger (4));
_ceecf :=&_cc .PdfObjectArray {};for _ ,_gfgg :=range _agbe .Domain {_ceecf .Append (_cc .MakeFloat (_gfgg ));};_adcce .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ceecf );_deab :=&_cc .PdfObjectArray {};for _ ,_cegbf :=range _agbe .Range {_deab .Append (_cc .MakeFloat (_cegbf ));
};_adcce .Set ("\u0052\u0061\u006eg\u0065",_deab );if _agbe ._bgee ==nil &&_agbe .Program !=nil {_agbe ._bgee =[]byte (_agbe .Program .String ());};_adcce .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cc .MakeInteger (int64 (len (_agbe ._bgee ))));_fggfe .Stream =_agbe ._bgee ;
_fggfe .PdfObjectDictionary =_adcce ;return _fggfe ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_agbec :=&PdfOutline {_acadc :_cc .MakeIndirectObject (_cc .MakeDict ())};_agbec ._efbcf =_agbec ;return _agbec ;};

// SetContentStream sets the pattern cell's content stream.
func (_fgada *PdfTilingPattern )SetContentStream (content []byte ,encoder _cc .StreamEncoder )error {_fddd ,_bggab :=_fgada ._ecegf .(*_cc .PdfObjectStream );if !_bggab {_df .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fgada ._ecegf );
return _cc .ErrTypeError ;};if encoder ==nil {encoder =_cc .NewRawEncoder ();};_fabbd :=_fddd .PdfObjectDictionary ;_eagcg :=encoder .MakeStreamDict ();_fabbd .Merge (_eagcg );_ebecg ,_dgdcd :=encoder .EncodeBytes (content );if _dgdcd !=nil {return _dgdcd ;
};_fabbd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cc .MakeInteger (int64 (len (_ebecg ))));_fddd .Stream =_ebecg ;return nil ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _cc .PdfObject )(*PdfOutputIntent ,error ){_eadad :=&PdfOutputIntent {};if _gagdc :=_eadad .ParsePdfObject (object );_gagdc !=nil {return nil ,_gagdc ;};return _eadad ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_acga *PdfAnnotationLine )ToPdfObject ()_cc .PdfObject {_acga .PdfAnnotation .ToPdfObject ();_ddcd :=_acga ._cef ;_geae :=_ddcd .PdfObject .(*_cc .PdfObjectDictionary );_acga .PdfAnnotationMarkup .appendToPdfDictionary (_geae );_geae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u004c\u0069\u006e\u0065"));
_geae .SetIfNotNil ("\u004c",_acga .L );_geae .SetIfNotNil ("\u0042\u0053",_acga .BS );_geae .SetIfNotNil ("\u004c\u0045",_acga .LE );_geae .SetIfNotNil ("\u0049\u0043",_acga .IC );_geae .SetIfNotNil ("\u004c\u004c",_acga .LL );_geae .SetIfNotNil ("\u004c\u004c\u0045",_acga .LLE );
_geae .SetIfNotNil ("\u0043\u0061\u0070",_acga .Cap );_geae .SetIfNotNil ("\u0049\u0054",_acga .IT );_geae .SetIfNotNil ("\u004c\u004c\u004f",_acga .LLO );_geae .SetIfNotNil ("\u0043\u0050",_acga .CP );_geae .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_acga .Measure );
_geae .SetIfNotNil ("\u0043\u004f",_acga .CO );return _ddcd ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_dgaag *PdfOutlineTreeNode )GetContext ()PdfModel {if _ddedc ,_fbebd :=_dgaag ._efbcf .(*PdfOutline );_fbebd {return _ddedc ;};if _dced ,_eegc :=_dgaag ._efbcf .(*PdfOutlineItem );_eegc {return _dced ;};_df .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;PageProcessCallback PageProcessCallback ;


// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};func _afbc (_adag *_cc .PdfObjectDictionary ){_cfbea ,_fcfef :=_cc .GetArray (_adag .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));_efcb ,_feeed :=_cc .GetIntVal (_adag .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));
_aaebe ,_fdbg :=_cc .GetIntVal (_adag .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _fcfef &&_feeed &&_fdbg {_defc :=_cfbea .Len ();if _defc !=_aaebe -_efcb +1{_df .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_defc ,_aaebe );
_efdb :=_cc .PdfObjectInteger (_efcb +_defc -1);_adag .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_efdb );};};};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_gcfcc :map[_cc .PdfObject ]struct{}{},_ecbgec :_gfdgc (),_bbed :_cc .NewParserFromString (txt )};};func (_begba *PdfPage )setContainer (_gbgdd *_cc .PdfIndirectObject ){_gbgdd .PdfObject =_begba ._gcead ;
_begba ._bfgcg =_gbgdd ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_ecedg *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _ecedg .flattenFieldsWithOpts (false ,appgen ,opts );};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_gde :=NewPdfAnnotation ();_egf :=&PdfAnnotationMovie {};_egf .PdfAnnotation =_gde ;_gde .SetContext (_egf );return _egf ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_egfb *PdfAppender )Write (w _cd .Writer )error {if _egfb ._facf {return _ede .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_afcd :=NewPdfWriter ();_bcag ,_eee :=_cc .GetDict (_afcd ._aacbd );if !_eee {return _ede .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_bab ,_eee :=_bcag .Get ("\u004b\u0069\u0064\u0073").(*_cc .PdfObjectArray );if !_eee {return _ede .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_gbdb ,_eee :=_bcag .Get ("\u0043\u006f\u0075n\u0074").(*_cc .PdfObjectInteger );if !_eee {return _ede .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_fcgc :=_egfb ._eaeg ._bbed ;_bfba :=_fcgc .GetTrailer ();if _bfba ==nil {return _ede .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_geaeb ,_eee :=_cc .GetIndirect (_bfba .Get ("\u0052\u006f\u006f\u0074"));
if !_eee {return _ede .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_ffce ,_eee :=_cc .GetDict (_geaeb );if !_eee {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_geaeb ,*_bfba );
return _ede .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_fbgf :=false ;for _ ,_cccbg :=range _egfb ._eaeg .AcroForm .signatureFields (){if _cccbg .Lock !=nil {_fbgf =true ;break ;};};if _fbgf {_afcd ._fedec =_geaeb ;
};for _ ,_abga :=range _ffce .Keys (){if _afcd ._feff .Get (_abga )==nil {_deca :=_ffce .Get (_abga );_afcd ._feff .Set (_abga ,_deca );};};if _egfb ._efeb !=nil {if _egfb ._efeb ._caadg {if _agdd :=_cc .TraceToDirectObject (_egfb ._efeb .ToPdfObject ());
!_cc .IsNullObject (_agdd ){_afcd ._feff .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_agdd );_egfb .updateObjectsDeep (_agdd ,nil );}else {_df .Log .Debug ("\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020t\u0072\u0061\u0063e\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020o\u0062\u006a\u0065\u0063\u0074, \u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0061\u0064\u0064\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u002e");
};}else {_afcd ._feff .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_egfb ._efeb .ToPdfObject ());_egfb .updateObjectsDeep (_egfb ._efeb .ToPdfObject (),nil );};};if _egfb ._gbfd !=nil {_egfb .updateObjectsDeep (_egfb ._gbfd .ToPdfObject (),nil );
_afcd ._feff .Set ("\u0044\u0053\u0053",_egfb ._gbfd .GetContainingPdfObject ());};if _egfb ._fdg !=nil {_afcd ._feff .Set ("\u0050\u0065\u0072m\u0073",_egfb ._fdg .ToPdfObject ());_egfb .updateObjectsDeep (_egfb ._fdg .ToPdfObject (),nil );};if _afcd ._gfgfa .Major < 2{_afcd .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_afcd .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _befb ,_dgbg :=_cc .GetDict (_bfba .Get ("\u0049\u006e\u0066\u006f"));_dgbg {if _bdaf ,_agge :=_cc .GetDict (_afcd ._egdc );_agge {for _ ,_egcb :=range _befb .Keys (){if _bdaf .Get (_egcb )==nil {_bdaf .Set (_egcb ,_befb .Get (_egcb ));
};};};};if _egfb ._feb !=nil {_afcd ._egdc =_cc .MakeIndirectObject (_egfb ._feb .ToPdfObject ());};_egfb .updateObjectsDeep (_afcd ._egdc ,nil );_egfb .updateObjectsDeep (_afcd ._fedec ,nil );_aedad :=false ;if len (_egfb ._eaeg .PageList )!=len (_egfb ._dfaa ){_aedad =true ;
}else {for _edafa :=range _egfb ._eaeg .PageList {switch {case _egfb ._dfaa [_edafa ]==_egfb ._eaeg .PageList [_edafa ]:case _egfb ._dfaa [_edafa ]==_egfb .Reader .PageList [_edafa ]:default:_aedad =true ;};if _aedad {break ;};};};if _aedad {_egfb .updateObjectsDeep (_afcd ._aacbd ,nil );
}else {_egfb ._fbfa [_afcd ._aacbd ]=struct{}{};};_afcd ._aacbd .ObjectNumber =_egfb .Reader ._daddc .ObjectNumber ;_egfb ._gbdc [_afcd ._aacbd ]=_egfb .Reader ._daddc .ObjectNumber ;_gggg :=[]_cc .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
for _ ,_fcda :=range _egfb ._dfaa {_bce :=_fcda .ToPdfObject ();*_gbdb =*_gbdb +1;if _ffea ,_eafdf :=_bce .(*_cc .PdfIndirectObject );_eafdf &&_ffea .GetParser ()==_egfb ._eaeg ._bbed {_bab .Append (&_ffea .PdfObjectReference );continue ;};if _fdf ,_cbfe :=_cc .GetDict (_bce );
_cbfe {_bfee ,_ggbd :=_fdf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_cc .PdfIndirectObject );for _ggbd {_df .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_bfee );_fffa ,_abgg :=_bfee .PdfObject .(*_cc .PdfObjectDictionary );
if !_abgg {return _ede .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_dcbg :=range _gggg {_df .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_dcbg );if _eecd :=_fdf .Get (_dcbg );
_eecd !=nil {_df .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");if len (_fcda ._gebd .Keys ())> 0&&!_aedad {_fbafd :=_fcda ._gebd ;if _dcdc :=_fbafd .Get (_dcbg );_dcdc !=nil {if _eecd !=_dcdc {_df .Log .Trace ("\u0049\u006e\u0068\u0065\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u006f\u0072\u0069\u0067i\u006ea\u006c\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073\u002c\u0020\u0025\u0054",_dcbg ,_dcdc );
_fdf .Set (_dcbg ,_dcdc );};};};continue ;};if _gdgc :=_fffa .Get (_dcbg );_gdgc !=nil {_df .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_dcbg );_fdf .Set (_dcbg ,_gdgc );};};_bfee ,_ggbd =_fffa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_cc .PdfIndirectObject );
_df .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_fffa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};if _aedad {_fdf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_afcd ._aacbd );};};_egfb .updateObjectsDeep (_bce ,nil );
_bab .Append (_bce );};if _ ,_acab :=_egfb ._bffe .Seek (0,_cd .SeekStart );_acab !=nil {return _acab ;};_ddba :=make (map[SignatureHandler ]_cd .Writer );_bffd :=_cc .MakeArray ();for _ ,_eecdg :=range _egfb ._bcdd {if _dgec ,_cbee :=_cc .GetIndirect (_eecdg );
_cbee {if _ebba ,_bcddf :=_dgec .PdfObject .(*pdfSignDictionary );_bcddf {_ddeb :=*_ebba ._bdfg ;var _edce error ;_ddba [_ddeb ],_edce =_ddeb .NewDigest (_ebba ._fdeef );if _edce !=nil {return _edce ;};_bffd .Append (_cc .MakeInteger (0xfffff),_cc .MakeInteger (0xfffff));
};};};if _bffd .Len ()> 0{_bffd .Append (_cc .MakeInteger (0xfffff),_cc .MakeInteger (0xfffff));};for _ ,_abgab :=range _egfb ._bcdd {if _ecgb ,_abge :=_cc .GetIndirect (_abgab );_abge {if _bdb ,_cbec :=_ecgb .PdfObject .(*pdfSignDictionary );_cbec {_bdb .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_bffd );
};};};_fffd :=len (_ddba )> 0;var _aff _cd .Reader =_egfb ._bffe ;if _fffd {_eccfg :=make ([]_cd .Writer ,0,len (_ddba ));for _ ,_daafe :=range _ddba {_eccfg =append (_eccfg ,_daafe );};_aff =_cd .TeeReader (_egfb ._bffe ,_cd .MultiWriter (_eccfg ...));
};_cbeg ,_cgaf :=_cd .Copy (w ,_aff );if _cgaf !=nil {return _cgaf ;};if len (_egfb ._bcdd )==0{return nil ;};_afcd ._cgfda =_cbeg ;_afcd .ObjNumOffset =_egfb ._dbf ;_afcd ._dfeeg =true ;_afcd ._gddc =_egfb ._eafdg ;_afcd ._adged =_egfb ._agg ;_afcd ._beda =_egfb ._eddf ;
_afcd ._gfgfa =_egfb ._eaeg .PdfVersion ();_afcd ._dcacf =_egfb ._gbdc ;_afcd ._acebb =_egfb ._cafa .GetCrypter ();_afcd ._acged =_egfb ._cafa .GetEncryptObj ();_badb :=_egfb ._cafa .GetXrefType ();if _badb !=nil {_gcbfaa :=*_badb ==_cc .XrefTypeObjectStream ;
_afcd ._bddag =&_gcbfaa ;};_afcd ._abbbc =map[_cc .PdfObject ]struct{}{};_afcd ._gedfdc =[]_cc .PdfObject {};for _ ,_cgab :=range _egfb ._bcdd {if _ ,_adbc :=_egfb ._fbfa [_cgab ];_adbc {continue ;};_afcd .addObject (_cgab );};_gaee :=w ;if _fffd {_gaee =_aac .NewBuffer (nil );
};if _egfb ._dca !=""&&_afcd ._acebb ==nil {_afcd .Encrypt ([]byte (_egfb ._dca ),[]byte (_egfb ._dca ),_egfb ._ecbdg );};if _gebe :=_bfba .Get ("\u0049\u0044");_gebe !=nil {if _bceb ,_fafe :=_cc .GetArray (_gebe );_fafe {_afcd ._gacge =_bceb ;};};if _gcgc :=_afcd .Write (_gaee );
_gcgc !=nil {return _gcgc ;};if _fffd {_ddag :=_gaee .(*_aac .Buffer ).Bytes ();_bfdg :=_cc .MakeArray ();var _geec []*pdfSignDictionary ;var _bfea int64 ;for _ ,_bacc :=range _afcd ._gedfdc {if _ceed ,_afgg :=_cc .GetIndirect (_bacc );_afgg {if _ebgb ,_ebc :=_ceed .PdfObject .(*pdfSignDictionary );
_ebc {_geec =append (_geec ,_ebgb );_gcbb :=_ebgb ._cfcfd +int64 (_ebgb ._eega );_bfdg .Append (_cc .MakeInteger (_bfea ),_cc .MakeInteger (_gcbb -_bfea ));_bfea =_ebgb ._cfcfd +int64 (_ebgb ._dggf );};};};_bfdg .Append (_cc .MakeInteger (_bfea ),_cc .MakeInteger (_cbeg +int64 (len (_ddag ))-_bfea ));
_acaa :=[]byte (_bfdg .WriteString ());for _ ,_cgac :=range _geec {_cbdd :=int (_cgac ._cfcfd -_cbeg );for _eabb :=_cgac ._gdcd ;_eabb < _cgac ._ddedcf ;_eabb ++{_ddag [_cbdd +_eabb ]=' ';};_abfd :=_ddag [_cbdd +_cgac ._gdcd :_cbdd +_cgac ._ddedcf ];copy (_abfd ,_acaa );
};var _eagc int ;for _ ,_adba :=range _geec {_cfed :=int (_adba ._cfcfd -_cbeg );_eacc :=_ddag [_eagc :_cfed +_adba ._eega ];_bccg :=*_adba ._bdfg ;_ddba [_bccg ].Write (_eacc );_eagc =_cfed +_adba ._dggf ;};for _ ,_edfg :=range _geec {_abac :=_ddag [_eagc :];
_efaef :=*_edfg ._bdfg ;_ddba [_efaef ].Write (_abac );};for _ ,_fadd :=range _geec {_fcde :=int (_fadd ._cfcfd -_cbeg );_dbgc :=*_fadd ._bdfg ;_bdfe :=_ddba [_dbgc ];if _fbebg :=_dbgc .Sign (_fadd ._fdeef ,_bdfe );_fbebg !=nil {return _fbebg ;};_fadd ._fdeef .ByteRange =_bfdg ;
_cgecb :=[]byte (_fadd ._fdeef .Contents .WriteString ());for _gcdg :=_fadd ._gdcd ;_gcdg < _fadd ._ddedcf ;_gcdg ++{_ddag [_fcde +_gcdg ]=' ';};for _afd :=_fadd ._eega ;_afd < _fadd ._dggf ;_afd ++{_ddag [_fcde +_afd ]=' ';};_affd :=_ddag [_fcde +_fadd ._gdcd :_fcde +_fadd ._ddedcf ];
copy (_affd ,_acaa );_affd =_ddag [_fcde +_fadd ._eega :_fcde +_fadd ._dggf ];copy (_affd ,_cgecb );};_gfcb :=_aac .NewBuffer (_ddag );_ ,_cgaf =_cd .Copy (w ,_gfcb );if _cgaf !=nil {return _cgaf ;};};_egfb ._facf =true ;return nil ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_egee *PdfPageResources )GetColorspaceByName (keyName _cc .PdfObjectName )(PdfColorspace ,bool ){_ddgg ,_aecea :=_egee .GetColorspaces ();if _aecea !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_aecea );
return nil ,false ;};if _ddgg ==nil {return nil ,false ;};_gdfba ,_abecg :=_ddgg .Colorspaces [string (keyName )];if !_abecg {return nil ,false ;};return _gdfba ,true ;};

// SetContext sets the sub annotation (context).
func (_dfbc *PdfAnnotation )SetContext (ctx PdfModel ){_dfbc ._fae =ctx };

// ToPdfObject returns a PDF object representation of the outline item.
func (_agdag *OutlineItem )ToPdfObject ()_cc .PdfObject {_acfab ,_ :=_agdag .ToPdfOutlineItem ();return _acfab .ToPdfObject ();};const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;
PdfOutputIntentTypeX ;);

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_begg *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_cc .PdfObject )(PdfColor ,error ){if len (objects )!=_begg .GetNumComponents (){return nil ,_ede .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_egda ,_fceb :=_cc .GetNumbersAsFloat (objects );
if _fceb !=nil {return nil ,_fceb ;};return _begg .ColorFromFloats (_egda );};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_fbga *Image )ConvertToBinary ()error {if _fbga .ColorComponents ==1&&_fbga .BitsPerComponent ==1{return nil ;};_aagad ,_aegd :=_fbga .ToGoImage ();if _aegd !=nil {return _aegd ;};_ddced ,_aegd :=_ec .MonochromeConverter .Convert (_aagad );if _aegd !=nil {return _aegd ;
};_fbga .Data =_ddced .Base ().Data ;_fbga ._ccee ,_aegd =_ec .ScaleAlphaToMonochrome (_fbga ._ccee ,int (_fbga .Width ),int (_fbga .Height ));if _aegd !=nil {return _aegd ;};_fbga .BitsPerComponent =1;_fbga .ColorComponents =1;_fbga ._aaaacg =nil ;return nil ;
};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_fdgg *Image )ColorAt (x ,y int )(_d .Color ,error ){_bdgaa :=_ec .BytesPerLine (int (_fdgg .Width ),int (_fdgg .BitsPerComponent ),_fdgg .ColorComponents );switch _fdgg .ColorComponents {case 1:return _ec .ColorAtGrayscale (x ,y ,int (_fdgg .BitsPerComponent ),_bdgaa ,_fdgg .Data ,_fdgg ._aaaacg );
case 3:return _ec .ColorAtNRGBA (x ,y ,int (_fdgg .Width ),_bdgaa ,int (_fdgg .BitsPerComponent ),_fdgg .Data ,_fdgg ._ccee ,_fdgg ._aaaacg );case 4:return _ec .ColorAtCMYK (x ,y ,int (_fdgg .Width ),_fdgg .Data ,_fdgg ._aaaacg );};_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fdgg .ColorComponents ,_fdgg .BitsPerComponent );
return nil ,_ede .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_eeef *PdfPageResources )HasColorspaceByName (keyName _cc .PdfObjectName )bool {_gfgb ,_adbb :=_eeef .GetColorspaces ();if _adbb !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_adbb );
return false ;};if _gfgb ==nil {return false ;};_ ,_aegef :=_gfgb .Colorspaces [string (keyName )];return _aegef ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_gaca ,_cfgc :=_aa .Open (filePath );if _cfgc !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_cfgc );
return nil ,_cfgc ;};defer _gaca .Close ();return NewPdfFontFromTTF (_gaca );};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_ccafd *PdfOutlineItem )ToPdfObject ()_cc .PdfObject {_adedc :=_ccafd ._bfdgf ;_caced :=_adedc .PdfObject .(*_cc .PdfObjectDictionary );_caced .Set ("\u0054\u0069\u0074l\u0065",_ccafd .Title );if _ccafd .A !=nil {_caced .Set ("\u0041",_ccafd .A );
};if _dgcdba :=_caced .Get ("\u0053\u0045");_dgcdba !=nil {_caced .Remove ("\u0053\u0045");};if _ccafd .C !=nil {_caced .Set ("\u0043",_ccafd .C );};if _ccafd .Dest !=nil {_caced .Set ("\u0044\u0065\u0073\u0074",_ccafd .Dest );};if _ccafd .F !=nil {_caced .Set ("\u0046",_ccafd .F );
};if _ccafd .Count !=nil {_caced .Set ("\u0043\u006f\u0075n\u0074",_cc .MakeInteger (*_ccafd .Count ));};if _ccafd .Next !=nil {_caced .Set ("\u004e\u0065\u0078\u0074",_ccafd .Next .ToPdfObject ());};if _ccafd .First !=nil {_caced .Set ("\u0046\u0069\u0072s\u0074",_ccafd .First .ToPdfObject ());
};if _ccafd .Prev !=nil {_caced .Set ("\u0050\u0072\u0065\u0076",_ccafd .Prev .GetContext ().GetContainingPdfObject ());};if _ccafd .Last !=nil {_caced .Set ("\u004c\u0061\u0073\u0074",_ccafd .Last .GetContext ().GetContainingPdfObject ());};if _ccafd .Parent !=nil {_caced .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ccafd .Parent .GetContext ().GetContainingPdfObject ());
};return _adedc ;};func (_fcff *PdfReader )newPdfAnnotationPolygonFromDict (_dcgc *_cc .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_begd :=PdfAnnotationPolygon {};_aaf ,_dage :=_fcff .newPdfAnnotationMarkupFromDict (_dcgc );if _dage !=nil {return nil ,_dage ;
};_begd .PdfAnnotationMarkup =_aaf ;_begd .Vertices =_dcgc .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_begd .LE =_dcgc .Get ("\u004c\u0045");_begd .BS =_dcgc .Get ("\u0042\u0053");_begd .IC =_dcgc .Get ("\u0049\u0043");_begd .BE =_dcgc .Get ("\u0042\u0045");
_begd .IT =_dcgc .Get ("\u0049\u0054");_begd .Measure =_dcgc .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_begd ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ebbfe *PdfShading )ToPdfObject ()_cc .PdfObject {_fcgebc :=_ebbfe ._ccfe ;_begec ,_aagagd :=_ebbfe .getShadingDict ();if _aagagd !=nil {_df .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ebbfe .ShadingType !=nil {_begec .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_ebbfe .ShadingType );};if _ebbfe .ColorSpace !=nil {_begec .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_ebbfe .ColorSpace .ToPdfObject ());
};if _ebbfe .Background !=nil {_begec .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_ebbfe .Background );};if _ebbfe .BBox !=nil {_begec .Set ("\u0042\u0042\u006f\u0078",_ebbfe .BBox .ToPdfObject ());};if _ebbfe .AntiAlias !=nil {_begec .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_ebbfe .AntiAlias );
};return _fcgebc ;};

// ToPdfObject implements interface PdfModel.
func (_eca *PdfActionGoTo )ToPdfObject ()_cc .PdfObject {_eca .PdfAction .ToPdfObject ();_fe :=_eca ._dae ;_gb :=_fe .PdfObject .(*_cc .PdfObjectDictionary );_gb .SetIfNotNil ("\u0053",_cc .MakeName (string (ActionTypeGoTo )));_gb .SetIfNotNil ("\u0044",_eca .D );
return _fe ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_bbfea *PdfOutline )GetContainingPdfObject ()_cc .PdfObject {return _bbfea ._acadc };

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _cc .PdfObject ;IsMap _cc .PdfObject ;};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _cd .ReadSeeker )(*CompliancePdfReader ,error ){const _aggc ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_fdfd ,_ebcd :=_dcbcbe (rs ,&ReaderOpts {ComplianceMode :true },false ,_aggc );
if _ebcd !=nil {return nil ,_ebcd ;};return &CompliancePdfReader {PdfReader :_fdfd },nil ;};func _ebfcf ()string {_aaefb .Lock ();defer _aaefb .Unlock ();if len (_abaf )> 0{return _abaf ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";
};

// Encoder returns the font's text encoder.
func (_dgbb *pdfFontSimple )Encoder ()_cbf .TextEncoder {if _dgbb ._fbed !=nil {return _dgbb ._fbed ;};if _dgbb ._gbbe !=nil {return _dgbb ._gbbe ;};_bfaf ,_ :=_cbf .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _bfaf ;};func _becc (_agaca *_cc .PdfObjectDictionary )*VRI {_cdbaa ,_ :=_cc .GetString (_agaca .Get ("\u0054\u0055"));_gdgcc ,_ :=_cc .GetString (_agaca .Get ("\u0054\u0053"));return &VRI {Cert :_gbeac (_agaca .Get ("\u0043\u0065\u0072\u0074")),OCSP :_gbeac (_agaca .Get ("\u004f\u0043\u0053\u0050")),CRL :_gbeac (_agaca .Get ("\u0043\u0052\u004c")),TU :_cdbaa ,TS :_gdgcc };
};

// GetCharMetrics returns the char metrics for character code `code`.
func (_adgbd pdfFontType0 )GetCharMetrics (code _cbf .CharCode )(_edg .CharMetrics ,bool ){if _adgbd .DescendantFont ==nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_adgbd );
return _edg .CharMetrics {},false ;};return _adgbd .DescendantFont .GetCharMetrics (code );};func (_fgcad *pdfCIDFontType0 )baseFields ()*fontCommon {return &_fgcad .fontCommon };

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_baab *PdfReader )GetOutlines ()(*Outline ,error ){if _baab ==nil {return nil ,_ede .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_efaca :=_baab .GetOutlineTree ();if _efaca ==nil {return nil ,_ede .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _dade func (_ccacb *PdfOutlineTreeNode ,_abedb *[]*OutlineItem );_dade =func (_bcacg *PdfOutlineTreeNode ,_bbgae *[]*OutlineItem ){if _bcacg ==nil {return ;};if _bcacg ._efbcf ==nil {_df .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _aeff *OutlineItem ;if _gafed ,_aeag :=_bcacg ._efbcf .(*PdfOutlineItem );_aeag {_dabc :=_gafed .Dest ;if (_dabc ==nil ||_cc .IsNullObject (_dabc ))&&_gafed .A !=nil {if _adgba ,_edec :=_cc .GetDict (_gafed .A );_edec {if _befef ,_fggee :=_cc .GetArray (_adgba .Get ("\u0044"));
_fggee {_dabc =_befef ;}else {_dagbc ,_gfbeb :=_cc .GetString (_adgba .Get ("\u0044"));if !_gfbeb {return ;};_cdga ,_gfbeb :=_baab ._gfed .Get ("\u004e\u0061\u006de\u0073").(*_cc .PdfObjectReference );if !_gfbeb {return ;};_ggacbd ,_dgddd :=_baab ._bbed .LookupByReference (*_cdga );
if _dgddd !=nil {_df .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_dgddd .Error ());
return ;};_bedc ,_gfbeb :=_ggacbd .(*_cc .PdfIndirectObject );if !_gfbeb {return ;};_dgbaa :=map[_cc .PdfObject ]struct{}{};_dgddd =_baab .buildNameNodes (_bedc ,_dgbaa );if _dgddd !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_dgddd .Error ());
return ;};for _bgff :=range _dgbaa {_afgga ,_effbag :=_cc .GetDict (_bgff );if !_effbag {continue ;};_gfade ,_effbag :=_cc .GetArray (_afgga .Get ("\u004e\u0061\u006de\u0073"));if !_effbag {continue ;};for _begff ,_ggfed :=range _gfade .Elements (){switch _ggfed .(type ){case *_cc .PdfObjectString :if _ggfed .String ()==_dagbc .String (){if _cfcbd :=_gfade .Get (_begff +1);
_cfcbd !=nil {if _gcde ,_gfbcb :=_cc .GetDict (_cfcbd );_gfbcb {_dabc =_gcde .Get ("\u0044");break ;};};};};};};};};};var _dgadd OutlineDest ;if _dabc !=nil &&!_cc .IsNullObject (_dabc ){if _gcdbe ,_eedabg :=_ebcb (_dabc ,_baab );_eedabg ==nil {_dgadd =*_gcdbe ;
}else {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_dabc ,_eedabg );
};};_aeff =NewOutlineItem (_gafed .Title .Decoded (),_dgadd );*_bbgae =append (*_bbgae ,_aeff );if _gafed .Next !=nil {_dade (_gafed .Next ,_bbgae );};};if _bcacg .First !=nil {if _aeff !=nil {_bbgae =&_aeff .Entries ;};_dade (_bcacg .First ,_bbgae );};
};_cagab :=NewOutline ();_dade (_efaca ,&_cagab .Entries );return _cagab ,nil ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_deacg *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _deacg .MediaBox !=nil {return _deacg .MediaBox ,nil ;};_eadbd :=_deacg .Parent ;for _eadbd !=nil {_caadd ,_eefgd :=_cc .GetDict (_eadbd );if !_eefgd {return nil ,_ede .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _gdbfb :=_caadd .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_gdbfb !=nil {_eebe ,_cgcgc :=_cc .GetArray (_gdbfb );if !_cgcgc {return nil ,_ede .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_dfddb ,_bcgc :=NewPdfRectangle (*_eebe );if _bcgc !=nil {return nil ,_bcgc ;};return _dfddb ,nil ;};_eadbd =_caadd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_ede .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};func _dcdd ()string {_bfgg :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";var _gaege _aac .Buffer ;for _fbca :=0;_fbca < 6;_fbca ++{_gaege .WriteRune (rune (_bfgg [_ab .Intn (len (_bfgg ))]));
};return _gaege .String ();};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_gcfd *PdfAnnotationWidget )Field ()*PdfField {return _gcfd ._gda };

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_dgfga _cc .ParserMetadata ;};

// ToPdfObject implements interface PdfModel.
func (_fgdd *PdfAnnotationFreeText )ToPdfObject ()_cc .PdfObject {_fgdd .PdfAnnotation .ToPdfObject ();_bef :=_fgdd ._cef ;_fefe :=_bef .PdfObject .(*_cc .PdfObjectDictionary );_fgdd .PdfAnnotationMarkup .appendToPdfDictionary (_fefe );_fefe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_fefe .SetIfNotNil ("\u0044\u0041",_fgdd .DA );_fefe .SetIfNotNil ("\u0051",_fgdd .Q );_fefe .SetIfNotNil ("\u0052\u0043",_fgdd .RC );_fefe .SetIfNotNil ("\u0044\u0053",_fgdd .DS );_fefe .SetIfNotNil ("\u0043\u004c",_fgdd .CL );_fefe .SetIfNotNil ("\u0049\u0054",_fgdd .IT );
_fefe .SetIfNotNil ("\u0042\u0045",_fgdd .BE );_fefe .SetIfNotNil ("\u0052\u0044",_fgdd .RD );_fefe .SetIfNotNil ("\u0042\u0053",_fgdd .BS );_fefe .SetIfNotNil ("\u004c\u0045",_fgdd .LE );return _bef ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_efcd :=&PdfBorderStyle {};return _efcd };

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_aceg *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _agff []*PdfField ;if _aceg .AcroForm !=nil {_agff =_aceg .AcroForm .AllFields ();};_gecea :=make (map[*PdfField ]struct{},len (_agff ));for _ ,_fdada :=range _agff {_gecea [_fdada ]=struct{}{};
};for _ ,_gdabb :=range _aceg .PageList {_agad ,_cbffb :=_gdabb .GetAnnotations ();if _cbffb !=nil {return false ,_cbffb ;};for _ ,_gbge :=range _agad {_ffgbe ,_edea :=_gbge .GetContext ().(*PdfAnnotationWidget );if !_edea {continue ;};_fgec :=_ffgbe .Field ();
if _fgec ==nil {return true ,nil ;};if _ ,_dcgdg :=_gecea [_fgec ];!_dcgdg {return true ,nil ;};};};return false ,nil ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _cc .PdfObject ;V _cc .PdfObject ;};func (_dgbcf *PdfReader )loadStructure ()error {if _dgbcf ._bbed .GetCrypter ()!=nil &&!_dgbcf ._bbed .IsAuthenticated (){return _c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_dffgf :=_dgbcf ._bbed .GetTrailer ();if _dffgf ==nil {return _c .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_gabdf ,_dcbeb :=_dffgf .Get ("\u0052\u006f\u006f\u0074").(*_cc .PdfObjectReference );if !_dcbeb {return _c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_dffgf );
};_baacb ,_gdbcdf :=_dgbcf ._bbed .LookupByReference (*_gabdf );if _gdbcdf !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_gdbcdf );
return _gdbcdf ;};_facb ,_dcbeb :=_baacb .(*_cc .PdfIndirectObject );if !_dcbeb {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_baacb ,*_dffgf );
return _ede .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_eafgc ,_dcbeb :=(*_facb ).PdfObject .(*_cc .PdfObjectDictionary );if !_dcbeb {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_facb .PdfObject );
return _ede .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_df .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_eafgc );_faba ,_dcbeb :=_eafgc .Get ("\u0050\u0061\u0067e\u0073").(*_cc .PdfObjectReference );
if !_dcbeb {return _ede .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_daeag ,_gdbcdf :=_dgbcf ._bbed .LookupByReference (*_faba );
if _gdbcdf !=nil {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _gdbcdf ;};_fdafc ,_dcbeb :=_daeag .(*_cc .PdfIndirectObject );if !_dcbeb {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_df .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_fdafc );return _ede .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_cbfgf ,_dcbeb :=_fdafc .PdfObject .(*_cc .PdfObjectDictionary );if !_dcbeb {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_fdafc );
return _ede .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_bdefd ,_dcbeb :=_cc .GetInt (_cbfgf .Get ("\u0043\u006f\u0075n\u0074"));if !_dcbeb {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _ede .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_dcbeb =_cc .GetName (_cbfgf .Get ("\u0054\u0079\u0070\u0065"));!_dcbeb {_df .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_cbfgf .Set ("\u0054\u0079\u0070\u0065",_cc .MakeName ("\u0050\u0061\u0067e\u0073"));};if _gfefc ,_cadde :=_cc .GetInt (_cbfgf .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_cadde {_dadga :=int64 (*_gfefc );_dgbcf .Rotate =&_dadga ;};_dgbcf ._bdebg =_gabdf ;
_dgbcf ._gfed =_eafgc ;_dgbcf ._bdccg =_cbfgf ;_dgbcf ._daddc =_fdafc ;_dgbcf ._ffbbc =int (*_bdefd );_dgbcf ._fbad =[]*_cc .PdfIndirectObject {};_cdea :=map[_cc .PdfObject ]struct{}{};_gdbcdf =_dgbcf .buildPageList (_fdafc ,nil ,_cdea );if _gdbcdf !=nil {return _gdbcdf ;
};_df .Log .Trace ("\u002d\u002d\u002d");_df .Log .Trace ("\u0054\u004f\u0043");_df .Log .Trace ("\u0050\u0061\u0067e\u0073");_df .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_dgbcf ._fbad ),_dgbcf ._fbad );_dgbcf ._bedbb ,_gdbcdf =_dgbcf .loadOutlines ();
if _gdbcdf !=nil {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_gdbcdf );
return _gdbcdf ;};_dgbcf .AcroForm ,_gdbcdf =_dgbcf .loadForms ();if _gdbcdf !=nil {return _gdbcdf ;};_dgbcf .DSS ,_gdbcdf =_dgbcf .loadDSS ();if _gdbcdf !=nil {return _gdbcdf ;};_dgbcf ._facgb ,_gdbcdf =_dgbcf .loadPerms ();if _gdbcdf !=nil {return _gdbcdf ;
};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_gcbg *PdfAnnotationText )ToPdfObject ()_cc .PdfObject {_gcbg .PdfAnnotation .ToPdfObject ();_aaebf :=_gcbg ._cef ;_fbc :=_aaebf .PdfObject .(*_cc .PdfObjectDictionary );if _gcbg .PdfAnnotationMarkup !=nil {_gcbg .PdfAnnotationMarkup .appendToPdfDictionary (_fbc );
};_fbc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0054\u0065\u0078\u0074"));_fbc .SetIfNotNil ("\u004f\u0070\u0065\u006e",_gcbg .Open );_fbc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gcbg .Name );_fbc .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_gcbg .State );
_fbc .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_gcbg .StateModel );return _aaebf ;};func _agbee (_acgbf *_cc .PdfObjectDictionary )(*PdfShadingType7 ,error ){_deaaeb :=PdfShadingType7 {};_cacbf :=_acgbf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _cacbf ==nil {_df .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_eeaba ,_cegac :=_cacbf .(*_cc .PdfObjectInteger );if !_cegac {_df .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cacbf );
return nil ,_cc .ErrTypeError ;};_deaaeb .BitsPerCoordinate =_eeaba ;_cacbf =_acgbf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _cacbf ==nil {_df .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_eeaba ,_cegac =_cacbf .(*_cc .PdfObjectInteger );if !_cegac {_df .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_cacbf );
return nil ,_cc .ErrTypeError ;};_deaaeb .BitsPerComponent =_eeaba ;_cacbf =_acgbf .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _cacbf ==nil {_df .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_eeaba ,_cegac =_cacbf .(*_cc .PdfObjectInteger );if !_cegac {_df .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cacbf );
return nil ,_cc .ErrTypeError ;};_deaaeb .BitsPerComponent =_eeaba ;_cacbf =_acgbf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _cacbf ==nil {_df .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ccgfb ,_cegac :=_cacbf .(*_cc .PdfObjectArray );if !_cegac {_df .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cacbf );
return nil ,_cc .ErrTypeError ;};_deaaeb .Decode =_ccgfb ;if _abbee :=_acgbf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_abbee !=nil {_deaaeb .Function =[]PdfFunction {};if _bcggg ,_gdggc :=_abbee .(*_cc .PdfObjectArray );_gdggc {for _ ,_agedb :=range _bcggg .Elements (){_dfcbde ,_daefa :=_adade (_agedb );
if _daefa !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_daefa );return nil ,_daefa ;};_deaaeb .Function =append (_deaaeb .Function ,_dfcbde );
};}else {_cdaca ,_aaffg :=_adade (_abbee );if _aaffg !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aaffg );return nil ,_aaffg ;
};_deaaeb .Function =append (_deaaeb .Function ,_cdaca );};};return &_deaaeb ,nil ;};func (_gbdbg *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _gbdbg ._cagc };

// B returns the value of the blue component of the color.
func (_bcbc *PdfColorDeviceRGB )B ()float64 {return _bcbc [2]};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _cc .PdfObject ;LE _cc .PdfObject ;BS _cc .PdfObject ;IC _cc .PdfObject ;BE _cc .PdfObject ;IT _cc .PdfObject ;Measure _cc .PdfObject ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_fdeed *PdfPageResources )SetXObjectFormByName (keyName _cc .PdfObjectName ,xform *XObjectForm )error {_egeca :=xform .ToPdfObject ().(*_cc .PdfObjectStream );_adecb :=_fdeed .SetXObjectByName (keyName ,_egeca );return _adecb ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_efcbd *PdfPage )ToPdfObject ()_cc .PdfObject {_fggfa :=_efcbd ._bfgcg ;_efcbd .GetPageDict ();return _fggfa ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bdeea *PdfShadingType4 )ToPdfObject ()_cc .PdfObject {_bdeea .PdfShading .ToPdfObject ();_egefgd ,_edab :=_bdeea .getShadingDict ();if _edab !=nil {_df .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bdeea .BitsPerCoordinate !=nil {_egefgd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bdeea .BitsPerCoordinate );};if _bdeea .BitsPerComponent !=nil {_egefgd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bdeea .BitsPerComponent );
};if _bdeea .BitsPerFlag !=nil {_egefgd .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_bdeea .BitsPerFlag );};if _bdeea .Decode !=nil {_egefgd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bdeea .Decode );};if _bdeea .Function !=nil {if len (_bdeea .Function )==1{_egefgd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bdeea .Function [0].ToPdfObject ());
}else {_aabdc :=_cc .MakeArray ();for _ ,_gddec :=range _bdeea .Function {_aabdc .Append (_gddec .ToPdfObject ());};_egefgd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aabdc );};};return _bdeea ._ccfe ;};func _dbdc (_ddfeb *PdfField )[]*PdfField {_ggca :=[]*PdfField {_ddfeb };
for _ ,_gdfggg :=range _ddfeb .Kids {_ggca =append (_ggca ,_dbdc (_gdfggg )...);};return _ggca ;};

// Items returns all children outline items.
func (_fffacg *Outline )Items ()[]*OutlineItem {return _fffacg .Entries };

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _cc .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_cbff *PdfActionResetForm )ToPdfObject ()_cc .PdfObject {_cbff .PdfAction .ToPdfObject ();_bdf :=_cbff ._dae ;_gbf :=_bdf .PdfObject .(*_cc .PdfObjectDictionary );_gbf .SetIfNotNil ("\u0053",_cc .MakeName (string (ActionTypeResetForm )));_gbf .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_cbff .Fields );
_gbf .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_cbff .Flags );return _bdf ;};func (_fbecg *PdfReader )loadPerms ()(*Permissions ,error ){if _fegbg :=_fbecg ._gfed .Get ("\u0050\u0065\u0072m\u0073");_fegbg !=nil {if _aecb ,_fcdfg :=_cc .GetDict (_fegbg );
_fcdfg {_cbcac :=_aecb .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");if _cbcac ==nil {return nil ,nil ;};if _bdbe ,_agdgd :=_cc .GetIndirect (_cbcac );_agdgd {_gfeff ,_dagbe :=_fbecg .newPdfSignatureFromIndirect (_bdbe );if _dagbe !=nil {return nil ,_dagbe ;
};return NewPermissions (_gfeff ),nil ;};return nil ,_c .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");};return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");
};return nil ,nil ;};

// PdfShadingPatternType3 is shading patterns that will use a Type 3 shading pattern (Radial).
type PdfShadingPatternType3 struct{*PdfPattern ;Shading *PdfShadingType3 ;Matrix *_cc .PdfObjectArray ;ExtGState _cc .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_cafb *PdfAnnotationUnderline )ToPdfObject ()_cc .PdfObject {_cafb .PdfAnnotation .ToPdfObject ();_dabb :=_cafb ._cef ;_bccb :=_dabb .PdfObject .(*_cc .PdfObjectDictionary );_cafb .PdfAnnotationMarkup .appendToPdfDictionary (_bccb );_bccb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_bccb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cafb .QuadPoints );return _dabb ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_aaeac *PdfField )Flags ()FieldFlag {var _bdde FieldFlag ;_adgfe ,_gcaf :=_aaeac .inherit (func (_cgfa *PdfField )bool {if _cgfa .Ff !=nil {_bdde =FieldFlag (*_cgfa .Ff );return true ;};return false ;});if _gcaf !=nil {_df .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_gcaf );
};if !_adgfe {_df .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _bdde ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_af :=NewPdfAction ();_dd :=&PdfActionGoToE {};_dd .PdfAction =_af ;_af .SetContext (_dd );return _dd ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_faedbe DefaultImageHandler )NewGrayImageFromGoImage (goimg _ee .Image )(*Image ,error ){_beabe :=goimg .Bounds ();_gecb :=&Image {Width :int64 (_beabe .Dx ()),Height :int64 (_beabe .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _fcbae :=goimg .(type ){case *_ee .Gray :if len (_fcbae .Pix )!=_beabe .Dx ()*_beabe .Dy (){_ccead ,_fcbga :=_ec .GrayConverter .Convert (goimg );
if _fcbga !=nil {return nil ,_fcbga ;};_gecb .Data =_ccead .Pix ();}else {_gecb .Data =_fcbae .Pix ;};case *_ee .Gray16 :_gecb .BitsPerComponent =16;if len (_fcbae .Pix )!=_beabe .Dx ()*_beabe .Dy ()*2{_bbbg ,_ceeag :=_ec .Gray16Converter .Convert (goimg );
if _ceeag !=nil {return nil ,_ceeag ;};_gecb .Data =_bbbg .Pix ();}else {_gecb .Data =_fcbae .Pix ;};case _ec .Image :_bgcd :=_fcbae .Base ();if _bgcd .ColorComponents ==1{_gecb .BitsPerComponent =int64 (_bgcd .BitsPerComponent );_gecb .Data =_bgcd .Data ;
return _gecb ,nil ;};_febcd ,_acead :=_ec .GrayConverter .Convert (goimg );if _acead !=nil {return nil ,_acead ;};_gecb .Data =_febcd .Pix ();default:_fabec ,_bafb :=_ec .GrayConverter .Convert (goimg );if _bafb !=nil {return nil ,_bafb ;};_gecb .Data =_fabec .Pix ();
};return _gecb ,nil ;};func (_dcgf *PdfReader )newPdfActionSubmitFormFromDict (_bec *_cc .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_ccac ,_baa :=_gfg (_bec .Get ("\u0046"));if _baa !=nil {return nil ,_baa ;};return &PdfActionSubmitForm {F :_ccac ,Fields :_bec .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_bec .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_dbfc *DSS )ToPdfObject ()_cc .PdfObject {_egdg :=_dbfc ._efcg .PdfObject .(*_cc .PdfObjectDictionary );_egdg .Clear ();_fefb :=_cc .MakeDict ();for _aadb ,_ffcga :=range _dbfc .VRI {_fefb .Set (*_cc .MakeName (_aadb ),_ffcga .ToPdfObject ());};_egdg .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_ecfga (_dbfc .Certs ));
_egdg .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_ecfga (_dbfc .OCSPs ));_egdg .SetIfNotNil ("\u0043\u0052\u004c\u0073",_ecfga (_dbfc .CRLs ));_egdg .Set ("\u0056\u0052\u0049",_fefb );return _dbfc ._efcg ;};func (_efdfgd *PdfWriter )flushWriter ()error {if _efdfgd ._fdeagb ==nil {_efdfgd ._fdeagb =_efdfgd ._gacfdb .Flush ();
};return _efdfgd ._fdeagb ;};func _feae (_agde []byte )[]byte {const _fccec =52845;const _cfaae =22719;_bcgd :=55665;for _ ,_feaff :=range _agde [:4]{_bcgd =(int (_feaff )+_bcgd )*_fccec +_cfaae ;};_ddgfd :=make ([]byte ,len (_agde )-4);for _dbcfb ,_dede :=range _agde [4:]{_ddgfd [_dbcfb ]=byte (int (_dede )^_bcgd >>8);
_bcgd =(int (_dede )+_bcgd )*_fccec +_cfaae ;};return _ddgfd ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_geeg :=NewPdfAnnotation ();_ccc :=&PdfAnnotationPrinterMark {};_ccc .PdfAnnotation =_geeg ;_geeg .SetContext (_ccc );return _ccc ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_gddb *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};func _baad (_aaaac StdFontName )(pdfFontSimple ,error ){_babc ,_adgfa :=_edg .NewStdFontByName (_aaaac );if !_adgfa {return pdfFontSimple {},ErrFontNotSupported ;};
_decg :=_daaff (_babc );return _decg ,nil ;};func (_deafc *PdfReader )newPdfAnnotationPolyLineFromDict (_fdb *_cc .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_gadf :=PdfAnnotationPolyLine {};_dgdd ,_aedg :=_deafc .newPdfAnnotationMarkupFromDict (_fdb );
if _aedg !=nil {return nil ,_aedg ;};_gadf .PdfAnnotationMarkup =_dgdd ;_gadf .Vertices =_fdb .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_gadf .LE =_fdb .Get ("\u004c\u0045");_gadf .BS =_fdb .Get ("\u0042\u0053");_gadf .IC =_fdb .Get ("\u0049\u0043");
_gadf .BE =_fdb .Get ("\u0042\u0045");_gadf .IT =_fdb .Get ("\u0049\u0054");_gadf .Measure =_fdb .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_gadf ,nil ;};

// IsCID returns true if the underlying font is CID.
func (_bbfb *PdfFont )IsCID ()bool {return _bbfb .baseFields ().isCIDFont ()};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _cc .PdfObject )(*PdfFilespec ,error ){_dccb :=&PdfFilespec {};var _gfgdf *_cc .PdfObjectDictionary ;if _cfbcg ,_dcabc :=_cc .GetIndirect (obj );_dcabc {_dccb ._adeca =_cfbcg ;_acac ,_eegbe :=_cc .GetDict (_cfbcg .PdfObject );
if !_eegbe {_df .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_cc .ErrTypeError ;};_gfgdf =_acac ;}else if _eaec ,_fcdf :=_cc .GetDict (obj );
_fcdf {_dccb ._adeca =_eaec ;_gfgdf =_eaec ;}else {_df .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_cc .ErrTypeError ;};if _gfgdf ==nil {_df .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_ede .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _aade :=_gfgdf .Get ("\u0054\u0079\u0070\u0065");_aade !=nil {_acaaa ,_eggde :=_aade .(*_cc .PdfObjectName );if !_eggde {_df .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_aade );
}else {if *_acaaa !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_df .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_acaaa );
};};};if _bfgfa :=_gfgdf .Get ("\u0046\u0053");_bfgfa !=nil {_dccb .FS =_bfgfa ;};if _bafd :=_gfgdf .Get ("\u0046");_bafd !=nil {_dccb .F =_bafd ;};if _egag :=_gfgdf .Get ("\u0055\u0046");_egag !=nil {_dccb .UF =_egag ;};if _ecag :=_gfgdf .Get ("\u0044\u004f\u0053");
_ecag !=nil {_dccb .DOS =_ecag ;};if _efff :=_gfgdf .Get ("\u004d\u0061\u0063");_efff !=nil {_dccb .Mac =_efff ;};if _daafd :=_gfgdf .Get ("\u0055\u006e\u0069\u0078");_daafd !=nil {_dccb .Unix =_daafd ;};if _ageaa :=_gfgdf .Get ("\u0049\u0044");_ageaa !=nil {_dccb .ID =_ageaa ;
};if _dcabb :=_gfgdf .Get ("\u0056");_dcabb !=nil {_dccb .V =_dcabb ;};if _bgac :=_gfgdf .Get ("\u0045\u0046");_bgac !=nil {_dccb .EF =_bgac ;};if _fgdca :=_gfgdf .Get ("\u0052\u0046");_fgdca !=nil {_dccb .RF =_fgdca ;};if _bfaa :=_gfgdf .Get ("\u0044\u0065\u0073\u0063");
_bfaa !=nil {_dccb .Desc =_bfaa ;};if _dgddg :=_gfgdf .Get ("\u0043\u0049");_dgddg !=nil {_dccb .CI =_dgddg ;};if _fccb :=_gfgdf .Get ("\u0041\u0046\u0052\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070");_fccb !=nil {_dccb .AFRelationship =_fccb ;
};return _dccb ,nil ;};func (_bcbe *PdfSignature )extractChainFromCert ()([]*_ffd .Certificate ,error ){var _adgccg *_cc .PdfObjectArray ;switch _dagbg :=_bcbe .Cert .(type ){case *_cc .PdfObjectString :_adgccg =_cc .MakeArray (_dagbg );case *_cc .PdfObjectArray :_adgccg =_dagbg ;
default:return nil ,_c .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_dagbg );
};var _dcba _aac .Buffer ;for _ ,_dbab :=range _adgccg .Elements (){_bfbg ,_dgdcb :=_cc .GetString (_dbab );if !_dgdcb {return nil ,_c .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_dbab );
};if _ ,_abbed :=_dcba .Write (_bfbg .Bytes ());_abbed !=nil {return nil ,_abbed ;};};return _ffd .ParseCertificates (_dcba .Bytes ());};func (_gccf *PdfReader )flattenFieldsWithOpts (_dfbee bool ,_fbfb FieldAppearanceGenerator ,_ffefa *FieldFlattenOpts )error {if _ffefa ==nil {_ffefa =&FieldFlattenOpts {};
};var _dadc bool ;_dcgcg :=map[*PdfAnnotation ]bool {};{var _begb []*PdfField ;_acfa :=_gccf .AcroForm ;if _acfa !=nil {if _ffefa .FilterFunc !=nil {_begb =_acfa .filteredFields (_ffefa .FilterFunc ,true );_dadc =_acfa .Fields !=nil &&len (*_acfa .Fields )> 0;
}else {_begb =_acfa .AllFields ();};};for _ ,_adgb :=range _begb {if len (_adgb .Annotations )< 1{_df .Log .Debug ("\u004e\u006f\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0075\u006ed\u0020\u0066\u006f\u0072\u003a\u0020\u0025v\u002c\u0020\u006c\u006f\u006f\u006b\u0020\u0069\u006e\u0074\u006f \u004b\u0069\u0064\u0073\u0020\u004f\u0062\u006a\u0065\u0063\u0074",_adgb .PartialName ());
for _ecda ,_gddf :=range _adgb .Kids {for _ ,_cdbc :=range _gddf .Annotations {_dcgcg [_cdbc .PdfAnnotation ]=_adgb .V !=nil ;if _gddf .V ==nil {_gddf .V =_adgb .V ;};if _gddf .T ==nil {_gddf .T =_cc .MakeString (_c .Sprintf ("\u0025\u0073\u0023%\u0064",_adgb .PartialName (),_ecda ));
};if _fbfb !=nil {_cbbfb ,_fcgg :=_fbfb .GenerateAppearanceDict (_acfa ,_gddf ,_cdbc );if _fcgg !=nil {return _fcgg ;};_cdbc .AP =_cbbfb ;};};};};for _ ,_caag :=range _adgb .Annotations {_dcgcg [_caag .PdfAnnotation ]=_adgb .V !=nil ;if _fbfb !=nil {_agba ,_acde :=_fbfb .GenerateAppearanceDict (_acfa ,_adgb ,_caag );
if _acde !=nil {return _acde ;};_caag .AP =_agba ;};};};};if _dfbee {for _ ,_beadd :=range _gccf .PageList {_ddgc ,_ebedf :=_beadd .GetAnnotations ();if _ebedf !=nil {return _ebedf ;};for _ ,_dbfg :=range _ddgc {_dcgcg [_dbfg ]=true ;};};};for _ ,_fedd :=range _gccf .PageList {_eaca :=_fedd .flattenFieldsWithOpts (_fbfb ,_ffefa ,_dcgcg );
if _eaca !=nil {return _eaca ;};};if !_dadc {_gccf .AcroForm =nil ;};return nil ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_cgabe :=PdfPage {};_cgabe ._gcead =_cc .MakeDict ();_cgabe .Resources =NewPdfPageResources ();_bgecd :=_cc .PdfIndirectObject {};_bgecd .PdfObject =_cgabe ._gcead ;_cgabe ._bfgcg =&_bgecd ;_cgabe ._gebd =*_cgabe ._gcead ;return &_cgabe ;
};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_fdbe FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_fdbe .Mask ()|fl .Mask ())};

// ToPdfObject implements interface PdfModel.
func (_adgd *PdfAnnotationPrinterMark )ToPdfObject ()_cc .PdfObject {_adgd .PdfAnnotation .ToPdfObject ();_fggd :=_adgd ._cef ;_adea :=_fggd .PdfObject .(*_cc .PdfObjectDictionary );_adea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_adea .SetIfNotNil ("\u004d\u004e",_adgd .MN );return _fggd ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _cc .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {var _ecbebf error ;encoder ,_ecbebf =img .getSuitableEncoder ();if _ecbebf !=nil {_df .Log .Debug ("F\u0061\u0069l\u0075\u0072\u0065\u0020\u006f\u006e\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0069\u0074\u0061b\u006c\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072,\u0020\u0066\u0061\u006c\u006c\u0062\u0061\u0063\u006b\u0020\u0074\u006f\u0020R\u0061\u0077\u0045\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_ecbebf );
encoder =_cc .NewRawEncoder ();};};encoder .UpdateParams (img .GetParamsDict ());_dgfeg ,_gdeff :=encoder .EncodeBytes (img .Data );if _gdeff !=nil {_df .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_gdeff );
return nil ,_gdeff ;};_dabcgg :=NewXObjectImage ();_eedef :=img .Width ;_agfbg :=img .Height ;_dabcgg .Width =&_eedef ;_dabcgg .Height =&_agfbg ;_fabfd :=img .BitsPerComponent ;_dabcgg .BitsPerComponent =&_fabfd ;_dabcgg .Filter =encoder ;_dabcgg .Stream =_dgfeg ;
if cs ==nil {if img .ColorComponents ==1{_dabcgg .ColorSpace =NewPdfColorspaceDeviceGray ();if img .BitsPerComponent ==16{switch encoder .(type ){case *_cc .DCTEncoder :_dabcgg .ColorSpace =NewPdfColorspaceDeviceRGB ();_fabfd =8;_dabcgg .BitsPerComponent =&_fabfd ;
};};}else if img .ColorComponents ==3{_dabcgg .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{switch encoder .(type ){case *_cc .DCTEncoder :_dabcgg .ColorSpace =NewPdfColorspaceDeviceRGB ();default:_dabcgg .ColorSpace =NewPdfColorspaceDeviceCMYK ();
};}else {return nil ,_ede .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_dabcgg .ColorSpace =cs ;};if len (img ._ccee )!=0{_gcacc :=NewXObjectImage ();_gcacc .Filter =encoder ;_ggab ,_gaeba :=encoder .EncodeBytes (img ._ccee );
if _gaeba !=nil {_df .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_gaeba );return nil ,_gaeba ;};_gcacc .Stream =_ggab ;_gcacc .BitsPerComponent =_dabcgg .BitsPerComponent ;
_gcacc .Width =&img .Width ;_gcacc .Height =&img .Height ;_gcacc .ColorSpace =NewPdfColorspaceDeviceGray ();_dabcgg .SMask =_gcacc .ToPdfObject ();}else {_dabcgg .SMask =xobjIn .SMask ;_dabcgg .ImageMask =xobjIn .ImageMask ;if _dabcgg .ColorSpace .GetNumComponents ()==1{_dgdbb (_dabcgg );
};};return _dabcgg ,nil ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_daee *PdfFieldText )ToPdfObject ()_cc .PdfObject {_daee .PdfField .ToPdfObject ();_adfdc :=_daee ._geafg ;_deega :=_adfdc .PdfObject .(*_cc .PdfObjectDictionary );_deega .Set ("\u0046\u0054",_cc .MakeName ("\u0054\u0078"));if _daee .DA !=nil {_deega .Set ("\u0044\u0041",_daee .DA );
};if _daee .Q !=nil {_deega .Set ("\u0051",_daee .Q );};if _daee .DS !=nil {_deega .Set ("\u0044\u0053",_daee .DS );};if _daee .RV !=nil {_deega .Set ("\u0052\u0056",_daee .RV );};if _daee .MaxLen !=nil {_deega .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_daee .MaxLen );
};return _adfdc ;};

// GetPerms returns the Permissions dictionary
func (_aede *PdfReader )GetPerms ()*Permissions {return _aede ._facgb };

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_eeb :=NewPdfAnnotation ();_dgd :=&PdfAnnotationRedact {};_dgd .PdfAnnotation =_eeb ;_dgd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eeb .SetContext (_dgd );return _dgd ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_feggcc *XObjectForm )SetContentStream (content []byte ,encoder _cc .StreamEncoder )error {_dgdab :=content ;if encoder ==nil {if _feggcc .Filter !=nil {encoder =_feggcc .Filter ;}else {encoder =_cc .NewRawEncoder ();};};_dcbdb ,_eccdd :=encoder .EncodeBytes (_dgdab );
if _eccdd !=nil {return _eccdd ;};_dgdab =_dcbdb ;_feggcc .Stream =_dgdab ;_feggcc .Filter =encoder ;return nil ;};

// GetAttachedFiles retrieves all the attached files info and content.
func (_ffeff *PdfReader )GetAttachedFiles ()([]*EmbeddedFile ,error ){_adbaa ,_dbaca :=_ffeff .GetNameDictionary ();if _dbaca !=nil {return nil ,_dbaca ;};_eafgca :=_decdd (_adbaa );if _eafgca .EmbeddedFiles ==nil {return nil ,nil ;};_baecg :=_eafgca .EmbeddedFiles .Get ("\u004e\u0061\u006de\u0073");
_eebg ,_ggegga :=_baecg .(*_cc .PdfObjectArray );if !_ggegga {return nil ,_ede .New ("\u0049\u006e\u0076\u0061li\u0064\u0020\u004e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");};_dffac :=[]*EmbeddedFile {};for _gdagd :=1;_gdagd < len (_eebg .Elements ());
_gdagd +=2{if _gdagd %2!=0{_aaaabd :=_eebg .Get (_gdagd );_fgbgf ,_dadfd :=NewPdfFilespecFromObj (_aaaabd );if _dadfd !=nil {return nil ,_dadfd ;};_dbbd ,_dadfd :=NewEmbeddedFileFromObject (_fgbgf .EF );if _dadfd !=nil {return nil ,_dadfd ;};_fgaeg ,_cddef :=_fgbgf .F .(*_cc .PdfObjectString );
if _cddef {_dbbd .Name =_fgaeg .Str ();};_dbbd .Description =_fgbgf .Desc .WriteString ();switch _fgbgf .AFRelationship .WriteString (){case "\u0053\u006f\u0075\u0072\u0063\u0065":_dbbd .Relationship =RelationshipSource ;case "\u0044\u0061\u0074\u0061":_dbbd .Relationship =RelationshipData ;
case "A\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065":_dbbd .Relationship =RelationshipAlternative ;case "\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074":_dbbd .Relationship =RelationshipSupplement ;default:_dbbd .Relationship =RelationshipUnspecified ;
};_dffac =append (_dffac ,_dbbd );};};return _dffac ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_adbad *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_cc .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ede .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acag ,_acea :=_cc .GetNumbersAsFloat (objects );
if _acea !=nil {return nil ,_acea ;};return _adbad .ColorFromFloats (_acag );};func (_gbdac *PdfWriter )writeAcroFormFields ()error {if _gbdac ._fadf ==nil {return nil ;};_df .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");
_edgb :=_gbdac ._fadf .ToPdfObject ();_df .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_edgb );_gbdac ._feff .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_edgb );_gfggc :=_gbdac .addObjects (_edgb );
if _gfggc !=nil {return _gfggc ;};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_abbcg *PdfAnnotationWidget )ToPdfObject ()_cc .PdfObject {_abbcg .PdfAnnotation .ToPdfObject ();_dfae :=_abbcg ._cef ;_cggc :=_dfae .PdfObject .(*_cc .PdfObjectDictionary );if _abbcg ._fdde {return _dfae ;};_abbcg ._fdde =true ;_cggc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_cggc .SetIfNotNil ("\u0048",_abbcg .H );_cggc .SetIfNotNil ("\u004d\u004b",_abbcg .MK );_cggc .SetIfNotNil ("\u0041",_abbcg .A );_cggc .SetIfNotNil ("\u0041\u0041",_abbcg .AA );_cggc .SetIfNotNil ("\u0042\u0053",_abbcg .BS );_befa :=_abbcg .Parent ;if _abbcg ._gda !=nil {if _abbcg ._gda ._geafg ==_abbcg ._cef {_abbcg ._gda .ToPdfObject ();
};_befa =_abbcg ._gda .GetContainingPdfObject ();};if _befa !=_dfae {_cggc .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_befa );};_abbcg ._fdde =false ;return _dfae ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _cc .PdfObject ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_aaffe *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _gaec []*PdfOutlineTreeNode ;var _dfdfg []string ;var _ggebb func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_ggebb =func (_ggcdc *PdfOutlineTreeNode ,_bfag *[]*PdfOutlineTreeNode ,_gccb *[]string ,_fdcbf int ){if _ggcdc ==nil {return ;
};if _ggcdc ._efbcf ==nil {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_daad ,_cdgd :=_ggcdc ._efbcf .(*PdfOutlineItem );if _cdgd {*_bfag =append (*_bfag ,&_daad .PdfOutlineTreeNode );
_gbcge :=_fa .Repeat ("\u0020",_fdcbf *2)+_daad .Title .Decoded ();*_gccb =append (*_gccb ,_gbcge );};if _ggcdc .First !=nil {_accc :=_fa .Repeat ("\u0020",_fdcbf *2)+"\u002b";*_gccb =append (*_gccb ,_accc );_ggebb (_ggcdc .First ,_bfag ,_gccb ,_fdcbf +1);
};if _cdgd &&_daad .Next !=nil {_ggebb (_daad .Next ,_bfag ,_gccb ,_fdcbf );};};_ggebb (_aaffe ._bedbb ,&_gaec ,&_dfdfg ,0);return _gaec ,_dfdfg ,nil ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_egdec *PdfFont )BytesToCharcodes (data []byte )[]_cbf .CharCode {_df .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _ccdga ,_gabdg :=_egdec ._ggec .(*pdfFontType0 );_gabdg &&_ccdga ._abgbf !=nil {if _cbagf ,_geaa :=_ccdga .bytesToCharcodes (data );_geaa {return _cbagf ;};};var (_bceg =make ([]_cbf .CharCode ,0,len (data )+len (data )%2);_ccdf =_egdec .baseFields ();
);if _ccdf ._fgbf !=nil {if _gdbcd ,_fdgf :=_ccdf ._fgbf .BytesToCharcodes (data );_fdgf {for _ ,_cbab :=range _gdbcd {_bceg =append (_bceg ,_cbf .CharCode (_cbab ));};return _bceg ;};};if _ccdf .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _fegcg :=0;_fegcg < len (data );_fegcg +=2{_eggfb :=uint16 (data [_fegcg ])<<8|uint16 (data [_fegcg +1]);_bceg =append (_bceg ,_cbf .CharCode (_eggfb ));};}else {for _ ,_dgca :=range data {_bceg =append (_bceg ,_cbf .CharCode (_dgca ));
};};return _bceg ;};

// ToPdfObject implements interface PdfModel.
func (_dbged *Permissions )ToPdfObject ()_cc .PdfObject {return _dbged ._gadeg };func (_bfdge *PdfWriter )writeTrailer (_cgadf int ){_bfdge .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _fcccb :=0;_fcccb <=_cgadf ;{for ;_fcccb <=_cgadf ;_fcccb ++{_bgage ,_adcee :=_bfdge ._faff [_fcccb ];
if _adcee &&(!_bfdge ._dfeeg ||_bfdge ._dfeeg &&(_bgage .Type ==1&&_bgage .Offset >=_bfdge ._beda ||_bgage .Type ==0)){break ;};};var _fafef int ;for _fafef =_fcccb +1;_fafef <=_cgadf ;_fafef ++{_cagfc ,_ecggc :=_bfdge ._faff [_fafef ];if _ecggc &&(!_bfdge ._dfeeg ||_bfdge ._dfeeg &&(_cagfc .Type ==1&&_cagfc .Offset > _bfdge ._beda )){continue ;
};break ;};_fdgef :=_c .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_fcccb ,_fafef -_fcccb );_bfdge .writeString (_fdgef );for _dfbff :=_fcccb ;_dfbff < _fafef ;_dfbff ++{_facbb :=_bfdge ._faff [_dfbff ];switch _facbb .Type {case 0:_fdgef =_c .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);
_bfdge .writeString (_fdgef );case 1:_fdgef =_c .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_facbb .Offset ,0);_bfdge .writeString (_fdgef );};};_fcccb =_fafef +1;};_afcdb :=_cc .MakeDict ();_afcdb .Set ("\u0049\u006e\u0066\u006f",_bfdge ._egdc );
_afcdb .Set ("\u0052\u006f\u006f\u0074",_bfdge ._fedec );_afcdb .Set ("\u0053\u0069\u007a\u0065",_cc .MakeInteger (int64 (_cgadf +1)));if _bfdge ._dfeeg &&_bfdge ._adged > 0{_afcdb .Set ("\u0050\u0072\u0065\u0076",_cc .MakeInteger (_bfdge ._adged ));};
if _bfdge ._acebb !=nil {_afcdb .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_bfdge ._acged );};if _bfdge ._gacge ==nil &&_bfdge ._degcb !=""&&_bfdge ._aebda !=""{_bfdge ._gacge =_cc .MakeArray (_cc .MakeHexString (_bfdge ._degcb ),_cc .MakeHexString (_bfdge ._aebda ));
};if _bfdge ._gacge !=nil {_afcdb .Set ("\u0049\u0044",_bfdge ._gacge );_df .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_bfdge ._gacge );};_bfdge .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_bfdge .writeString (_afcdb .WriteString ());
_bfdge .writeString ("\u000a");};func (_gcdf *PdfReader )newPdfAnnotationFileAttachmentFromDict (_cdfc *_cc .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_ecea :=PdfAnnotationFileAttachment {};_caf ,_cccc :=_gcdf .newPdfAnnotationMarkupFromDict (_cdfc );
if _cccc !=nil {return nil ,_cccc ;};_ecea .PdfAnnotationMarkup =_caf ;_ecea .FS =_cdfc .Get ("\u0046\u0053");_ecea .Name =_cdfc .Get ("\u004e\u0061\u006d\u0065");return &_ecea ,nil ;};

// SetLocation sets the `Location` field of the signature.
func (_dfbcdc *PdfSignature )SetLocation (location string ){_dfbcdc .Location =_cc .MakeString (location );};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_dbeb ,_eecf :=NewStandard14Font (basefont );if _eecf !=nil {panic (_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _dbeb ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_gbdcc *PdfFieldButton )GetType ()ButtonType {_cdddg :=ButtonTypeCheckbox ;if _gbdcc .Ff !=nil {if (uint32 (*_gbdcc .Ff )&FieldFlagPushbutton .Mask ())> 0{_cdddg =ButtonTypePush ;}else if (uint32 (*_gbdcc .Ff )&FieldFlagRadio .Mask ())> 0{_cdddg =ButtonTypeRadio ;
};};return _cdddg ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_cbf .SimpleEncoder ,error ){_beedg ,_daaef :=_baad (basefont );if _daaef !=nil {return nil ,nil ,_daaef ;};_dadb ,_aagag :=_beedg .Encoder ().(_cbf .SimpleEncoder );
if !_aagag {return nil ,nil ,_c .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_beedg .Encoder ());
};_aebgd :=make (map[rune ]_cbf .GlyphName );for _edef :=range alphabet {if _ ,_bbba :=_dadb .RuneToCharcode (_edef );!_bbba {_ ,_egcgf :=_beedg ._gageb .Read (_edef );if !_egcgf {_df .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_edef ,_edef );
continue ;};_caef ,_egcgf :=_cbf .RuneToGlyph (_edef );if !_egcgf {_df .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_edef ,_edef );continue ;};if len (_aebgd )>=255{return nil ,nil ,_ede .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_aebgd [_edef ]=_caef ;};};var (_ffgc []_cbf .CharCode ;_ebdd []_cbf .CharCode ;);for _ebaa :=_cbf .CharCode (1);_ebaa <=0xff;_ebaa ++{_gebcc ,_ffgec :=_dadb .CharcodeToRune (_ebaa );if !_ffgec {_ffgc =append (_ffgc ,_ebaa );continue ;};if _ ,_ffgec =alphabet [_gebcc ];
!_ffgec {_ebdd =append (_ebdd ,_ebaa );};};_dcbce :=append (_ffgc ,_ebdd ...);if len (_dcbce )< len (_aebgd ){return nil ,nil ,_c .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_aebgd ),len (_dcbce ));
};_aabf :=make ([]rune ,0,len (_aebgd ));for _cdff :=range _aebgd {_aabf =append (_aabf ,_cdff );};_eac .Slice (_aabf ,func (_dbee ,_bcagg int )bool {return _aabf [_dbee ]< _aabf [_bcagg ]});_eecfa :=make (map[_cbf .CharCode ]_cbf .GlyphName ,len (_aabf ));
for _ ,_bdbac :=range _aabf {_gead :=_dcbce [0];_dcbce =_dcbce [1:];_eecfa [_gead ]=_aebgd [_bdbac ];};_dadb =_cbf .ApplyDifferences (_dadb ,_eecfa );_beedg .SetEncoder (_dadb );return &PdfFont {_ggec :&_beedg },_dadb ,nil ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _cd .ReadSeeker )(*PdfFont ,error ){const _dcfba =_cbf .CharCode (32);const _dafg =_cbf .CharCode (255);_fbebgd ,_bfdgga :=_ea .ReadAll (r );if _bfdgga !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_bfdgga );
return nil ,_bfdgga ;};_fbfde ,_bfdgga :=_edg .TtfParse (_aac .NewReader (_fbebgd ));if _bfdgga !=nil {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_bfdgga );
return nil ,_bfdgga ;};_bcfa :=&pdfFontSimple {_fdcc :make (map[_cbf .CharCode ]float64 ),fontCommon :fontCommon {_edfc :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_bcfa ._fbed =_cbf .NewWinAnsiEncoder ();_bcfa ._baac =_fbfde .PostScriptName ;
_bcfa .FirstChar =_cc .MakeInteger (int64 (_dcfba ));_bcfa .LastChar =_cc .MakeInteger (int64 (_dafg ));_bbfbe :=1000.0/float64 (_fbfde .UnitsPerEm );if len (_fbfde .Widths )<=0{return nil ,_ede .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_fbfba :=_bbfbe *float64 (_fbfde .Widths [0]);_cbbdc :=make ([]float64 ,0,_dafg -_dcfba +1);for _bfegb :=_dcfba ;_bfegb <=_dafg ;_bfegb ++{_fgcd ,_fbff :=_bcfa .Encoder ().CharcodeToRune (_bfegb );if !_fbff {_df .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_bfegb );
_cbbdc =append (_cbbdc ,_fbfba );continue ;};_ddd ,_ebbae :=_fbfde .Chars [_fgcd ];if !_ebbae {_df .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_cbbdc =append (_cbbdc ,_fbfba );continue ;
};_bbaa :=_bbfbe *float64 (_fbfde .Widths [_ddd ]);_cbbdc =append (_cbbdc ,_bbaa );};_bcfa .Widths =_cc .MakeIndirectObject (_cc .MakeArrayFromFloats (_cbbdc ));if len (_cbbdc )< int (_dafg -_dcfba +1){_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_cbbdc ),255-32+1);
return nil ,_cc .ErrRangeError ;};for _gggc :=_dcfba ;_gggc <=_dafg ;_gggc ++{_bcfa ._fdcc [_gggc ]=_cbbdc [_gggc -_dcfba ];};_bcfa .Encoding =_cc .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_becg :=&PdfFontDescriptor {};
_becg .FontName =_cc .MakeName (_fbfde .PostScriptName );_becg .Ascent =_cc .MakeFloat (_bbfbe *float64 (_fbfde .TypoAscender ));_becg .Descent =_cc .MakeFloat (_bbfbe *float64 (_fbfde .TypoDescender ));_becg .CapHeight =_cc .MakeFloat (_bbfbe *float64 (_fbfde .CapHeight ));
_becg .FontBBox =_cc .MakeArrayFromFloats ([]float64 {_bbfbe *float64 (_fbfde .Xmin ),_bbfbe *float64 (_fbfde .Ymin ),_bbfbe *float64 (_fbfde .Xmax ),_bbfbe *float64 (_fbfde .Ymax )});_becg .ItalicAngle =_cc .MakeFloat (_fbfde .ItalicAngle );_becg .MissingWidth =_cc .MakeFloat (_bbfbe *float64 (_fbfde .Widths [0]));
_aebfc ,_bfdgga :=_cc .MakeStream (_fbebgd ,_cc .NewFlateEncoder ());if _bfdgga !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_bfdgga );
return nil ,_bfdgga ;};_aebfc .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_cc .MakeInteger (int64 (len (_fbebgd ))));_becg .FontFile2 =_aebfc ;if _fbfde .Bold {_becg .StemV =_cc .MakeInteger (120);}else {_becg .StemV =_cc .MakeInteger (70);
};_ecgbfb :=_cacgf ;if _fbfde .IsFixedPitch {_ecgbfb |=_cddfa ;};if _fbfde .ItalicAngle !=0{_ecgbfb |=_dcde ;};_becg .Flags =_cc .MakeInteger (int64 (_ecgbfb ));_bcfa ._cagc =_becg ;_bedde :=&PdfFont {_ggec :_bcfa };return _bedde ,nil ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_adcbf *PdfReader )IsEncrypted ()(bool ,error ){return _adcbf ._bbed .IsEncrypted ()};func _affc (_bbca _cc .PdfObject )(*PdfFunctionType2 ,error ){_ceaea :=&PdfFunctionType2 {};var _faefc *_cc .PdfObjectDictionary ;if _cgfff ,_cagg :=_bbca .(*_cc .PdfIndirectObject );
_cagg {_ddff ,_bgaaa :=_cgfff .PdfObject .(*_cc .PdfObjectDictionary );if !_bgaaa {return nil ,_ede .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ceaea ._ebdbg =_cgfff ;_faefc =_ddff ;}else if _abcb ,_ccgab :=_bbca .(*_cc .PdfObjectDictionary );
_ccgab {_faefc =_abcb ;}else {return nil ,_ede .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_df .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_faefc .String ());_aacb ,_eaac :=_cc .TraceToDirectObject (_faefc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cc .PdfObjectArray );
if !_eaac {_df .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ede .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _aacb .Len ()< 0||_aacb .Len ()%2!=0{_df .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_ede .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_dcbd ,_feggf :=_aacb .ToFloat64Array ();if _feggf !=nil {return nil ,_feggf ;};_ceaea .Domain =_dcbd ;_aacb ,_eaac =_cc .TraceToDirectObject (_faefc .Get ("\u0052\u0061\u006eg\u0065")).(*_cc .PdfObjectArray );if _eaac {if _aacb .Len ()< 0||_aacb .Len ()%2!=0{return nil ,_ede .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_gafbgf ,_baffe :=_aacb .ToFloat64Array ();if _baffe !=nil {return nil ,_baffe ;};_ceaea .Range =_gafbgf ;};_aacb ,_eaac =_cc .TraceToDirectObject (_faefc .Get ("\u0043\u0030")).(*_cc .PdfObjectArray );if _eaac {_dbeg ,_bbebc :=_aacb .ToFloat64Array ();
if _bbebc !=nil {return nil ,_bbebc ;};_ceaea .C0 =_dbeg ;};_aacb ,_eaac =_cc .TraceToDirectObject (_faefc .Get ("\u0043\u0031")).(*_cc .PdfObjectArray );if _eaac {_baccbf ,_aged :=_aacb .ToFloat64Array ();if _aged !=nil {return nil ,_aged ;};_ceaea .C1 =_baccbf ;
};if len (_ceaea .C0 )!=len (_ceaea .C1 ){_df .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_cc .ErrRangeError ;};N ,_feggf :=_cc .GetNumberAsFloat (_cc .TraceToDirectObject (_faefc .Get ("\u004e")));
if _feggf !=nil {_df .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_faefc .String ());return nil ,_feggf ;};_ceaea .N =N ;
return _ceaea ,nil ;};

// Encoder returns the font's text encoder.
func (_geacbe pdfCIDFontType2 )Encoder ()_cbf .TextEncoder {return _geacbe ._acdef };func (_cfaad *PdfReader )buildNameNodes (_bdgf *_cc .PdfIndirectObject ,_gfggf map[_cc .PdfObject ]struct{})error {if _bdgf ==nil {return nil ;};if _ ,_ddbaf :=_gfggf [_bdgf ];
_ddbaf {_df .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_bdgf .ObjectNumber );return nil ;};_gfggf [_bdgf ]=struct{}{};
_aeafa ,_fdcbga :=_bdgf .PdfObject .(*_cc .PdfObjectDictionary );if !_fdcbga {return _ede .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _eadadf ,_abefgd :=_cc .GetDict (_aeafa .Get ("\u0044\u0065\u0073t\u0073"));
_abefgd {_ccagb ,_daggg :=_cc .GetArray (_eadadf .Get ("\u004b\u0069\u0064\u0073"));if !_daggg {return _ede .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_df .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_ccagb );
for _ffbbg ,_fagff :=range _ccagb .Elements (){_gccad ,_fdgfa :=_cc .GetIndirect (_fagff );if !_fdgfa {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_gccad );
return _ede .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_ccagb .Set (_ffbbg ,_gccad );_adaed :=_cfaad .buildNameNodes (_gccad ,_gfggf );if _adaed !=nil {return _adaed ;
};};};if _ddfbe ,_gecde :=_cc .GetDict (_aeafa );_gecde {if !_cc .IsNullObject (_ddfbe .Get ("\u004b\u0069\u0064\u0073")){if _ggdda ,_cdbgd :=_cc .GetArray (_ddfbe .Get ("\u004b\u0069\u0064\u0073"));_cdbgd {for _cafdc ,_dfea :=range _ggdda .Elements (){if _fafb ,_gbeec :=_cc .GetIndirect (_dfea );
_gbeec {_ggdda .Set (_cafdc ,_fafb );_fgdfd :=_cfaad .buildNameNodes (_fafb ,_gfggf );if _fgdfd !=nil {return _fgdfd ;};};};};};};return nil ;};

// GetCustomInfo returns a custom info value for the specified name.
func (_cccab *PdfInfo )GetCustomInfo (name string )*_cc .PdfObjectString {var _bgcg *_cc .PdfObjectString ;if _cccab ._cbag ==nil {return _bgcg ;};if _cgcdf ,_bdee :=_cccab ._cbag .Get (*_cc .MakeName (name )).(*_cc .PdfObjectString );_bdee {_bgcg =_cgcdf ;
};return _bgcg ;};func (_dafbb *PdfReader )newPdfActionURIFromDict (_fgd *_cc .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_fgd .Get ("\u0055\u0052\u0049"),IsMap :_fgd .Get ("\u0049\u0073\u004da\u0070")},nil ;};func _decdd (_edcef _cc .PdfObject )*Names {_edaca :=_agabd ();
_dbcfg :=_cc .TraceToDirectObject (_edcef ).(*_cc .PdfObjectDictionary );if _bfedf :=_dbcfg .Get ("\u0044\u0065\u0073t\u0073");_bfedf !=nil {_edaca .Dests =_cc .TraceToDirectObject (_bfedf ).(*_cc .PdfObjectDictionary );};if _cgfad :=_dbcfg .Get ("\u0041\u0050");
_cgfad !=nil {_edaca .AP =_cc .TraceToDirectObject (_cgfad ).(*_cc .PdfObjectDictionary );};if _afad :=_dbcfg .Get ("\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074");_afad !=nil {_edaca .JavaScript =_cc .TraceToDirectObject (_afad ).(*_cc .PdfObjectDictionary );
};if _cbbgg :=_dbcfg .Get ("\u0050\u0061\u0067e\u0073");_cbbgg !=nil {_edaca .Pages =_cc .TraceToDirectObject (_cbbgg ).(*_cc .PdfObjectDictionary );};if _gaeae :=_dbcfg .Get ("\u0054e\u006d\u0070\u006c\u0061\u0074\u0065s");_gaeae !=nil {_edaca .Templates =_cc .TraceToDirectObject (_gaeae ).(*_cc .PdfObjectDictionary );
};if _baecd :=_dbcfg .Get ("\u0049\u0044\u0053");_baecd !=nil {_edaca .IDS =_cc .TraceToDirectObject (_baecd ).(*_cc .PdfObjectDictionary );};if _gdedd :=_dbcfg .Get ("\u0055\u0052\u004c\u0053");_gdedd !=nil {_edaca .URLS =_cc .TraceToDirectObject (_gdedd ).(*_cc .PdfObjectDictionary );
};if _fcab :=_dbcfg .Get ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u0069\u006c\u0065\u0073");_fcab !=nil {_edaca .EmbeddedFiles =_cc .TraceToDirectObject (_fcab ).(*_cc .PdfObjectDictionary );};if _abbca :=_dbcfg .Get ("\u0041\u006c\u0074\u0065rn\u0061\u0074\u0065\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006fn\u0073");
_abbca !=nil {_edaca .AlternatePresentations =_cc .TraceToDirectObject (_abbca ).(*_cc .PdfObjectDictionary );};if _fdcd :=_dbcfg .Get ("\u0052\u0065\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0073");_fdcd !=nil {_edaca .Renditions =_cc .TraceToDirectObject (_fdcd ).(*_cc .PdfObjectDictionary );
};return _edaca ;};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_bddeb *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _ede .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_bddeb .S =subtype ;return nil ;};type fontCommon struct{_baac string ;_edfc string ;_cbdc string ;_dcadd _cc .PdfObject ;_fgbf *_fac .CMap ;_cagc *PdfFontDescriptor ;_cedf int64 ;};

// PartialName returns the partial name of the field.
func (_abgga *PdfField )PartialName ()string {_aeab :="";if _abgga .T !=nil {_aeab =_abgga .T .Decoded ();}else {_df .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _aeab ;};

// ToPdfObject returns the PDF representation of the function.
func (_ffceef *PdfFunctionType2 )ToPdfObject ()_cc .PdfObject {_gdca :=_cc .MakeDict ();_gdca .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cc .MakeInteger (2));_eaea :=&_cc .PdfObjectArray {};for _ ,_acded :=range _ffceef .Domain {_eaea .Append (_cc .MakeFloat (_acded ));
};_gdca .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_eaea );if _ffceef .Range !=nil {_bdbaf :=&_cc .PdfObjectArray {};for _ ,_bfgc :=range _ffceef .Range {_bdbaf .Append (_cc .MakeFloat (_bfgc ));};_gdca .Set ("\u0052\u0061\u006eg\u0065",_bdbaf );};if _ffceef .C0 !=nil {_cgbde :=&_cc .PdfObjectArray {};
for _ ,_bcfc :=range _ffceef .C0 {_cgbde .Append (_cc .MakeFloat (_bcfc ));};_gdca .Set ("\u0043\u0030",_cgbde );};if _ffceef .C1 !=nil {_becgb :=&_cc .PdfObjectArray {};for _ ,_daagb :=range _ffceef .C1 {_becgb .Append (_cc .MakeFloat (_daagb ));};_gdca .Set ("\u0043\u0031",_becgb );
};_gdca .Set ("\u004e",_cc .MakeFloat (_ffceef .N ));if _ffceef ._ebdbg !=nil {_ffceef ._ebdbg .PdfObject =_gdca ;return _ffceef ._ebdbg ;};return _gdca ;};

// Val returns the value of the color.
func (_eaab *PdfColorCalGray )Val ()float64 {return float64 (*_eaab )};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _cc .PdfObject )(*PdfFont ,error ){return _efbc (fontObj ,true )};var _ pdfFont =(*pdfFontType0 )(nil );func (_efcdd *PdfWriter )makeOffSetReference (_dbcfd int64 ){_cbba :=_c .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_dbcfd );
_efcdd .writeString (_cbba );_efcdd .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _bd .Permissions ;Algorithm EncryptionAlgorithm ;};func (_aebe *PdfWriter )copyObjects (){_badfa :=make (map[_cc .PdfObject ]_cc .PdfObject );_dccea :=make ([]_cc .PdfObject ,0,len (_aebe ._gedfdc ));_acdadd :=make (map[_cc .PdfObject ]struct{},len (_aebe ._gedfdc ));
_eacgd :=make (map[_cc .PdfObject ]struct{});for _ ,_gcdcb :=range _aebe ._gedfdc {_cafga :=_aebe .copyObject (_gcdcb ,_badfa ,_eacgd ,false );if _ ,_agfee :=_eacgd [_gcdcb ];_agfee {continue ;};_dccea =append (_dccea ,_cafga );_acdadd [_cafga ]=struct{}{};
};_aebe ._gedfdc =_dccea ;_aebe ._abbbc =_acdadd ;_aebe ._egdc =_aebe .copyObject (_aebe ._egdc ,_badfa ,nil ,false ).(*_cc .PdfIndirectObject );_aebe ._fedec =_aebe .copyObject (_aebe ._fedec ,_badfa ,nil ,false ).(*_cc .PdfIndirectObject );if _aebe ._acged !=nil {_aebe ._acged =_aebe .copyObject (_aebe ._acged ,_badfa ,nil ,false ).(*_cc .PdfIndirectObject );
};if _aebe ._dfeeg {_beedf :=make (map[_cc .PdfObject ]int64 );for _bffce ,_fccg :=range _aebe ._dcacf {if _bcagc ,_beaa :=_badfa [_bffce ];_beaa {_beedf [_bcagc ]=_fccg ;}else {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_aebe ._dcacf =_beedf ;};};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_cfec :=map[rune ]int {};for _ ,_gdacb :=range text {_cfec [_gdacb ]++;};return _cfec ;};

// GetAction returns the PDF action for the annotation link.
func (_bba *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _bba ._gfgd !=nil {return _bba ._gfgd ,nil ;};if _bba .A ==nil {return nil ,nil ;};if _bba ._fab ==nil {return nil ,nil ;};_gab ,_acf :=_bba ._fab .loadAction (_bba .A );if _acf !=nil {return nil ,_acf ;
};_bba ._gfgd =_gab ;return _bba ._gfgd ,nil ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_bebe *PdfFieldButton )IsRadio ()bool {return _bebe .GetType ()==ButtonTypeRadio };func _aeacd ()string {_aaefb .Lock ();defer _aaefb .Unlock ();return _fgeb };

// WriteString outputs the object as it is to be written to file.
func (_eeeab *PdfTransformParamsDocMDP )WriteString ()string {return _eeeab .ToPdfObject ().WriteString ();};func (_gbg *PdfReader )newPdfAnnotationTextFromDict (_eaag *_cc .PdfObjectDictionary )(*PdfAnnotationText ,error ){_agea :=PdfAnnotationText {};
_gdgg ,_ddf :=_gbg .newPdfAnnotationMarkupFromDict (_eaag );if _ddf !=nil {return nil ,_ddf ;};_agea .PdfAnnotationMarkup =_gdgg ;_agea .Open =_eaag .Get ("\u004f\u0070\u0065\u006e");_agea .Name =_eaag .Get ("\u004e\u0061\u006d\u0065");_agea .State =_eaag .Get ("\u0053\u0074\u0061t\u0065");
_agea .StateModel =_eaag .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_agea ,nil ;};func (_dacdd *PdfAcroForm )fillImageWithAppearance (_defb FieldImageProvider ,_fffb FieldAppearanceGenerator )error {if _dacdd ==nil {return nil ;
};_bfaedb ,_cdffe :=_defb .FieldImageValues ();if _cdffe !=nil {return _cdffe ;};for _ ,_bgggf :=range _dacdd .AllFields (){_ddebaf :=_bgggf .PartialName ();_cdfbc ,_egfae :=_bfaedb [_ddebaf ];if !_egfae {if _gcbee ,_dgbcb :=_bgggf .FullName ();_dgbcb ==nil {_cdfbc ,_egfae =_bfaedb [_gcbee ];
};};if !_egfae {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_ddebaf );
continue ;};switch _gdagb :=_bgggf .GetContext ().(type ){case *PdfFieldButton :if _gdagb .IsPush (){_gdagb .SetFillImage (_cdfbc );};};if _fffb ==nil {continue ;};for _ ,_baaed :=range _bgggf .Annotations {_aagg ,_cbdf :=_fffb .GenerateAppearanceDict (_dacdd ,_bgggf ,_baaed );
if _cbdf !=nil {return _cbdf ;};_baaed .AP =_aagg ;_baaed .ToPdfObject ();};};return nil ;};

// String returns a string describing the font descriptor.
func (_ebeda *PdfFontDescriptor )String ()string {var _aegc []string ;if _ebeda .FontName !=nil {_aegc =append (_aegc ,_ebeda .FontName .String ());};if _ebeda .FontFamily !=nil {_aegc =append (_aegc ,_ebeda .FontFamily .String ());};if _ebeda .fontFile !=nil {_aegc =append (_aegc ,_ebeda .fontFile .String ());
};if _ebeda ._gbgc !=nil {_aegc =append (_aegc ,_ebeda ._gbgc .String ());};_aegc =append (_aegc ,_c .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_ebeda .FontFile3 !=nil ));return _c .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_fa .Join (_aegc ,"\u002c\u0020"));
};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_ccfb *PdfPageResources )HasExtGState (keyName _cc .PdfObjectName )bool {_ ,_gebab :=_ccfb .GetFontByName (keyName );return _gebab ;};func (_ebd *PdfReader )newPdfAnnotationPopupFromDict (_ccea *_cc .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_fddf :=PdfAnnotationPopup {};
_fddf .Parent =_ccea .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_fddf .Open =_ccea .Get ("\u004f\u0070\u0065\u006e");return &_fddf ,nil ;};func (_eed *PdfReader )newPdfAnnotationScreenFromDict (_ffece *_cc .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_gdec :=PdfAnnotationScreen {};
_gdec .T =_ffece .Get ("\u0054");_gdec .MK =_ffece .Get ("\u004d\u004b");_gdec .A =_ffece .Get ("\u0041");_gdec .AA =_ffece .Get ("\u0041\u0041");return &_gdec ,nil ;};

// GetNumPages returns the number of pages in the document.
func (_cafec *PdfReader )GetNumPages ()(int ,error ){if _cafec ._bbed .GetCrypter ()!=nil &&!_cafec ._bbed .IsAuthenticated (){return 0,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_cafec ._fbad ),nil ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_efcf *PdfPage )AppendContentStream (contentStr string )error {_acfdf ,_gcacg :=_efcf .GetContentStreams ();if _gcacg !=nil {return _gcacg ;};if len (_acfdf )==0{_acfdf =[]string {contentStr };return _efcf .SetContentStreams (_acfdf ,_cc .NewFlateEncoder ());
};var _agfc _aac .Buffer ;_agfc .WriteString (_acfdf [len (_acfdf )-1]);_agfc .WriteString ("\u000a");_agfc .WriteString (contentStr );_acfdf [len (_acfdf )-1]=_agfc .String ();return _efcf .SetContentStreams (_acfdf ,_cc .NewFlateEncoder ());};func (_abcad *PdfReader )lookupPageByObject (_gedbd _cc .PdfObject )(*PdfPage ,error ){return nil ,_ede .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_gebde int ,_adfcg *PdfPage );

// Encoder iterates through the list of fonts and returns a working encoder
func (_gaaf *MultipleFontEncoder )Encoder (rn rune )(_cbf .TextEncoder ,bool ){_ebbga :=_gaaf .CurrentFont ;_gcagd :=_ebbga .Encoder ();_ ,_aaef :=_gcagd .RuneToCharcode (rn );for _cfcga :=1;_cfcga < len (_gaaf ._dbfbg )&&!_aaef ;_cfcga ++{_ebbga =_gaaf ._dbfbg [_cfcga ];
_gcagd =_ebbga .Encoder ();_ ,_aaef =_gcagd .RuneToCharcode (rn );_gaaf .CurrentFont =_ebbga ;};return _gcagd ,_aaef ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_egffe *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_gbdf :=NewPdfOutlineItem ();_gbdf .Title =_cc .MakeEncodedString (_egffe .Title ,true );_gbdf .Dest =_egffe .Dest .ToPdfObject ();var _badag []*PdfOutlineItem ;var _adgbg int64 ;var _bdbc *PdfOutlineItem ;
for _ ,_feagfb :=range _egffe .Entries {_dfdbg ,_ecdcf :=_feagfb .ToPdfOutlineItem ();_dfdbg .Parent =&_gbdf .PdfOutlineTreeNode ;if _bdbc !=nil {_bdbc .Next =&_dfdbg .PdfOutlineTreeNode ;_dfdbg .Prev =&_bdbc .PdfOutlineTreeNode ;};_badag =append (_badag ,_dfdbg );
_adgbg +=_ecdcf ;_bdbc =_dfdbg ;};_gcabg :=len (_badag );_adgbg +=int64 (_gcabg );if _gcabg > 0{_gbdf .First =&_badag [0].PdfOutlineTreeNode ;_gbdf .Last =&_badag [_gcabg -1].PdfOutlineTreeNode ;_gbdf .Count =&_adgbg ;};return _gbdf ,_adgbg ;};

// GetStandardApplier gets currently used StandardApplier..
func (_ccbgd *PdfWriter )GetStandardApplier ()StandardApplier {return _ccbgd ._gdebc };

// C returns the value of the C component of the color.
func (_cacf *PdfColorCalRGB )C ()float64 {return _cacf [2]};func (_eaae *PdfAppender )mergeResources (_bddg ,_agdg _cc .PdfObject ,_abg map[_cc .PdfObjectName ]_cc .PdfObjectName )_cc .PdfObject {if _agdg ==nil &&_bddg ==nil {return nil ;};if _agdg ==nil {return _bddg ;
};_efac ,_fcd :=_cc .GetDict (_agdg );if !_fcd {return _bddg ;};if _bddg ==nil {_ecddg :=_cc .MakeDict ();_ecddg .Merge (_efac );return _agdg ;};_fefc ,_fcd :=_cc .GetDict (_bddg );if !_fcd {_df .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_fefc =_cc .MakeDict ();};for _ ,_gaag :=range _efac .Keys (){if _fbbac ,_ddge :=_abg [_gaag ];_ddge {_fefc .Set (_fbbac ,_efac .Get (_gaag ));}else {_fefc .Set (_gaag ,_efac .Get (_gaag ));};};return _fefc ;};

// ToPdfObject implements interface PdfModel.
func (_eacg *PdfActionGoToR )ToPdfObject ()_cc .PdfObject {_eacg .PdfAction .ToPdfObject ();_ecd :=_eacg ._dae ;_agf :=_ecd .PdfObject .(*_cc .PdfObjectDictionary );_agf .SetIfNotNil ("\u0053",_cc .MakeName (string (ActionTypeGoToR )));if _eacg .F !=nil {_agf .Set ("\u0046",_eacg .F .ToPdfObject ());
};_agf .SetIfNotNil ("\u0044",_eacg .D );_agf .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_eacg .NewWindow );return _ecd ;};

// SetForms sets the Acroform for a PDF file.
func (_acade *PdfWriter )SetForms (form *PdfAcroForm )error {_acade ._fadf =form ;return nil };

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_gadeg *_cc .PdfObjectDictionary ;};func _fdaad ()string {_aaefb .Lock ();defer _aaefb .Unlock ();return _fegf };

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cc .PdfObject ;};func (_egdad *PdfShading )getShadingDict ()(*_cc .PdfObjectDictionary ,error ){_beadde :=_egdad ._ccfe ;if _fdgba ,_fbdgd :=_beadde .(*_cc .PdfIndirectObject );
_fbdgd {_feecb ,_bcbfg :=_fdgba .PdfObject .(*_cc .PdfObjectDictionary );if !_bcbfg {return nil ,_cc .ErrTypeError ;};return _feecb ,nil ;}else if _ffbba ,_faedc :=_beadde .(*_cc .PdfObjectStream );_faedc {return _ffbba .PdfObjectDictionary ,nil ;}else if _aefa ,_dadea :=_beadde .(*_cc .PdfObjectDictionary );
_dadea {return _aefa ,nil ;}else {_df .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_cc .ErrTypeError ;
};};

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_eabbg *PdfReader )GetCatalogStructTreeRoot ()(_cc .PdfObject ,bool ){if _eabbg ._gfed ==nil {return nil ,false ;};_dbgae :=_eabbg ._gfed .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return _dbgae ,_dbgae !=nil ;
};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _cc .PdfObject ;Open _cc .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_dda *PdfActionGoTo3DView )ToPdfObject ()_cc .PdfObject {_dda .PdfAction .ToPdfObject ();_gag :=_dda ._dae ;_dcg :=_gag .PdfObject .(*_cc .PdfObjectDictionary );_dcg .SetIfNotNil ("\u0053",_cc .MakeName (string (ActionTypeGoTo3DView )));_dcg .SetIfNotNil ("\u0054\u0041",_dda .TA );
_dcg .SetIfNotNil ("\u0056",_dda .V );return _gag ;};

// String returns a string that describes `font`.
func (_eeaa *PdfFont )String ()string {_gdbf :="";if _eeaa ._ggec .Encoder ()!=nil {_gdbf =_eeaa ._ggec .Encoder ().String ();};return _c .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_eeaa ._ggec ,_eeaa .baseFields ().coreString (),_gdbf );
};func (_gedcb *PdfWriter )optimize ()error {if _gedcb ._cbgef ==nil {return nil ;};var _gdddc error ;_gedcb ._gedfdc ,_gdddc =_gedcb ._cbgef .Optimize (_gedcb ._gedfdc );if _gdddc !=nil {return _gdddc ;};_ggag :=make (map[_cc .PdfObject ]struct{},len (_gedcb ._gedfdc ));
for _ ,_gbfde :=range _gedcb ._gedfdc {_ggag [_gbfde ]=struct{}{};};_gedcb ._abbbc =_ggag ;return nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gafee *PdfColorspaceDeviceRGB )ToPdfObject ()_cc .PdfObject {return _cc .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _cc .PdfObject ;LE _cc .PdfObject ;BS _cc .PdfObject ;IC _cc .PdfObject ;BE _cc .PdfObject ;IT _cc .PdfObject ;Measure _cc .PdfObject ;};func (_eef *PdfReader )newPdfActionLaunchFromDict (_efd *_cc .PdfObjectDictionary )(*PdfActionLaunch ,error ){_ecce ,_eab :=_gfg (_efd .Get ("\u0046"));
if _eab !=nil {return nil ,_eab ;};return &PdfActionLaunch {Win :_efd .Get ("\u0057\u0069\u006e"),Mac :_efd .Get ("\u004d\u0061\u0063"),Unix :_efd .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_efd .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_ecce },nil ;
};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_bedf *PdfPageResources )HasXObjectByName (keyName _cc .PdfObjectName )bool {_cdfeg ,_ :=_bedf .GetXObjectByName (keyName );return _cdfeg !=nil ;};func _adade (_eccdc _cc .PdfObject )(PdfFunction ,error ){_eccdc =_cc .ResolveReference (_eccdc );if _aebc ,_cffc :=_eccdc .(*_cc .PdfObjectStream );
_cffc {_facfd :=_aebc .PdfObjectDictionary ;_baaaf ,_aecfb :=_facfd .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_cc .PdfObjectInteger );if !_aecfb {_df .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ede .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_baaaf ==0{return _cdgf (_aebc );}else if *_baaaf ==4{return _eecbc (_aebc );
}else {return nil ,_ede .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _ceced ,_geag :=_eccdc .(*_cc .PdfIndirectObject );_geag {_eabbf ,_dcaae :=_ceced .PdfObject .(*_cc .PdfObjectDictionary );
if !_dcaae {_df .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_ede .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_ffage ,_dcaae :=_eabbf .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_cc .PdfObjectInteger );
if !_dcaae {_df .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ede .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_ffage ==2{return _affc (_ceced );}else if *_ffage ==3{return _bfcg (_ceced );}else {return nil ,_ede .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _eccfc ,_bfbe :=_eccdc .(*_cc .PdfObjectDictionary );
_bfbe {_ccbf ,_cgebf :=_eccfc .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_cc .PdfObjectInteger );if !_cgebf {_df .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ede .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_ccbf ==2{return _affc (_eccfc );}else if *_ccbf ==3{return _bfcg (_eccfc );
}else {return nil ,_ede .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_df .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_eccdc );
return nil ,_ede .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_bdfa *Outline )ToPdfOutline ()*PdfOutline {_cbbc :=NewPdfOutline ();var _ccfg []*PdfOutlineItem ;var _bgeb int64 ;var _bbgga *PdfOutlineItem ;for _ ,_fffdb :=range _bdfa .Entries {_abgad ,_ddef :=_fffdb .ToPdfOutlineItem ();_abgad .Parent =&_cbbc .PdfOutlineTreeNode ;
if _bbgga !=nil {_bbgga .Next =&_abgad .PdfOutlineTreeNode ;_abgad .Prev =&_bbgga .PdfOutlineTreeNode ;};_ccfg =append (_ccfg ,_abgad );_bgeb +=_ddef ;_bbgga =_abgad ;};_afede :=int64 (len (_ccfg ));_bgeb +=_afede ;if _afede > 0{_cbbc .First =&_ccfg [0].PdfOutlineTreeNode ;
_cbbc .Last =&_ccfg [_afede -1].PdfOutlineTreeNode ;_cbbc .Count =&_bgeb ;};return _cbbc ;};func (_cccb *PdfReader )newPdfAnnotationStrikeOut (_fdcg *_cc .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_gcfc :=PdfAnnotationStrikeOut {};_gce ,_daag :=_cccb .newPdfAnnotationMarkupFromDict (_fdcg );
if _daag !=nil {return nil ,_daag ;};_gcfc .PdfAnnotationMarkup =_gce ;_gcfc .QuadPoints =_fdcg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gcfc ,nil ;};func (_gcfdb *PdfReader )newPdfAnnotationLineFromDict (_ffcc *_cc .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_efdaf :=PdfAnnotationLine {};
_cbg ,_eabe :=_gcfdb .newPdfAnnotationMarkupFromDict (_ffcc );if _eabe !=nil {return nil ,_eabe ;};_efdaf .PdfAnnotationMarkup =_cbg ;_efdaf .L =_ffcc .Get ("\u004c");_efdaf .BS =_ffcc .Get ("\u0042\u0053");_efdaf .LE =_ffcc .Get ("\u004c\u0045");_efdaf .IC =_ffcc .Get ("\u0049\u0043");
_efdaf .LL =_ffcc .Get ("\u004c\u004c");_efdaf .LLE =_ffcc .Get ("\u004c\u004c\u0045");_efdaf .Cap =_ffcc .Get ("\u0043\u0061\u0070");_efdaf .IT =_ffcc .Get ("\u0049\u0054");_efdaf .LLO =_ffcc .Get ("\u004c\u004c\u004f");_efdaf .CP =_ffcc .Get ("\u0043\u0050");
_efdaf .Measure =_ffcc .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_efdaf .CO =_ffcc .Get ("\u0043\u004f");return &_efdaf ,nil ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_cgcc *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_cc .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_ede .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_ceee :=&PdfColorPattern {};_gacg ,_deeb :=objects [len (objects )-1].(*_cc .PdfObjectName );if !_deeb {_df .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_ceee .PatternName =*_gacg ;if len (objects )> 1{_gcbd :=objects [0:len (objects )-1];if _cgcc .UnderlyingCS ==nil {_df .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_ede .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_agb ,_gfe :=_cgcc .UnderlyingCS .ColorFromPdfObjects (_gcbd );if _gfe !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_gfe );
return nil ,_gfe ;};_ceee .Color =_agb ;};return _ceee ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_egac *PdfColorspaceSpecialPattern )ToPdfObject ()_cc .PdfObject {if _egac .UnderlyingCS ==nil {return _cc .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_eddg :=_cc .MakeArray (_cc .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_eddg .Append (_egac .UnderlyingCS .ToPdfObject ());
if _egac ._aadd !=nil {_egac ._aadd .PdfObject =_eddg ;return _egac ._aadd ;};return _eddg ;};func (_faacf *PdfWriter )copyObject (_gcdgfb _cc .PdfObject ,_afebc map[_cc .PdfObject ]_cc .PdfObject ,_ffbaf map[_cc .PdfObject ]struct{},_eaabe bool )_cc .PdfObject {_eecab :=!_faacf ._dfeeg &&_ffbaf !=nil ;
if _gddfg ,_ccdge :=_afebc [_gcdgfb ];_ccdge {if _eecab &&!_eaabe {delete (_ffbaf ,_gcdgfb );};return _gddfg ;};if _gcdgfb ==nil {_cbafa :=_cc .MakeNull ();return _cbafa ;};_dbgga :=_gcdgfb ;switch _fcgdbd :=_gcdgfb .(type ){case *_cc .PdfObjectArray :_fbcbc :=_cc .MakeArray ();
_dbgga =_fbcbc ;_afebc [_gcdgfb ]=_dbgga ;for _ ,_cddbf :=range _fcgdbd .Elements (){_fbcbc .Append (_faacf .copyObject (_cddbf ,_afebc ,_ffbaf ,_eaabe ));};case *_cc .PdfObjectStreams :_cccad :=&_cc .PdfObjectStreams {PdfObjectReference :_fcgdbd .PdfObjectReference };
_dbgga =_cccad ;_afebc [_gcdgfb ]=_dbgga ;for _ ,_dbaba :=range _fcgdbd .Elements (){_cccad .Append (_faacf .copyObject (_dbaba ,_afebc ,_ffbaf ,_eaabe ));};case *_cc .PdfObjectStream :_egcaa :=&_cc .PdfObjectStream {Stream :_fcgdbd .Stream ,PdfObjectReference :_fcgdbd .PdfObjectReference ,Lazy :_fcgdbd .Lazy ,TempFile :_fcgdbd .TempFile };
_dbgga =_egcaa ;_afebc [_gcdgfb ]=_dbgga ;_egcaa .PdfObjectDictionary =_faacf .copyObject (_fcgdbd .PdfObjectDictionary ,_afebc ,_ffbaf ,_eaabe ).(*_cc .PdfObjectDictionary );case *_cc .PdfObjectDictionary :var _dbfeb bool ;if _eecab &&!_eaabe {if _aecdc ,_ :=_cc .GetNameVal (_fcgdbd .Get ("\u0054\u0079\u0070\u0065"));
_aecdc =="\u0050\u0061\u0067\u0065"{_ ,_dfdcb :=_faacf ._bbegb [_fcgdbd ];_eaabe =!_dfdcb ;_dbfeb =_eaabe ;};};_ffcag :=_cc .MakeDict ();_dbgga =_ffcag ;_afebc [_gcdgfb ]=_dbgga ;for _ ,_acaab :=range _fcgdbd .Keys (){_ffcag .Set (_acaab ,_faacf .copyObject (_fcgdbd .Get (_acaab ),_afebc ,_ffbaf ,_eaabe ));
};if _dbfeb {_dbgga =_cc .MakeNull ();_eaabe =false ;};case *_cc .PdfIndirectObject :_bagee :=&_cc .PdfIndirectObject {PdfObjectReference :_fcgdbd .PdfObjectReference };_dbgga =_bagee ;_afebc [_gcdgfb ]=_dbgga ;_bagee .PdfObject =_faacf .copyObject (_fcgdbd .PdfObject ,_afebc ,_ffbaf ,_eaabe );
case *_cc .PdfObjectString :_egfba :=*_fcgdbd ;_dbgga =&_egfba ;_afebc [_gcdgfb ]=_dbgga ;case *_cc .PdfObjectName :_ebea :=*_fcgdbd ;_dbgga =&_ebea ;_afebc [_gcdgfb ]=_dbgga ;case *_cc .PdfObjectNull :_dbgga =_cc .MakeNull ();_afebc [_gcdgfb ]=_dbgga ;
case *_cc .PdfObjectInteger :_cdcd :=*_fcgdbd ;_dbgga =&_cdcd ;_afebc [_gcdgfb ]=_dbgga ;case *_cc .PdfObjectReference :_gddcf :=*_fcgdbd ;_dbgga =&_gddcf ;_afebc [_gcdgfb ]=_dbgga ;case *_cc .PdfObjectFloat :_aeced :=*_fcgdbd ;_dbgga =&_aeced ;_afebc [_gcdgfb ]=_dbgga ;
case *_cc .PdfObjectBool :_aedeg :=*_fcgdbd ;_dbgga =&_aedeg ;_afebc [_gcdgfb ]=_dbgga ;case *pdfSignDictionary :_cgecg :=&pdfSignDictionary {PdfObjectDictionary :_cc .MakeDict (),_bdfg :_fcgdbd ._bdfg ,_fdeef :_fcgdbd ._fdeef };_dbgga =_cgecg ;_afebc [_gcdgfb ]=_dbgga ;
for _ ,_cfbcbb :=range _fcgdbd .Keys (){_cgecg .Set (_cfbcbb ,_faacf .copyObject (_fcgdbd .Get (_cfbcbb ),_afebc ,_ffbaf ,_eaabe ));};default:_df .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_gcdgfb );
};if _eecab &&_eaabe {_ffbaf [_gcdgfb ]=struct{}{};};return _dbgga ;};

// SetFlag sets the flag for the field.
func (_afgd *PdfField )SetFlag (flag FieldFlag ){_afgd .Ff =_cc .MakeInteger (int64 (flag ))};func (_ecbe *PdfPage )flattenFieldsWithOpts (_feca FieldAppearanceGenerator ,_ecgd *FieldFlattenOpts ,_agdc map[*PdfAnnotation ]bool )error {var _cdda []*PdfAnnotation ;
if _feca !=nil {if _dcdbbb :=_feca .WrapContentStream (_ecbe );_dcdbbb !=nil {return _dcdbbb ;};};_aecfa ,_fcgec :=_ecbe .GetAnnotations ();if _fcgec !=nil {return _fcgec ;};for _ ,_fbcc :=range _aecfa {_dgaa ,_caaf :=_agdc [_fbcc ];if !_caaf &&_ecgd .AnnotFilterFunc !=nil {if _ ,_defeg :=_fbcc .GetContext ().(*PdfAnnotationWidget );
!_defeg {_caaf =_ecgd .AnnotFilterFunc (_fbcc );};};if !_caaf {_cdda =append (_cdda ,_fbcc );continue ;};switch _fbcc .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_fefgc ,_acgaf ,_gggff :=_badc (_fbcc );if _gggff !=nil {if !_dgaa {_df .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_gggff );
continue ;};if _fefgc ==nil {continue ;};_fcfa :=_ecbe .Resources .GenerateXObjectName ();_ecbe .Resources .SetXObjectFormByName (_fcfa ,_fefgc );_bbgad ,_agaef ,_gggff :=_dfca (_fefgc );if _gggff !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0061\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u004d\u0061\u0074\u0072\u0069\u0078\u002c\u0020s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0078\u0066\u006f\u0072\u006d\u0020\u0062\u0062\u006f\u0078\u0020\u0061\u0064\u006a\u0075\u0073t\u006d\u0065\u006e\u0074\u003a \u0025\u0076",_gggff );
}else {_egfg :=_ga .IdentityMatrix ();_egfg =_egfg .Translate (-_bbgad .Llx ,-_bbgad .Lly );if _agaef {_dabgg :=0.0;if _bbgad .Width ()> 0{_dabgg =_acgaf .Width ()/_bbgad .Width ();};_effac :=0.0;if _bbgad .Height ()> 0{_effac =_acgaf .Height ()/_bbgad .Height ();
};_egfg =_egfg .Scale (_dabgg ,_effac );};_acgaf .Transform (_egfg );};_acbed :=_ed .Min (_acgaf .Llx ,_acgaf .Urx );_dfcb :=_ed .Min (_acgaf .Lly ,_acgaf .Ury );var _cgfab []string ;_cgfab =append (_cgfab ,"\u0071");_cgfab =append (_cgfab ,_c .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_acbed ,_dfcb ));
_cgfab =append (_cgfab ,_c .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_fcfa .String ()));_cgfab =append (_cgfab ,"\u0051");_fabc :=_fa .Join (_cgfab ,"\u000a");_gggff =_ecbe .AppendContentStream (_fabc );if _gggff !=nil {return _gggff ;};if _fefgc .Resources !=nil {_ageb ,_efbbf :=_cc .GetDict (_fefgc .Resources .Font );
if _efbbf {for _ ,_gbfa :=range _ageb .Keys (){if !_ecbe .Resources .HasFontByName (_gbfa ){_ecbe .Resources .SetFontByName (_gbfa ,_ageb .Get (_gbfa ));};};};};};if len (_cdda )> 0{_ecbe ._dagff =_cdda ;}else {_ecbe ._dagff =[]*PdfAnnotation {};};return nil ;
};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _cc .PdfObject ;Name _cc .PdfObject ;};func (_dbege *PdfWriter )getPdfVersion ()string {return _c .Sprintf ("\u0025\u0064\u002e%\u0064",_dbege ._gfgfa .Major ,_dbege ._gfgfa .Minor );
};func _eddd (_aafce _cc .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_dgcg :=NewPdfColorspaceSpecialSeparation ();if _dfaec ,_adef :=_aafce .(*_cc .PdfIndirectObject );_adef {_dgcg ._degg =_dfaec ;};_aafce =_cc .TraceToDirectObject (_aafce );
_dbec ,_dgbc :=_aafce .(*_cc .PdfObjectArray );if !_dgbc {return nil ,_c .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");};if _dbec .Len ()!=4{return nil ,_c .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");
};_aafce =_dbec .Get (0);_ffdc ,_dgbc :=_aafce .(*_cc .PdfObjectName );if !_dgbc {return nil ,_c .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_ffdc !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_c .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_aafce =_dbec .Get (1);_ffdc ,_dgbc =_aafce .(*_cc .PdfObjectName );if !_dgbc {return nil ,_c .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_dgcg .ColorantName =_ffdc ;_aafce =_dbec .Get (2);_dcef ,_feea :=NewPdfColorspaceFromPdfObject (_aafce );if _feea !=nil {return nil ,_feea ;};_dgcg .AlternateSpace =_dcef ;_gedc ,_feea :=_adade (_dbec .Get (3));if _feea !=nil {return nil ,_feea ;};_dgcg .TintTransform =_gedc ;
return _dgcg ,nil ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// ToPdfObject returns the PDF representation of the function.
func (_ebbdf *PdfFunctionType3 )ToPdfObject ()_cc .PdfObject {_eadgb :=_cc .MakeDict ();_eadgb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cc .MakeInteger (3));_baeca :=&_cc .PdfObjectArray {};for _ ,_fbdaa :=range _ebbdf .Domain {_baeca .Append (_cc .MakeFloat (_fbdaa ));
};_eadgb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_baeca );if _ebbdf .Range !=nil {_baedf :=&_cc .PdfObjectArray {};for _ ,_cgacad :=range _ebbdf .Range {_baedf .Append (_cc .MakeFloat (_cgacad ));};_eadgb .Set ("\u0052\u0061\u006eg\u0065",_baedf );
};if _ebbdf .Functions !=nil {_bede :=&_cc .PdfObjectArray {};for _ ,_bggac :=range _ebbdf .Functions {_bede .Append (_bggac .ToPdfObject ());};_eadgb .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_bede );};if _ebbdf .Bounds !=nil {_cdffea :=&_cc .PdfObjectArray {};
for _ ,_acbace :=range _ebbdf .Bounds {_cdffea .Append (_cc .MakeFloat (_acbace ));};_eadgb .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_cdffea );};if _ebbdf .Encode !=nil {_bbgf :=&_cc .PdfObjectArray {};for _ ,_afab :=range _ebbdf .Encode {_bbgf .Append (_cc .MakeFloat (_afab ));
};_eadgb .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_bbgf );};if _ebbdf ._bacag !=nil {_ebbdf ._bacag .PdfObject =_eadgb ;return _ebbdf ._bacag ;};return _eadgb ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_bcdcg *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _bcdcg ._cffda !=nil {return _bcdcg ._cffda ,nil ;};if _bcdcg .ColorSpace ==nil {return nil ,nil ;};_aabe ,_dffcg :=_afefc (_bcdcg .ColorSpace );if _dffcg !=nil {return nil ,_dffcg ;
};_bcdcg ._cffda =_aabe ;return _bcdcg ._cffda ,nil ;};func (_egdb *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_bdcge *PdfAnnotation )GetContext ()PdfModel {if _bdcge ==nil {return nil ;};return _bdcge ._fae ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_ebeee *OutlineItem )Insert (index uint ,item *OutlineItem ){_egdge :=uint (len (_ebeee .Entries ));if index > _egdge {index =_egdge ;};_ebeee .Entries =append (_ebeee .Entries [:index ],append ([]*OutlineItem {item },_ebeee .Entries [index :]...)...);
};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_geeb *PdfField )GetContainingPdfObject ()_cc .PdfObject {return _geeb ._geafg };func (_bdaae fontCommon )asPdfObjectDictionary (_gbbd string )*_cc .PdfObjectDictionary {if _gbbd !=""&&_bdaae ._edfc !=""&&_gbbd !=_bdaae ._edfc {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_gbbd ,_bdaae );
}else if _gbbd ==""&&_bdaae ._edfc ==""{_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_bdaae );
}else if _bdaae ._edfc ==""{_bdaae ._edfc =_gbbd ;};_bcecb :=_cc .MakeDict ();_bcecb .Set ("\u0054\u0079\u0070\u0065",_cc .MakeName ("\u0046\u006f\u006e\u0074"));_bcecb .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_cc .MakeName (_bdaae ._baac ));
_bcecb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName (_bdaae ._edfc ));if _bdaae ._cagc !=nil {_bcecb .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_bdaae ._cagc .ToPdfObject ());};if _bdaae ._dcadd !=nil {_bcecb .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_bdaae ._dcadd );
}else if _bdaae ._fgbf !=nil {_ffdg ,_aabd :=_bdaae ._fgbf .Stream ();if _aabd !=nil {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_aabd );
}else {_bcecb .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_ffdg );};};return _bcecb ;};func (_fbcef *PdfWriter )writeDocumentVersion (){if _fbcef ._dfeeg {_fbcef .writeString ("\u000a");}else {_fbcef .writeString (_c .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_fbcef ._gfgfa .Major ,_fbcef ._gfgfa .Minor ));
_fbcef .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};func (_ccef *PdfReader )newPdfAnnotationHighlightFromDict (_fgc *_cc .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_gfcf :=PdfAnnotationHighlight {};
_dba ,_gcc :=_ccef .newPdfAnnotationMarkupFromDict (_fgc );if _gcc !=nil {return nil ,_gcc ;};_gfcf .PdfAnnotationMarkup =_dba ;_gfcf .QuadPoints =_fgc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gfcf ,nil ;};func (_badg *PdfWriter )writeObjectsInStreams (_eccag map[_cc .PdfObject ]bool )error {for _ ,_bcddd :=range _badg ._gedfdc {if _cegfde :=_eccag [_bcddd ];
_cegfde {continue ;};_gaagd :=int64 (0);switch _cgggc :=_bcddd .(type ){case *_cc .PdfIndirectObject :_gaagd =_cgggc .ObjectNumber ;case *_cc .PdfObjectStream :_gaagd =_cgggc .ObjectNumber ;case *_cc .PdfObjectStreams :_gaagd =_cgggc .ObjectNumber ;default:_df .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_bcddd );
return ErrTypeCheck ;};if _badg ._acebb !=nil &&_bcddd !=_badg ._acged {_bcfgf :=_badg ._acebb .Encrypt (_bcddd ,_gaagd ,0);if _bcfgf !=nil {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_bcfgf );
return _bcfgf ;};};_badg .writeObject (int (_gaagd ),_bcddd );};return nil ;};func _ccadda (_bacgf *_cc .PdfObjectDictionary )(*PdfTilingPattern ,error ){_gdbdd :=&PdfTilingPattern {};_dffebc :=_bacgf .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");
if _dffebc ==nil {_df .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_fbbdc ,_gccfc :=_dffebc .(*_cc .PdfObjectInteger );if !_gccfc {_df .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_dffebc );
return nil ,_cc .ErrTypeError ;};_gdbdd .PaintType =_fbbdc ;_dffebc =_bacgf .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _dffebc ==nil {_df .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_fgedb ,_gccfc :=_dffebc .(*_cc .PdfObjectInteger );if !_gccfc {_df .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dffebc );
return nil ,_cc .ErrTypeError ;};_gdbdd .TilingType =_fgedb ;_dffebc =_bacgf .Get ("\u0042\u0042\u006f\u0078");if _dffebc ==nil {_df .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_dffebc =_cc .TraceToDirectObject (_dffebc );_aegbbd ,_gccfc :=_dffebc .(*_cc .PdfObjectArray );if !_gccfc {_df .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dffebc );
return nil ,_cc .ErrTypeError ;};_gafcg ,_bdfee :=NewPdfRectangle (*_aegbbd );if _bdfee !=nil {_df .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_bdfee );return nil ,_bdfee ;};_gdbdd .BBox =_gafcg ;_dffebc =_bacgf .Get ("\u0058\u0053\u0074e\u0070");
if _dffebc ==nil {_df .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_eafage ,_bdfee :=_cc .GetNumberAsFloat (_dffebc );if _bdfee !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_eafage );
return nil ,_bdfee ;};_gdbdd .XStep =_cc .MakeFloat (_eafage );_dffebc =_bacgf .Get ("\u0059\u0053\u0074e\u0070");if _dffebc ==nil {_df .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_fabbf ,_bdfee :=_cc .GetNumberAsFloat (_dffebc );if _bdfee !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_fabbf );
return nil ,_bdfee ;};_gdbdd .YStep =_cc .MakeFloat (_fabbf );_dffebc =_bacgf .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _dffebc ==nil {_df .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bacgf ,_gccfc =_cc .TraceToDirectObject (_dffebc ).(*_cc .PdfObjectDictionary );if !_gccfc {return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_dffebc );
};_effgb ,_bdfee :=NewPdfPageResourcesFromDict (_bacgf );if _bdfee !=nil {return nil ,_bdfee ;};_gdbdd .Resources =_effgb ;if _eeegd :=_bacgf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_eeegd !=nil {_begee ,_dedfe :=_eeegd .(*_cc .PdfObjectArray );if !_dedfe {_df .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eeegd );
return nil ,_cc .ErrTypeError ;};_gdbdd .Matrix =_begee ;};return _gdbdd ,nil ;};

// NewPdfShadingType2 creates an empty shading type 2 dictionary.
func NewPdfShadingType2 ()*PdfShadingType2 {_eaadc :=&PdfShadingType2 {};_eaadc .PdfShading =&PdfShading {};_eaadc .PdfShading ._ccfe =_cc .MakeIndirectObject (_cc .MakeDict ());_eaadc .PdfShading ._beacb =_eaadc ;return _eaadc ;};

// ToPdfObject implements interface PdfModel.
func (_dgea *PdfAnnotationScreen )ToPdfObject ()_cc .PdfObject {_dgea .PdfAnnotation .ToPdfObject ();_dcbe :=_dgea ._cef ;_edfe :=_dcbe .PdfObject .(*_cc .PdfObjectDictionary );_edfe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_edfe .SetIfNotNil ("\u0054",_dgea .T );_edfe .SetIfNotNil ("\u004d\u004b",_dgea .MK );_edfe .SetIfNotNil ("\u0041",_dgea .A );_edfe .SetIfNotNil ("\u0041\u0041",_dgea .AA );return _dcbe ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_dbba *PdfField )ToPdfObject ()_cc .PdfObject {_dbdd :=_dbba ._geafg ;_gfcc :=_dbdd .PdfObject .(*_cc .PdfObjectDictionary );_ccff :=_cc .MakeArray ();for _ ,_cbffa :=range _dbba .Kids {_ccff .Append (_cbffa .ToPdfObject ());};for _ ,_dbfb :=range _dbba .Annotations {if _dbfb ._cef !=_dbba ._geafg {_ccff .Append (_dbfb .GetContext ().ToPdfObject ());
};};if _dbba .Parent !=nil {_gfcc .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dbba .Parent .GetContainingPdfObject ());};if _ccff .Len ()> 0{_gfcc .Set ("\u004b\u0069\u0064\u0073",_ccff );};_gfcc .SetIfNotNil ("\u0046\u0054",_dbba .FT );_gfcc .SetIfNotNil ("\u0054",_dbba .T );
_gfcc .SetIfNotNil ("\u0054\u0055",_dbba .TU );_gfcc .SetIfNotNil ("\u0054\u004d",_dbba .TM );_gfcc .SetIfNotNil ("\u0046\u0066",_dbba .Ff );_gfcc .SetIfNotNil ("\u0056",_dbba .V );_gfcc .SetIfNotNil ("\u0044\u0056",_dbba .DV );_gfcc .SetIfNotNil ("\u0041\u0041",_dbba .AA );
if _dbba .VariableText !=nil {_gfcc .SetIfNotNil ("\u0044\u0041",_dbba .VariableText .DA );_gfcc .SetIfNotNil ("\u0051",_dbba .VariableText .Q );_gfcc .SetIfNotNil ("\u0044\u0053",_dbba .VariableText .DS );_gfcc .SetIfNotNil ("\u0052\u0056",_dbba .VariableText .RV );
};return _dbdd ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _cc .PdfObject ;Dest _cc .PdfObject ;H _cc .PdfObject ;PA _cc .PdfObject ;QuadPoints _cc .PdfObject ;BS _cc .PdfObject ;_gfgd *PdfAction ;_fab *PdfReader ;};

// NewPdfColorPattern returns an empty color pattern.
func NewPdfColorPattern ()*PdfColorPattern {_dgcea :=&PdfColorPattern {};return _dgcea };

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _cc .PdfObject ;NewWindow _cc .PdfObject ;T _cc .PdfObject ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _cc .PdfObject ;Mac _cc .PdfObject ;Unix _cc .PdfObject ;NewWindow _cc .PdfObject ;};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_baefe *PdfWriter )SetOpenAction (dest _cc .PdfObject )error {if dest ==nil ||_cc .IsNullObject (dest ){return nil ;};_baefe ._feff .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _baefe .addObjects (dest );};

// SetPatternByName sets a pattern resource specified by keyName.
func (_fbdf *PdfPageResources )SetPatternByName (keyName _cc .PdfObjectName ,pattern _cc .PdfObject )error {if _fbdf .Pattern ==nil {_fbdf .Pattern =_cc .MakeDict ();};_ddbed ,_dgaae :=_cc .GetDict (_fbdf .Pattern );if !_dgaae {return _cc .ErrTypeError ;
};_ddbed .Set (keyName ,pattern );return nil ;};

// HasXObjectByName checks if has XObject resource by name.
func (_aeaeb *PdfPage )HasXObjectByName (name _cc .PdfObjectName )bool {_cgfgg ,_cdfeb :=_aeaeb .Resources .XObject .(*_cc .PdfObjectDictionary );if !_cdfeb {return false ;};if _eegf :=_cgfgg .Get (name );_eegf !=nil {return true ;};return false ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_fed *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ede .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bdaa :=vals [0];if _bdaa < 0.0||_bdaa > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bdaa );
return nil ,ErrColorOutOfRange ;};_ggdd :=NewPdfColorCalGray (_bdaa );return _ggdd ,nil ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// ToInteger convert to an integer format.
func (_dfbcd *PdfColorDeviceGray )ToInteger (bits int )uint32 {_cabb :=_ed .Pow (2,float64 (bits ))-1;return uint32 (_cabb *_dfbcd .Val ());};func (_efdfg fontCommon )coreString ()string {_dcgb :="";if _efdfg ._cagc !=nil {_dcgb =_efdfg ._cagc .String ();
};return _c .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_efdfg ._edfc ,_efdfg ._baac ,_efdfg ._cbdc ,_efdfg ._cedf ,_efdfg ._dcadd !=nil ,_efdfg .fontFlags (),_dcgb );
};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_bccbcf *PdfReader )GetNamedDestinations ()(_cc .PdfObject ,error ){_egec :=_cc .ResolveReference (_bccbcf ._gfed .Get ("\u0044\u0065\u0073t\u0073"));if _egec ==nil {return nil ,nil ;};if !_bccbcf ._fcae {_bedef :=_bccbcf .traverseObjectData (_egec );
if _bedef !=nil {return nil ,_bedef ;};};return _egec ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ggg *PdfActionLaunch )ToPdfObject ()_cc .PdfObject {_ggg .PdfAction .ToPdfObject ();_cda :=_ggg ._dae ;_aeb :=_cda .PdfObject .(*_cc .PdfObjectDictionary );_aeb .SetIfNotNil ("\u0053",_cc .MakeName (string (ActionTypeLaunch )));if _ggg .F !=nil {_aeb .Set ("\u0046",_ggg .F .ToPdfObject ());
};_aeb .SetIfNotNil ("\u0057\u0069\u006e",_ggg .Win );_aeb .SetIfNotNil ("\u004d\u0061\u0063",_ggg .Mac );_aeb .SetIfNotNil ("\u0055\u006e\u0069\u0078",_ggg .Unix );_aeb .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ggg .NewWindow );return _cda ;
};func (_eecgc *LTV )buildCertChain (_ecfed ,_cfbffa []*_ffd .Certificate )([]*_ffd .Certificate ,map[string ]*_ffd .Certificate ,error ){_gbgaf :=map[string ]*_ffd .Certificate {};for _ ,_ecfgg :=range _ecfed {_gbgaf [_ecfgg .Subject .CommonName ]=_ecfgg ;
};_adfac :=_ecfed ;for _ ,_edac :=range _cfbffa {_ffdecg :=_edac .Subject .CommonName ;if _ ,_ffcca :=_gbgaf [_ffdecg ];_ffcca {continue ;};_gbgaf [_ffdecg ]=_edac ;_adfac =append (_adfac ,_edac );};if len (_adfac )==0{return nil ,nil ,ErrSignNoCertificates ;
};var _ccdeg error ;for _cebba :=_adfac [0];_cebba !=nil &&!_eecgc .CertClient .IsCA (_cebba );{_fcbd ,_bacaf :=_gbgaf [_cebba .Issuer .CommonName ];if !_bacaf {if _fcbd ,_ccdeg =_eecgc .CertClient .GetIssuer (_cebba );_ccdeg !=nil {_df .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_ccdeg );
break ;};_gbgaf [_cebba .Issuer .CommonName ]=_fcbd ;_adfac =append (_adfac ,_fcbd );};_cebba =_fcbd ;};return _adfac ,_gbgaf ,nil ;};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_fgfef *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_befae :=_fgfef ._bbed .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _befae {return nil ,_ede .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_befae {return _fgfef ,nil ;};if _fgfef ._bdeae [revisionNumber ]!=nil {return _fgfef ._bdeae [revisionNumber ],nil ;};_dfgebe :=_fgfef ;for _cfca :=_befae -1;_cfca >=revisionNumber ;_cfca --{_dfbf ,_abefge :=_dfgebe .GetPreviousRevision ();
if _abefge !=nil {return nil ,_abefge ;};_fgfef ._bdeae [_cfca ]=_dfbf ;_dfgebe =_dfbf ;};return _dfgebe ,nil ;};

// NewPdfShadingPatternType2 creates an empty shading pattern type 2 object.
func NewPdfShadingPatternType2 ()*PdfShadingPatternType2 {_fdfe :=&PdfShadingPatternType2 {};_fdfe .Matrix =_cc .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_fdfe .PdfPattern =&PdfPattern {};_fdfe .PdfPattern .PatternType =int64 (*_cc .MakeInteger (2));
_fdfe .PdfPattern ._dfcbb =_fdfe ;_fdfe .PdfPattern ._ecegf =_cc .MakeIndirectObject (_cc .MakeDict ());return _fdfe ;};

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_dgde *PdfAppender )SetDocInfo (info *PdfInfo ){_dgde ._feb =info };func (_egbba *pdfFontType0 )baseFields ()*fontCommon {return &_egbba .fontCommon };

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _cc .PdfObject ;ColorSpace _cc .PdfObject ;Pattern _cc .PdfObject ;Shading _cc .PdfObject ;XObject _cc .PdfObject ;Font _cc .PdfObject ;ProcSet _cc .PdfObject ;Properties _cc .PdfObject ;_bggcc *_cc .PdfObjectDictionary ;
_cffda *PdfPageResourcesColorspaces ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_beeg *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };var (ErrRequiredAttributeMissing =_ede .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_ede .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_ede .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_aaeg =_ede .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_ede .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_ede .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_gc .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_cc .ErrNotSupported );ErrType1CFontNotSupported =_gc .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_cc .ErrNotSupported );
ErrType3FontNotSupported =_gc .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_cc .ErrNotSupported );
ErrTTCmapNotSupported =_gc .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_cc .ErrNotSupported );
ErrSignNotEnoughSpace =_gc .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_gc .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;

// IsColored specifies if the pattern is colored.
func (_eceea *PdfTilingPattern )IsColored ()bool {if _eceea .PaintType !=nil &&*_eceea .PaintType ==1{return true ;};return false ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _cc .PdfObject ;IC _cc .PdfObject ;BE _cc .PdfObject ;RD _cc .PdfObject ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _cc .PdfObject ;B _cc .PdfObject ;};

// Encoder returns the font's text encoder.
func (_defd pdfCIDFontType0 )Encoder ()_cbf .TextEncoder {return _defd ._bcca };

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_gdbc :=NewPdfAnnotation ();_abcd :=&PdfAnnotationUnderline {};_abcd .PdfAnnotation =_gdbc ;_abcd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gdbc .SetContext (_abcd );return _abcd ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_dacfe _cd .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_afced _ee .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_gccgd _ee .Image )(*Image ,error );

// Compress an image.
Compress (_acad *Image ,_gdbfd int64 )(*Image ,error );};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _cc .PdfObject ;_dacb []byte ;_cbcb *_cc .PdfIndirectObject ;};

// SetXObjectImageByNameLazy adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_cgbdb *PdfPageResources )SetXObjectImageByNameLazy (keyName _cc .PdfObjectName ,ximg *XObjectImage ,lazy bool )error {_dbdb :=ximg .ToPdfObject ().(*_cc .PdfObjectStream );if lazy {_dbdb .MakeLazy ();};_cbddf :=_cgbdb .SetXObjectByName (keyName ,_dbdb );
return _cbddf ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_gcff *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_gede ,_edcg :=color .(*PdfColorPattern );if !_edcg {_df .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _gede .Color ==nil {return color ,nil ;};if _gcff .UnderlyingCS ==nil {return nil ,_ede .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _gcff .UnderlyingCS .ColorToRGB (_gede .Color );
};func (_fagac *PdfFunctionType0 )processSamples ()error {_aadc :=_dac .ResampleBytes (_fagac ._cfea ,_fagac .BitsPerSample );_fagac ._ffaae =_aadc ;return nil ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_bcec *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _bcec .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_egaec *_dc .Document )error ;};type pdfCIDFontType0 struct{fontCommon ;_ecgbf *_cc .PdfIndirectObject ;_bcca _cbf .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_cc .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _cc .PdfObject ;W _cc .PdfObject ;DW2 _cc .PdfObject ;W2 _cc .PdfObject ;_dgfaa map[_cbf .CharCode ]float64 ;_gdde float64 ;};func (_fbee *Image )samplesTrimPadding (_adeaa []uint32 )[]uint32 {_dddf :=_fbee .ColorComponents *int (_fbee .Width )*int (_fbee .Height );
if len (_adeaa )==_dddf {return _adeaa ;};_decb :=make ([]uint32 ,_dddf );_edae :=int (_fbee .Width )*_fbee .ColorComponents ;var _agbdc ,_gcceb ,_bfdgc ,_edefg int ;_bdgbc :=_ec .BytesPerLine (int (_fbee .Width ),int (_fbee .BitsPerComponent ),_fbee .ColorComponents );
for _agbdc =0;_agbdc < int (_fbee .Height );_agbdc ++{_gcceb =_agbdc *int (_fbee .Width );_bfdgc =_agbdc *_bdgbc ;for _edefg =0;_edefg < _edae ;_edefg ++{_decb [_gcceb +_edefg ]=_adeaa [_bfdgc +_edefg ];};};return _decb ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_ccdgc *PdfPageResourcesColorspaces )Set (key _cc .PdfObjectName ,val PdfColorspace ){if _ ,_gbed :=_ccdgc .Colorspaces [string (key )];!_gbed {_ccdgc .Names =append (_ccdgc .Names ,string (key ));};_ccdgc .Colorspaces [string (key )]=val ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_eacaa *PdfPattern )IsTiling ()bool {return _eacaa .PatternType ==1};func (_gfcgcd *PdfWriter )setHashIDs (_ffbfb _a .Hash )error {_cfafdf :=_ffbfb .Sum (nil );if _gfcgcd ._degcb ==""{_gfcgcd ._degcb =_db .EncodeToString (_cfafdf [:8]);};_gfcgcd .setDocumentIDs (_gfcgcd ._degcb ,_db .EncodeToString (_cfafdf [8:]));
return nil ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_bffe _cd .ReadSeeker ;_cafa *_cc .PdfParser ;_eaeg *PdfReader ;Reader *PdfReader ;_dfaa []*PdfPage ;_efeb *PdfAcroForm ;_gbfd *DSS ;_fdg *Permissions ;_eafdg _cc .XrefTable ;_agg int64 ;_dbf int ;_bcdd []_cc .PdfObject ;_bdge map[_cc .PdfObject ]struct{};
_gbdc map[_cc .PdfObject ]int64 ;_fbfa map[_cc .PdfObject ]struct{};_edaf map[_cc .PdfObject ]struct{};_eddf int64 ;_facf bool ;_dca string ;_ecbdg *EncryptOptions ;_feb *PdfInfo ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_ecadd *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_df .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_df .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_df .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_df .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_bfdgd ,_fdce :=_ec .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._ccee ,img ._aaaacg );if _fdce !=nil {return Image {},_fdce ;};_aegb ,_fdce :=_ec .NRGBAConverter .Convert (_bfdgd );
if _fdce !=nil {return Image {},_fdce ;};return _bagc (_aegb .Base ()),nil ;};func (_gcbed *PdfReader )newPdfOutlineItemFromIndirectObject (_dabab *_cc .PdfIndirectObject )(*PdfOutlineItem ,error ){_fdgge ,_bacga :=_dabab .PdfObject .(*_cc .PdfObjectDictionary );
if !_bacga {return nil ,_c .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_gcba :=NewPdfOutlineItem ();_gegd :=_fdgge .Get ("\u0054\u0069\u0074l\u0065");
if _gegd ==nil {return nil ,_c .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_ddbgc ,_cfebe :=_cc .GetString (_gegd );if !_cfebe {return nil ,_c .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_gegd );};_gcba .Title =_ddbgc ;if _fggbbd :=_fdgge .Get ("\u0043\u006f\u0075n\u0074");
_fggbbd !=nil {_ggacb ,_beadf :=_fggbbd .(*_cc .PdfObjectInteger );if !_beadf {return nil ,_c .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_fggbbd );};_aead :=int64 (*_ggacb );
_gcba .Count =&_aead ;};if _cebfg :=_fdgge .Get ("\u0044\u0065\u0073\u0074");_cebfg !=nil {_gcba .Dest =_cc .ResolveReference (_cebfg );if !_gcbed ._fcae {_ffbec :=_gcbed .traverseObjectData (_gcba .Dest );if _ffbec !=nil {return nil ,_ffbec ;};};};if _edafac :=_fdgge .Get ("\u0041");
_edafac !=nil {_gcba .A =_cc .ResolveReference (_edafac );if !_gcbed ._fcae {_abfa :=_gcbed .traverseObjectData (_gcba .A );if _abfa !=nil {return nil ,_abfa ;};};};if _eeegc :=_fdgge .Get ("\u0053\u0045");_eeegc !=nil {_gcba .SE =nil ;};if _gdaaf :=_fdgge .Get ("\u0043");
_gdaaf !=nil {_gcba .C =_cc .ResolveReference (_gdaaf );};if _ddecg :=_fdgge .Get ("\u0046");_ddecg !=nil {_gcba .F =_cc .ResolveReference (_ddecg );};return _gcba ,nil ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";
TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);func (_dffef fontCommon )isCIDFont ()bool {if _dffef ._edfc ==""{_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dffef );
};_bcac :=false ;switch _dffef ._edfc {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_bcac =true ;};_df .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_bcac ,_dffef );
return _bcac ;};

// ToPdfObject implements interface PdfModel.
func (_egfff *PdfAnnotationRedact )ToPdfObject ()_cc .PdfObject {_egfff .PdfAnnotation .ToPdfObject ();_cad :=_egfff ._cef ;_ecab :=_cad .PdfObject .(*_cc .PdfObjectDictionary );_egfff .PdfAnnotationMarkup .appendToPdfDictionary (_ecab );_ecab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_ecab .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_egfff .QuadPoints );_ecab .SetIfNotNil ("\u0049\u0043",_egfff .IC );_ecab .SetIfNotNil ("\u0052\u004f",_egfff .RO );_ecab .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_egfff .OverlayText );
_ecab .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_egfff .Repeat );_ecab .SetIfNotNil ("\u0044\u0041",_egfff .DA );_ecab .SetIfNotNil ("\u0051",_egfff .Q );return _cad ;};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_gefge *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_cc .StreamEncoder ,error ){_dadab ,_edbbe :=_gefge ._ecegf .(*_cc .PdfObjectStream );if !_edbbe {_df .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gefge ._ecegf );
return nil ,nil ,_cc .ErrTypeError ;};_gaad ,_cebcg :=_cc .DecodeStream (_dadab );if _cebcg !=nil {_df .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_cebcg );
return nil ,nil ,_cebcg ;};_caae ,_cebcg :=_cc .NewEncoderFromStream (_dadab );if _cebcg !=nil {_df .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_cebcg );
return nil ,nil ,_cebcg ;};return _gaad ,_caae ,nil ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
//
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
// message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
//
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_bagfg *PdfFont )SubsetRegistered ()error {switch _ecdcd :=_bagfg ._ggec .(type ){case *pdfFontType0 :_gceff :=_ecdcd .subsetRegistered ();if _gceff !=nil {_df .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_gceff );
return _gceff ;};if _ecdcd ._gdab !=nil {if _ecdcd ._feggc !=nil {_ecdcd ._feggc .ToPdfObject ();};_ecdcd .ToPdfObject ();};default:_df .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_ecdcd );
};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_dfb *PdfActionThread )ToPdfObject ()_cc .PdfObject {_dfb .PdfAction .ToPdfObject ();_cfg :=_dfb ._dae ;_fcc :=_cfg .PdfObject .(*_cc .PdfObjectDictionary );_fcc .SetIfNotNil ("\u0053",_cc .MakeName (string (ActionTypeThread )));if _dfb .F !=nil {_fcc .Set ("\u0046",_dfb .F .ToPdfObject ());
};_fcc .SetIfNotNil ("\u0044",_dfb .D );_fcc .SetIfNotNil ("\u0042",_dfb .B );return _cfg ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_cbfed *LTV )EnableAll (extraCerts []*_ffd .Certificate )error {_aaebd :=_cbfed ._cbgcf ._eaeg .AcroForm ;for _ ,_bcce :=range _aaebd .AllFields (){_acaca ,_ :=_bcce .GetContext ().(*PdfFieldSignature );if _acaca ==nil {continue ;};_edbb :=_acaca .V ;
if _fbbe :=_cbfed .validateSig (_edbb );_fbbe !=nil {_df .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_fbbe );
};if _ggbgf :=_cbfed .Enable (_edbb ,extraCerts );_ggbgf !=nil {return _ggbgf ;};};return nil ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_effba *Image )SetSamples (samples []uint32 ){if _effba .BitsPerComponent < 8{samples =_effba .samplesAddPadding (samples );};_dcda :=_dac .ResampleUint32 (samples ,int (_effba .BitsPerComponent ),8);_eddda :=make ([]byte ,len (_dcda ));for _cbcga ,_befab :=range _dcda {_eddda [_cbcga ]=byte (_befab );
};_effba .Data =_eddda ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_fgae *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ede .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_fgae .Base .GetNumComponents ();_bgabc :=int (vals [0])*N ;
if _bgabc < 0||(_bgabc +N -1)>=len (_fgae ._dacb ){_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bgabc );return nil ,ErrColorOutOfRange ;};_gdga :=_fgae ._dacb [_bgabc :_bgabc +N ];
var _ffcee []float64 ;for _ ,_ddac :=range _gdga {_ffcee =append (_ffcee ,float64 (_ddac )/255.0);};_cgdab ,_egfe :=_fgae .Base .ColorFromFloats (_ffcee );if _egfe !=nil {return nil ,_egfe ;};return _cgdab ,nil ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_dceda int64 ;_ecgba int64 ;_bdddb int64 ;_fgcccb int64 ;_abdd int64 ;_eaded int64 ;_dafbd byte ;_gcded int64 ;_ebdg int64 ;};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_bffdc *PdfSignature ,_cbcgd Hasher ,_fggca SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};func (_eedfb *PdfField )inherit (_decac func (*PdfField )bool )(bool ,error ){_gbff :=map[*PdfField ]bool {};_eddgf :=false ;
_cdefc :=_eedfb ;for _cdefc !=nil {if _ ,_bcedc :=_gbff [_cdefc ];_bcedc {return false ,_ede .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_edge :=_decac (_cdefc );if _edge {_eddgf =true ;
break ;};_gbff [_cdefc ]=true ;_cdefc =_cdefc .Parent ;};return _eddgf ,nil ;};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_ebgeg *_cc .PdfObjectDictionary ;Type *_cc .PdfObjectName ;TransformMethod *_cc .PdfObjectName ;TransformParams _cc .PdfObject ;Data _cc .PdfObject ;DigestMethod *_cc .PdfObjectName ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_dcff FieldFlag )Has (fl FieldFlag )bool {return (_dcff .Mask ()&fl .Mask ())> 0};

// ToPdfObject implements interface PdfModel.
func (_ddbg *PdfAnnotationRichMedia )ToPdfObject ()_cc .PdfObject {_ddbg .PdfAnnotation .ToPdfObject ();_cdg :=_ddbg ._cef ;_fcfg :=_cdg .PdfObject .(*_cc .PdfObjectDictionary );_fcfg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_fcfg .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_ddbg .RichMediaSettings );_fcfg .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_ddbg .RichMediaContent );
return _cdg ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_cbaba []byte )(_gaega int ,_bgge error );};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_debeg *PdfColorspaceLab )GetNumComponents ()int {return 3};func _fffg ()_b .Time {_aaefb .Lock ();defer _aaefb .Unlock ();return _bcbfgg };

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _cd .ReadSeeker )(*PdfFont ,error ){_bcfe ,_ceaag :=_ea .ReadAll (r );if _ceaag !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_ceaag );
return nil ,_ceaag ;};_aeca ,_ceaag :=_edg .TtfParse (_aac .NewReader (_bcfe ));if _ceaag !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_ceaag );
return nil ,_ceaag ;};_cfae :=&pdfCIDFontType2 {fontCommon :fontCommon {_edfc :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_cc .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_aeca .Widths )<=0{return nil ,_ede .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_fcfd :=1000.0/float64 (_aeca .UnitsPerEm );_cfeca :=_fcfd *float64 (_aeca .Widths [0]);_cbgcb :=make (map[rune ]int );_gfcba :=make (map[_edg .GID ]int );_agcgf :=_edg .GID (len (_aeca .Widths ));for _edbd ,_ebfe :=range _aeca .Chars {if _ebfe > _agcgf -1{continue ;
};_bgce :=int (_fcfd *float64 (_aeca .Widths [_ebfe ]));_cbgcb [_edbd ]=_bgce ;_gfcba [_ebfe ]=_bgce ;};_cfae ._gegff =_cbgcb ;_cfae .DW =_cc .MakeInteger (int64 (_cfeca ));_dfdgf :=_ggfeg (_gfcba ,uint16 (_agcgf ));_cfae .W =_cc .MakeIndirectObject (_dfdgf );
_geee :=_cc .MakeDict ();_geee .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_cc .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_geee .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_cc .MakeString ("\u0041\u0064\u006fb\u0065"));
_geee .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_cc .MakeInteger (0));_cfae .CIDSystemInfo =_geee ;_fcag :=&PdfFontDescriptor {FontName :_cc .MakeName (_aeca .PostScriptName ),Ascent :_cc .MakeFloat (_fcfd *float64 (_aeca .TypoAscender )),Descent :_cc .MakeFloat (_fcfd *float64 (_aeca .TypoDescender )),CapHeight :_cc .MakeFloat (_fcfd *float64 (_aeca .CapHeight )),FontBBox :_cc .MakeArrayFromFloats ([]float64 {_fcfd *float64 (_aeca .Xmin ),_fcfd *float64 (_aeca .Ymin ),_fcfd *float64 (_aeca .Xmax ),_fcfd *float64 (_aeca .Ymax )}),ItalicAngle :_cc .MakeFloat (_aeca .ItalicAngle ),MissingWidth :_cc .MakeFloat (_cfeca )};
_bcee ,_ceaag :=_cc .MakeStream (_bcfe ,_cc .NewFlateEncoder ());if _ceaag !=nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_ceaag );
return nil ,_ceaag ;};_bcee .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_cc .MakeInteger (int64 (len (_bcfe ))));_fcag .FontFile2 =_bcee ;if _aeca .Bold {_fcag .StemV =_cc .MakeInteger (120);}else {_fcag .StemV =_cc .MakeInteger (70);
};_eefbf :=_ffda ;if _aeca .IsFixedPitch {_eefbf |=_cddfa ;};if _aeca .ItalicAngle !=0{_eefbf |=_dcde ;};_fcag .Flags =_cc .MakeInteger (int64 (_eefbf ));_cfae ._baac =_aeca .PostScriptName ;_cfae ._cagc =_fcag ;_dbea :=pdfFontType0 {fontCommon :fontCommon {_edfc :"\u0054\u0079\u0070e\u0030",_baac :_aeca .PostScriptName },DescendantFont :&PdfFont {_ggec :_cfae },Encoding :_cc .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_feggc :_aeca .NewEncoder ()};
if len (_aeca .Chars )> 0{_edgde :=make (map[_fac .CharCode ]rune ,len (_aeca .Chars ));for _bfaed ,_dfcbd :=range _aeca .Chars {_bgdg :=_fac .CharCode (_dfcbd );if _bgdff ,_dfgc :=_edgde [_bgdg ];!_dfgc ||(_dfgc &&_bgdff > _bfaed ){_edgde [_bgdg ]=_bfaed ;
};};_dbea ._fgbf =_fac .NewToUnicodeCMap (_edgde );};_ddaab :=PdfFont {_ggec :&_dbea };return &_ddaab ,nil ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_bebgg *PdfReader )Decrypt (password []byte )(bool ,error ){_caaag ,_efecd :=_bebgg ._bbed .Decrypt (password );if _efecd !=nil {return false ,_efecd ;};if !_caaag {return false ,nil ;};_efecd =_bebgg .loadStructure ();if _efecd !=nil {_df .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_efecd );
return false ,_efecd ;};return true ,nil ;};func _ecdfa (_dbfgd []byte )bool {if len (_dbfgd )< 4{return true ;};for _aabdf :=range _dbfgd [:4]{_edfae :=rune (_aabdf );if !_ca .Is (_ca .ASCII_Hex_Digit ,_edfae )&&!_ca .IsSpace (_edfae ){return true ;};
};return false ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_cc .PdfObject ;};func _ggbgb (_gbgfb *_cc .PdfObjectDictionary )(*PdfShadingType2 ,error ){_gddg :=PdfShadingType2 {};_fgccgb :=_gbgfb .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");
if _fgccgb ==nil {_df .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");return nil ,ErrRequiredAttributeMissing ;
};_adfef ,_bdgae :=_fgccgb .(*_cc .PdfObjectArray );if !_bdgae {_df .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fgccgb );return nil ,_ede .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};if _adfef .Len ()!=4{_df .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_adfef .Len ());return nil ,_ede .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");
};_gddg .Coords =_adfef ;if _adgaa :=_gbgfb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_adgaa !=nil {_adgaa =_cc .TraceToDirectObject (_adgaa );_bcfbea ,_fcgba :=_adgaa .(*_cc .PdfObjectArray );if !_fcgba {_df .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_adgaa );
return nil ,_ede .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gddg .Domain =_bcfbea ;};_fgccgb =_gbgfb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fgccgb ==nil {_df .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_gddg .Function =[]PdfFunction {};if _edddf ,_egbdf :=_fgccgb .(*_cc .PdfObjectArray );_egbdf {for _ ,_ddfea :=range _edddf .Elements (){_ddgbc ,_daaefc :=_adade (_ddfea );if _daaefc !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_daaefc );
return nil ,_daaefc ;};_gddg .Function =append (_gddg .Function ,_ddgbc );};}else {_ebege ,_fdadg :=_adade (_fgccgb );if _fdadg !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fdadg );
return nil ,_fdadg ;};_gddg .Function =append (_gddg .Function ,_ebege );};if _efde :=_gbgfb .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_efde !=nil {_efde =_cc .TraceToDirectObject (_efde );_ebfaa ,_eadfd :=_efde .(*_cc .PdfObjectArray );if !_eadfd {_df .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_efde );
return nil ,_cc .ErrTypeError ;};if _ebfaa .Len ()!=2{_df .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ebfaa .Len ());return nil ,ErrInvalidAttribute ;
};_gddg .Extend =_ebfaa ;};return &_gddg ,nil ;};func (_adggb *PdfWriter )writeObjects (){_df .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_adggb ._gedfdc ));_adggb ._faff =make (map[int ]crossReference );
_adggb ._faff [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _adggb ._gddc .ObjectMap !=nil {for _bgffca ,_aefae :=range _adggb ._gddc .ObjectMap {if _bgffca ==0{continue ;};if _aefae .XType ==_cc .XrefTypeObjectStream {_bcffg :=crossReference {Type :2,ObjectNumber :_aefae .OsObjNumber ,Index :_aefae .OsObjIndex };
_adggb ._faff [_bgffca ]=_bcffg ;};if _aefae .XType ==_cc .XrefTypeTableEntry {_dedef :=crossReference {Type :1,ObjectNumber :_aefae .ObjectNumber ,Offset :_aefae .Offset };_adggb ._faff [_bgffca ]=_dedef ;};};};};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_dedf *_cc .PdfIndirectObject ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bcedd pdfCIDFontType0 )GetRuneMetrics (r rune )(_edg .CharMetrics ,bool ){return _edg .CharMetrics {Wx :_bcedd ._gdde },true ;};func _ecfga (_gdgdd []*_cc .PdfObjectStream )*_cc .PdfObjectArray {if len (_gdgdd )==0{return nil ;};_degga :=make ([]_cc .PdfObject ,0,len (_gdgdd ));
for _ ,_ceebd :=range _gdgdd {_degga =append (_degga ,_ceebd );};return _cc .MakeArray (_degga ...);};func (_eadf *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_dcca :=PdfColorDeviceGray (grayVal );return &_dcca ;};

// HasExtGState checks if ExtGState name is available.
func (_gdgba *PdfPage )HasExtGState (name _cc .PdfObjectName )bool {if _gdgba .Resources ==nil {return false ;};if _gdgba .Resources .ExtGState ==nil {return false ;};_cffb ,_eceed :=_cc .TraceToDirectObject (_gdgba .Resources .ExtGState ).(*_cc .PdfObjectDictionary );
if !_eceed {_df .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_cc .TraceToDirectObject (_gdgba .Resources .ExtGState ));
return false ;};_bdcba :=_cffb .Get (name );_dcee :=_bdcba !=nil ;return _dcee ;};var _eecae =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_cgfec *XObjectImage )ToImage ()(*Image ,error ){_bdbbf :=&Image {};if _cgfec .Height ==nil {return nil ,_ede .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_bdbbf .Height =*_cgfec .Height ;if _cgfec .Width ==nil {return nil ,_ede .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_bdbbf .Width =*_cgfec .Width ;if _cgfec .BitsPerComponent ==nil {switch _cgfec .Filter .(type ){case *_cc .CCITTFaxEncoder ,*_cc .JBIG2Encoder :_bdbbf .BitsPerComponent =1;
case *_cc .LZWEncoder ,*_cc .RunLengthEncoder :_bdbbf .BitsPerComponent =8;default:return nil ,_ede .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_bdbbf .BitsPerComponent =*_cgfec .BitsPerComponent ;};_bdbbf .ColorComponents =_cgfec .ColorSpace .GetNumComponents ();_cgfec ._dbccfb .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_cc .MakeInteger (int64 (_bdbbf .ColorComponents )));
_defcc ,_bagce :=_cc .DecodeStream (_cgfec ._dbccfb );if _bagce !=nil {return nil ,_bagce ;};_bdbbf .Data =_defcc ;if _cgfec .Decode !=nil {_egfab ,_cegcf :=_cgfec .Decode .(*_cc .PdfObjectArray );if !_cegcf {_df .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_ede .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_caaaf ,_fcbdb :=_egfab .ToFloat64Array ();if _fcbdb !=nil {return nil ,_fcbdb ;};switch _cgfec .ColorSpace .(type ){case *PdfColorspaceDeviceCMYK :_aacdc :=_cgfec .ColorSpace .DecodeArray ();
if _aacdc [0]==_caaaf [0]&&_aacdc [1]==_caaaf [1]&&_aacdc [2]==_caaaf [2]&&_aacdc [3]==_caaaf [3]{_bdbbf ._aaaacg =_caaaf ;};default:_bdbbf ._aaaacg =_caaaf ;};};return _bdbbf ,nil ;};func (_aedae *PdfWriter )updateObjectNumbers (){_dccf :=_aedae .ObjNumOffset ;
_fbdad :=0;for _ ,_begffe :=range _aedae ._gedfdc {_cfafe :=int64 (_fbdad +1+_dccf );_fgbae :=true ;if _aedae ._dfeeg {if _dfgcf ,_cabcc :=_aedae ._dcacf [_begffe ];_cabcc {_cfafe =_dfgcf ;_fgbae =false ;};};switch _ffdac :=_begffe .(type ){case *_cc .PdfIndirectObject :_ffdac .ObjectNumber =_cfafe ;
_ffdac .GenerationNumber =0;case *_cc .PdfObjectStream :_ffdac .ObjectNumber =_cfafe ;_ffdac .GenerationNumber =0;case *_cc .PdfObjectStreams :_ffdac .ObjectNumber =_cfafe ;_ffdac .GenerationNumber =0;default:_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_ffdac );
continue ;};if _fgbae {_fbdad ++;};};_egdda :=func (_cfba _cc .PdfObject )int64 {switch _fgefd :=_cfba .(type ){case *_cc .PdfIndirectObject :return _fgefd .ObjectNumber ;case *_cc .PdfObjectStream :return _fgefd .ObjectNumber ;case *_cc .PdfObjectStreams :return _fgefd .ObjectNumber ;
};return 0;};_eac .SliceStable (_aedae ._gedfdc ,func (_ffgfg ,_fbged int )bool {return _egdda (_aedae ._gedfdc [_ffgfg ])< _egdda (_aedae ._gedfdc [_fbged ])});};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_aaefb .Lock ();defer _aaefb .Unlock ();_bcge =title };func _badc (_afag *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_cgbf ,_fedbb :=_cc .GetDict (_afag .AP );if !_fedbb {return nil ,nil ,_ede .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _cgbf ==nil {return nil ,nil ,nil ;};_beadg ,_fedbb :=_cc .GetArray (_afag .Rect );if !_fedbb ||_beadg .Len ()!=4{return nil ,nil ,_ede .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_dbcb ,_dfgeb :=NewPdfRectangle (*_beadg );
if _dfgeb !=nil {return nil ,nil ,_dfgeb ;};_badd :=_cc .TraceToDirectObject (_cgbf .Get ("\u004e"));switch _aefd :=_badd .(type ){case *_cc .PdfObjectStream :_fdaf :=_aefd ;_eebf ,_eggf :=NewXObjectFormFromStream (_fdaf );return _eebf ,_dbcb ,_eggf ;case *_cc .PdfObjectDictionary :_eecgf :=_aefd ;
var _dgad _cc .PdfObject ;_fedc ,_gcgd :=_cc .GetName (_afag .AS );if _gcgd {_dgad =_eecgf .Get (*_fedc );}else {_geefc :=_afag ._cef .PdfObject .(*_cc .PdfObjectDictionary );if _ceae :=_geefc .Get ("\u0056");_ceae !=nil {_dgad =_eecgf .Get (_cc .PdfObjectName (_ceae .String ()));
};};if _dgad ==nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_ggbg ,_gcgd :=_cc .GetStream (_dgad );if !_gcgd {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_fedc );
return nil ,nil ,_ede .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_abcff ,_fabd :=NewXObjectFormFromStream (_ggbg );return _abcff ,_dbcb ,_fabd ;};_df .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_badd );
return nil ,nil ,_ede .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_cgcdb *PdfWriter )SetPageLabels (pageLabels _cc .PdfObject )error {if pageLabels ==nil {return nil ;};_df .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_cgcdb ._feff .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _cgcdb .addObjects (pageLabels );};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_bbfg *_cc .PdfObjectDictionary ;_ffeac *_cc .PdfIndirectObject ;};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_ffgeda *PdfReader )GetNameDictionary ()(_cc .PdfObject ,error ){_bgbce :=_cc .ResolveReference (_ffgeda ._gfed .Get ("\u004e\u0061\u006de\u0073"));if _bgbce ==nil {return nil ,nil ;};if !_ffgeda ._fcae {_dggb :=_ffgeda .traverseObjectData (_bgbce );
if _dggb !=nil {return nil ,_dggb ;};};return _bgbce ,nil ;};func (_gdbb *PdfReader )loadAnnotations (_eddc _cc .PdfObject )([]*PdfAnnotation ,error ){_gbffc ,_gbae :=_cc .GetArray (_eddc );if !_gbae {return nil ,_c .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _cbbbe []*PdfAnnotation ;for _ ,_baeg :=range _gbffc .Elements (){_baeg =_cc .ResolveReference (_baeg );if _ ,_dgaab :=_baeg .(*_cc .PdfObjectNull );_dgaab {continue ;};_egbde ,_adfe :=_baeg .(*_cc .PdfObjectDictionary );_ggcff ,_efcgb :=_baeg .(*_cc .PdfIndirectObject );
if _adfe {_ggcff =&_cc .PdfIndirectObject {};_ggcff .PdfObject =_egbde ;}else {if !_efcgb {return nil ,_c .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_dgge ,_fedgf :=_gdbb .newPdfAnnotationFromIndirectObject (_ggcff );if _fedgf !=nil {return nil ,_fedgf ;};switch _cfcgd :=_dgge .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_cegaa :=range _gdbb .AcroForm .AllFields (){if _cegaa ._geafg ==_cfcgd .Parent {_cfcgd ._gda =_cegaa ;
break ;};};};if _dgge !=nil {_cbbbe =append (_cbbbe ,_dgge );};};return _cbbbe ,nil ;};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// ToPdfObject returns the PDF representation of the function.
func (_cafcb *PdfFunctionType0 )ToPdfObject ()_cc .PdfObject {if _cafcb ._aaba ==nil {_cafcb ._aaba =&_cc .PdfObjectStream {};};_adaa :=_cc .MakeDict ();_adaa .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cc .MakeInteger (0));
_fgafb :=&_cc .PdfObjectArray {};for _ ,_dafa :=range _cafcb .Domain {_fgafb .Append (_cc .MakeFloat (_dafa ));};_adaa .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fgafb );_ccadd :=&_cc .PdfObjectArray {};for _ ,_beecc :=range _cafcb .Range {_ccadd .Append (_cc .MakeFloat (_beecc ));
};_adaa .Set ("\u0052\u0061\u006eg\u0065",_ccadd );_afgdg :=&_cc .PdfObjectArray {};for _ ,_aegbb :=range _cafcb .Size {_afgdg .Append (_cc .MakeInteger (int64 (_aegbb )));};_adaa .Set ("\u0053\u0069\u007a\u0065",_afgdg );_adaa .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_cc .MakeInteger (int64 (_cafcb .BitsPerSample )));
if _cafcb .Order !=1{_adaa .Set ("\u004f\u0072\u0064e\u0072",_cc .MakeInteger (int64 (_cafcb .Order )));};_adaa .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cc .MakeInteger (int64 (len (_cafcb ._cfea ))));_cafcb ._aaba .Stream =_cafcb ._cfea ;_cafcb ._aaba .PdfObjectDictionary =_adaa ;
return _cafcb ._aaba ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cc .PdfObject ;IC _cc .PdfObject ;RO _cc .PdfObject ;OverlayText _cc .PdfObject ;Repeat _cc .PdfObject ;DA _cc .PdfObject ;Q _cc .PdfObject ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_aaefb .Lock ();defer _aaefb .Unlock ();_abaf =creator };

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_cc .PdfObjectInteger ;BitsPerComponent *_cc .PdfObjectInteger ;VerticesPerRow *_cc .PdfObjectInteger ;Decode *_cc .PdfObjectArray ;Function []PdfFunction ;};

// SetAlpha sets the alpha layer for the image.
func (_cbace *Image )SetAlpha (alpha []byte ){_cbace ._ccee =alpha };

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_edc :=NewPdfAction ();_gfbb :=&PdfActionMovie {};_gfbb .PdfAction =_edc ;_edc .SetContext (_gfbb );return _gfbb ;};func (_eefgf *PdfWriter )AttachFile (file *EmbeddedFile )error {_eeee :=_eefgf ._ccagg ;if _eeee ==nil {_eeee =_agabd ();
};_edbda :=_eeee .addEmbeddedFile (file );if _edbda !=nil {return _edbda ;};_eefgf ._ccagg =_eeee ;return nil ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_cegda *PdfWriter )SetNamedDestinations (dests _cc .PdfObject )error {if dests ==nil {return nil ;};_df .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_cegda ._feff .Set ("\u0044\u0065\u0073t\u0073",dests );return _cegda .addObjects (dests );};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_agfb *PdfColorspaceLab )ToPdfObject ()_cc .PdfObject {_bffb :=_cc .MakeArray ();_bffb .Append (_cc .MakeName ("\u004c\u0061\u0062"));_bbea :=_cc .MakeDict ();if _agfb .WhitePoint !=nil {_cced :=_cc .MakeArray (_cc .MakeFloat (_agfb .WhitePoint [0]),_cc .MakeFloat (_agfb .WhitePoint [1]),_cc .MakeFloat (_agfb .WhitePoint [2]));
_bbea .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_cced );}else {_df .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _agfb .BlackPoint !=nil {_geefe :=_cc .MakeArray (_cc .MakeFloat (_agfb .BlackPoint [0]),_cc .MakeFloat (_agfb .BlackPoint [1]),_cc .MakeFloat (_agfb .BlackPoint [2]));_bbea .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_geefe );
};if _agfb .Range !=nil {_gbfe :=_cc .MakeArray (_cc .MakeFloat (_agfb .Range [0]),_cc .MakeFloat (_agfb .Range [1]),_cc .MakeFloat (_agfb .Range [2]),_cc .MakeFloat (_agfb .Range [3]));_bbea .Set ("\u0052\u0061\u006eg\u0065",_gbfe );};_bffb .Append (_bbea );
if _agfb ._gfff !=nil {_agfb ._gfff .PdfObject =_bffb ;return _agfb ._gfff ;};return _bffb ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_ecba *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_fda :=range pages {_fda =_fda .Duplicate ();_cafcfc (_fda );_ecba ._dfaa =append (_ecba ._dfaa ,_fda );};};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
        or: [/DeviceN names alternateSpace tintTransform attributes]
*/
type PdfColorspaceDeviceN struct{ColorantNames *_cc .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_bagf *_cc .PdfIndirectObject ;};func _ddbe (_fade ,_geacb string )string {if _fa .Contains (_fade ,"\u002b"){_begf :=_fa .Split (_fade ,"\u002b");
if len (_begf )==2{_fade =_begf [1];};};return _geacb +"\u002b"+_fade ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _cc .PdfObject ;PreserveRB _cc .PdfObject ;};func (_fgadc *LTV )validateSig (_badbe *PdfSignature )error {if _badbe ==nil ||_badbe .Contents ==nil ||len (_badbe .Contents .Bytes ())==0{return _c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_badbe );
};return nil ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_bbeegd *PdfPage )AddContentStreamByString (contentStr string )error {_ddefd ,_dcgbd :=_cc .MakeStream ([]byte (contentStr ),_cc .NewFlateEncoder ());if _dcgbd !=nil {return _dcgbd ;};if _bbeegd .Contents ==nil {_bbeegd .Contents =_ddefd ;}else {_addbb :=_cc .TraceToDirectObject (_bbeegd .Contents );
_ddbag ,_gcac :=_addbb .(*_cc .PdfObjectArray );if !_gcac {_ddbag =_cc .MakeArray (_addbb );};_ddbag .Append (_ddefd );_bbeegd .Contents =_ddbag ;};return nil ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_cbccf *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_bbcb :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_eccga ,_bcfg :=_cbccf .GetNumPages ();if _bcfg !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bcfg );
return nil ,_bcfg ;};for _aeeb :=1;_aeeb <=_eccga ;_aeeb ++{_beead ,_afadg :=_cbccf .GetPage (_aeeb );if _afadg !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_afadg );return nil ,_afadg ;};if opts .PageProcessCallback !=nil {_afadg =opts .PageProcessCallback (_aeeb ,_beead );
if _afadg !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_afadg );return nil ,_afadg ;};}else if opts .PageCallback !=nil {opts .PageCallback (_aeeb ,_beead );};_afadg =_bbcb .AddPage (_beead );if _afadg !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_afadg );
return nil ,_afadg ;};};_bbcb ._gfgfa =_cbccf .PdfVersion ();if !opts .SkipInfo {_fadg ,_fegec :=_cbccf .GetPdfInfo ();if _fegec !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fegec );}else {_bbcb ._egdc .PdfObject =_fadg .ToPdfObject ();
};};if !opts .SkipMetadata {if _bbabc :=_cbccf ._gfed .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_bbabc !=nil {if _fecdg :=_bbcb .SetCatalogMetadata (_bbabc );_fecdg !=nil {return nil ,_fecdg ;};};};if !opts .SkipAcroForm {_dccda :=_bbcb .SetForms (_cbccf .AcroForm );
if _dccda !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dccda );return nil ,_dccda ;};};if !opts .SkipOutlines {_bbcb .AddOutlineTree (_cbccf .GetOutlineTree ());};if !opts .SkipOCProperties {_dbfca ,_eccbec :=_cbccf .GetOCProperties ();
if _eccbec !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eccbec );}else {_eccbec =_bbcb .SetOCProperties (_dbfca );if _eccbec !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eccbec );};};};if !opts .SkipPageLabels {_gdfgge ,_gcbga :=_cbccf .GetPageLabels ();
if _gcbga !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gcbga );}else {_gcbga =_bbcb .SetPageLabels (_gdfgge );if _gcbga !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gcbga );};};};if !opts .SkipNamedDests {_dbdgg ,_cccd :=_cbccf .GetNamedDestinations ();
if _cccd !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cccd );}else {_cccd =_bbcb .SetNamedDestinations (_dbdgg );if _cccd !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cccd );};};};if !opts .SkipNameDictionary {_abbe ,_eggdd :=_cbccf .GetNameDictionary ();
if _eggdd !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eggdd );}else {_eggdd =_bbcb .SetNameDictionary (_abbe );if _eggdd !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eggdd );};};};if !opts .SkipRotation &&_cbccf .Rotate !=nil {if _bggfg :=_bbcb .SetRotation (*_cbccf .Rotate );
_bggfg !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bggfg );};};return &_bbcb ,nil ;};

// Fill populates `form` with values provided by `provider`.
func (_feaac *PdfAcroForm )Fill (provider FieldValueProvider )error {return _feaac .fill (provider ,nil )};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_cagf *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_cc .PdfObjectStream )(*XObjectImage ,error ){_fgddde :=&XObjectImage {};_fgddde ._dbccfb =stream ;_dcffed :=*(stream .PdfObjectDictionary );_bebb ,_gcegb :=_cc .NewEncoderFromStream (stream );if _gcegb !=nil {return nil ,_gcegb ;
};_fgddde .Filter =_bebb ;if _faaf :=_cc .TraceToDirectObject (_dcffed .Get ("\u0057\u0069\u0064t\u0068"));_faaf !=nil {_aagcg ,_cgedb :=_faaf .(*_cc .PdfObjectInteger );if !_cgedb {return nil ,_ede .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_dgbe :=int64 (*_aagcg );_fgddde .Width =&_dgbe ;}else {return nil ,_ede .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _cgcgb :=_cc .TraceToDirectObject (_dcffed .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_cgcgb !=nil {_gcddda ,_eebef :=_cgcgb .(*_cc .PdfObjectInteger );if !_eebef {return nil ,_ede .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_ggfbf :=int64 (*_gcddda );
_fgddde .Height =&_ggfbf ;}else {return nil ,_ede .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _bfcea :=_cc .TraceToDirectObject (_dcffed .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_bfcea !=nil {_agdcc ,_ccdcd :=NewPdfColorspaceFromPdfObject (_bfcea );if _ccdcd !=nil {return nil ,_ccdcd ;};_fgddde .ColorSpace =_agdcc ;}else {_df .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_fgddde .ColorSpace =NewPdfColorspaceDeviceGray ();};if _eageg :=_cc .TraceToDirectObject (_dcffed .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_eageg !=nil {_adgcb ,_bacdf :=_eageg .(*_cc .PdfObjectInteger );
if !_bacdf {return nil ,_ede .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_bgcgd :=int64 (*_adgcb );_fgddde .BitsPerComponent =&_bgcgd ;};_fgddde .Intent =_dcffed .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_fgddde .ImageMask =_dcffed .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_fgddde .Mask =_dcffed .Get ("\u004d\u0061\u0073\u006b");_fgddde .Decode =_dcffed .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_fgddde .Interpolate =_dcffed .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_fgddde .Alternatives =_dcffed .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_fgddde .SMask =_dcffed .Get ("\u0053\u004d\u0061s\u006b");_fgddde .SMaskInData =_dcffed .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_fgddde .Matte =_dcffed .Get ("\u004d\u0061\u0074t\u0065");_fgddde .Name =_dcffed .Get ("\u004e\u0061\u006d\u0065");_fgddde .StructParent =_dcffed .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_fgddde .ID =_dcffed .Get ("\u0049\u0044");
_fgddde .OPI =_dcffed .Get ("\u004f\u0050\u0049");_fgddde .Metadata =_dcffed .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_fgddde .OC =_dcffed .Get ("\u004f\u0043");_fgddde .Stream =stream .Stream ;return _fgddde ,nil ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_beee *PdfField )IsTerminal ()bool {return len (_beee .Kids )==0};func _aaafb (_gcca *_cc .PdfObjectDictionary ,_bfga *fontCommon )(*pdfCIDFontType0 ,error ){if _bfga ._edfc !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_df .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_bfga );
return nil ,_cc .ErrRangeError ;};_eeaf :=_cgcfg (_bfga );_acbd ,_gddfa :=_cc .GetDict (_gcca .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_gddfa {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_bfga );
return nil ,ErrRequiredAttributeMissing ;};_eeaf .CIDSystemInfo =_acbd ;_eeaf .DW =_gcca .Get ("\u0044\u0057");_eeaf .W =_gcca .Get ("\u0057");_eeaf .DW2 =_gcca .Get ("\u0044\u0057\u0032");_eeaf .W2 =_gcca .Get ("\u0057\u0032");_eeaf ._gdde =1000.0;if _gdbea ,_gcgfb :=_cc .GetNumberAsFloat (_eeaf .DW );
_gcgfb ==nil {_eeaf ._gdde =_gdbea ;};_gdbg ,_bgbf :=_cgfc (_eeaf .W );if _bgbf !=nil {return nil ,_bgbf ;};if _gdbg ==nil {_gdbg =map[_cbf .CharCode ]float64 {};};_eeaf ._dgfaa =_gdbg ;return _eeaf ,nil ;};func (_dfgea *PdfPage )getParentResources ()(*PdfPageResources ,error ){_dcag :=_dfgea .Parent ;
for _dcag !=nil {_accdg ,_ebgef :=_cc .GetDict (_dcag );if !_ebgef {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_ede .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};if _fgfe :=_accdg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_fgfe !=nil {_dfcdb ,_ebde :=_cc .GetDict (_fgfe );if !_ebde {return nil ,_ede .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");
};_efdfb ,_daecb :=NewPdfPageResourcesFromDict (_dfcdb );if _daecb !=nil {return nil ,_daecb ;};return _efdfb ,nil ;};_dcag =_accdg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};func (_dab *PdfReader )newPdfAnnotationFreeTextFromDict (_eafd *_cc .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_abcg :=PdfAnnotationFreeText {};
_bfb ,_ade :=_dab .newPdfAnnotationMarkupFromDict (_eafd );if _ade !=nil {return nil ,_ade ;};_abcg .PdfAnnotationMarkup =_bfb ;_abcg .DA =_eafd .Get ("\u0044\u0041");_abcg .Q =_eafd .Get ("\u0051");_abcg .RC =_eafd .Get ("\u0052\u0043");_abcg .DS =_eafd .Get ("\u0044\u0053");
_abcg .CL =_eafd .Get ("\u0043\u004c");_abcg .IT =_eafd .Get ("\u0049\u0054");_abcg .BE =_eafd .Get ("\u0042\u0045");_abcg .RD =_eafd .Get ("\u0052\u0044");_abcg .BS =_eafd .Get ("\u0042\u0053");_abcg .LE =_eafd .Get ("\u004c\u0045");return &_abcg ,nil ;
};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_fgge *PdfColorspaceCalRGB )ToPdfObject ()_cc .PdfObject {_cgcd :=&_cc .PdfObjectArray {};_cgcd .Append (_cc .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_gaacd :=_cc .MakeDict ();if _fgge .WhitePoint !=nil {_egffa :=_cc .MakeArray (_cc .MakeFloat (_fgge .WhitePoint [0]),_cc .MakeFloat (_fgge .WhitePoint [1]),_cc .MakeFloat (_fgge .WhitePoint [2]));
_gaacd .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_egffa );}else {_df .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _fgge .BlackPoint !=nil {_bedg :=_cc .MakeArray (_cc .MakeFloat (_fgge .BlackPoint [0]),_cc .MakeFloat (_fgge .BlackPoint [1]),_cc .MakeFloat (_fgge .BlackPoint [2]));_gaacd .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bedg );
};if _fgge .Gamma !=nil {_cdfa :=_cc .MakeArray (_cc .MakeFloat (_fgge .Gamma [0]),_cc .MakeFloat (_fgge .Gamma [1]),_cc .MakeFloat (_fgge .Gamma [2]));_gaacd .Set ("\u0047\u0061\u006dm\u0061",_cdfa );};if _fgge .Matrix !=nil {_gcda :=_cc .MakeArray (_cc .MakeFloat (_fgge .Matrix [0]),_cc .MakeFloat (_fgge .Matrix [1]),_cc .MakeFloat (_fgge .Matrix [2]),_cc .MakeFloat (_fgge .Matrix [3]),_cc .MakeFloat (_fgge .Matrix [4]),_cc .MakeFloat (_fgge .Matrix [5]),_cc .MakeFloat (_fgge .Matrix [6]),_cc .MakeFloat (_fgge .Matrix [7]),_cc .MakeFloat (_fgge .Matrix [8]));
_gaacd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gcda );};_cgcd .Append (_gaacd );if _fgge ._ffeac !=nil {_fgge ._ffeac .PdfObject =_cgcd ;return _fgge ._ffeac ;};return _cgcd ;};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};

// WriteString outputs the object as it is to be written to file.
func (_ebgfe *pdfSignDictionary )WriteString ()string {_ebgfe ._eega =0;_ebgfe ._dggf =0;_ebgfe ._gdcd =0;_ebgfe ._ddedcf =0;_bccge :=_aac .NewBuffer (nil );_bccge .WriteString ("\u003c\u003c");for _ ,_eaba :=range _ebgfe .Keys (){_eccac :=_ebgfe .Get (_eaba );
switch _eaba {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_bccge .WriteString (_eaba .WriteString ());_bccge .WriteString ("\u0020");_ebgfe ._gdcd =_bccge .Len ();_bccge .WriteString (_eccac .WriteString ());_bccge .WriteString ("\u0020");_ebgfe ._ddedcf =_bccge .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_bccge .WriteString (_eaba .WriteString ());_bccge .WriteString ("\u0020");_ebgfe ._eega =_bccge .Len ();_bccge .WriteString (_eccac .WriteString ());_bccge .WriteString ("\u0020");_ebgfe ._dggf =_bccge .Len ()-1;
default:_bccge .WriteString (_eaba .WriteString ());_bccge .WriteString ("\u0020");_bccge .WriteString (_eccac .WriteString ());};};_bccge .WriteString ("\u003e\u003e");return _bccge .String ();};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_cdfca *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};func (_fcaff *PdfWriter )setWriter (_bdaee _cd .Writer ){_fcaff ._edgfea =_fcaff ._cgfda ;_fcaff ._gacfdb =_cg .NewWriter (_bdaee );};var _ffafb =false ;

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_aabee *CompliancePdfReader )error ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_acadc *_cc .PdfIndirectObject ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _cc .PdfObject ;Name _cc .PdfObject ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_bdefb *PdfAcroForm )ToPdfObject ()_cc .PdfObject {_bfca :=_bdefb ._cgbg ;_cbedcd :=_bfca .PdfObject .(*_cc .PdfObjectDictionary );if _bdefb .Fields !=nil {_ageee :=_cc .PdfObjectArray {};for _ ,_dfdc :=range *_bdefb .Fields {_eegdb :=_dfdc .GetContext ();
if _eegdb !=nil {_ageee .Append (_eegdb .ToPdfObject ());}else {_ageee .Append (_dfdc .ToPdfObject ());};};_cbedcd .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_ageee );};if _bdefb .NeedAppearances !=nil {_cbedcd .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_bdefb .NeedAppearances );
}else {if _fbcb :=_cbedcd .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_fbcb !=nil {_cbedcd .Remove ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");};};if _bdefb .SigFlags !=nil {_cbedcd .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_bdefb .SigFlags );
};if _bdefb .CO !=nil {_cbedcd .Set ("\u0043\u004f",_bdefb .CO );};if _bdefb .DR !=nil {_cbedcd .Set ("\u0044\u0052",_bdefb .DR .ToPdfObject ());};if _bdefb .DA !=nil {_cbedcd .Set ("\u0044\u0041",_bdefb .DA );};if _bdefb .Q !=nil {_cbedcd .Set ("\u0051",_bdefb .Q );
};if _bdefb .XFA !=nil {_cbedcd .Set ("\u0058\u0046\u0041",_bdefb .XFA );};if _bdefb .ADBEEchoSign !=nil {_cbedcd .Set ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e",_bdefb .ADBEEchoSign );};return _bfca ;};func _ecgf (_fbfab _cc .PdfObject )(*PdfColorspaceCalRGB ,error ){_bgaa :=NewPdfColorspaceCalRGB ();
if _cafd ,_ddebe :=_fbfab .(*_cc .PdfIndirectObject );_ddebe {_bgaa ._ffeac =_cafd ;};_fbfab =_cc .TraceToDirectObject (_fbfab );_ecfa ,_gebg :=_fbfab .(*_cc .PdfObjectArray );if !_gebg {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _ecfa .Len ()!=2{return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_fbfab =_cc .TraceToDirectObject (_ecfa .Get (0));_fdfb ,_gebg :=_fbfab .(*_cc .PdfObjectName );
if !_gebg {return nil ,_c .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_fdfb !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_c .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
};_fbfab =_cc .TraceToDirectObject (_ecfa .Get (1));_bdad ,_gebg :=_fbfab .(*_cc .PdfObjectDictionary );if !_gebg {return nil ,_c .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};_fbfab =_bdad .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_fbfab =_cc .TraceToDirectObject (_fbfab );_gcbc ,_gebg :=_fbfab .(*_cc .PdfObjectArray );if !_gebg {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _gcbc .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_cgdeg ,_gbeb :=_gcbc .GetAsFloat64Slice ();
if _gbeb !=nil {return nil ,_gbeb ;};_bgaa .WhitePoint =_cgdeg ;_fbfab =_bdad .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _fbfab !=nil {_fbfab =_cc .TraceToDirectObject (_fbfab );_dedfd ,_abfdg :=_fbfab .(*_cc .PdfObjectArray );
if !_abfdg {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _dedfd .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");
};_fbeg ,_gegc :=_dedfd .GetAsFloat64Slice ();if _gegc !=nil {return nil ,_gegc ;};_bgaa .BlackPoint =_fbeg ;};_fbfab =_bdad .Get ("\u0047\u0061\u006dm\u0061");if _fbfab !=nil {_fbfab =_cc .TraceToDirectObject (_fbfab );_befg ,_acbe :=_fbfab .(*_cc .PdfObjectArray );
if !_acbe {return nil ,_c .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _befg .Len ()!=3{return nil ,_c .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");
};_eead ,_ecaaa :=_befg .GetAsFloat64Slice ();if _ecaaa !=nil {return nil ,_ecaaa ;};_bgaa .Gamma =_eead ;};_fbfab =_bdad .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _fbfab !=nil {_fbfab =_cc .TraceToDirectObject (_fbfab );_baccb ,_fcec :=_fbfab .(*_cc .PdfObjectArray );
if !_fcec {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _baccb .Len ()!=9{_df .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_baccb .String ());
return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_efbb ,_acdfe :=_baccb .GetAsFloat64Slice ();if _acdfe !=nil {return nil ,_acdfe ;
};_bgaa .Matrix =_efbb ;};return _bgaa ,nil ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _cc .PdfObject ;Flags _cc .PdfObject ;};func (_bdef *PdfReader )newPdfAnnotationMarkupFromDict (_gdag *_cc .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_geaf :=&PdfAnnotationMarkup {};if _geb :=_gdag .Get ("\u0054");
_geb !=nil {_geaf .T =_geb ;};if _fffc :=_gdag .Get ("\u0050\u006f\u0070u\u0070");_fffc !=nil {_cfbf ,_fabe :=_fffc .(*_cc .PdfIndirectObject );if !_fabe {if _ ,_cee :=_fffc .(*_cc .PdfObjectNull );!_cee {return nil ,_ede .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_deaf ,_dbcd :=_bdef .newPdfAnnotationFromIndirectObject (_cfbf );if _dbcd !=nil {return nil ,_dbcd ;};if _deaf !=nil {_bbcg ,_gbc :=_deaf ._fae .(*PdfAnnotationPopup );if !_gbc {return nil ,_ede .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_geaf .Popup =_bbcg ;};};};if _geab :=_gdag .Get ("\u0043\u0041");_geab !=nil {_geaf .CA =_geab ;};if _gdeg :=_gdag .Get ("\u0052\u0043");_gdeg !=nil {_geaf .RC =_gdeg ;};if _abab :=_gdag .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_abab !=nil {_geaf .CreationDate =_abab ;};if _gfbc :=_gdag .Get ("\u0049\u0052\u0054");_gfbc !=nil {_geaf .IRT =_gfbc ;};if _ggfd :=_gdag .Get ("\u0053\u0075\u0062\u006a");_ggfd !=nil {_geaf .Subj =_ggfd ;};if _bed :=_gdag .Get ("\u0052\u0054");_bed !=nil {_geaf .RT =_bed ;
};if _dcb :=_gdag .Get ("\u0049\u0054");_dcb !=nil {_geaf .IT =_dcb ;};if _egbc :=_gdag .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_egbc !=nil {_geaf .ExData =_egbc ;};return _geaf ,nil ;};func _bagc (_cbedb *_ec .ImageBase )(_ccgc Image ){_ccgc .Width =int64 (_cbedb .Width );
_ccgc .Height =int64 (_cbedb .Height );_ccgc .BitsPerComponent =int64 (_cbedb .BitsPerComponent );_ccgc .ColorComponents =_cbedb .ColorComponents ;_ccgc .Data =_cbedb .Data ;_ccgc ._aaaacg =_cbedb .Decode ;_ccgc ._ccee =_cbedb .Alpha ;return _ccgc ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_cdef :=&PdfColorspaceCalRGB {};_cdef .BlackPoint =[]float64 {0.0,0.0,0.0};_cdef .Gamma =[]float64 {1.0,1.0,1.0};_cdef .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _cdef ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_dbega *PdfPage )GetContainingPdfObject ()_cc .PdfObject {return _dbega ._bfgcg };var ErrColorOutOfRange =_ede .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
//
//	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_fbbb *PdfFont )ToUnicode ()string {if _fbbb .baseFields ()._fgbf ==nil {return "";};return _fbbb .baseFields ()._fgbf .Name ();};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_bffde *Image )AlphaMap (mapFunc AlphaMapFunc ){for _dafaf ,_aaaab :=range _bffde ._ccee {_bffde ._ccee [_dafaf ]=mapFunc (_aaaab );};};func _abcga (_bcdcf _cc .PdfObject )(*PdfColorspaceCalGray ,error ){_aebfd :=NewPdfColorspaceCalGray ();if _gega ,_bcg :=_bcdcf .(*_cc .PdfIndirectObject );
_bcg {_aebfd ._dedf =_gega ;};_bcdcf =_cc .TraceToDirectObject (_bcdcf );_ebgf ,_cgeca :=_bcdcf .(*_cc .PdfObjectArray );if !_cgeca {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ebgf .Len ()!=2{return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_bcdcf =_cc .TraceToDirectObject (_ebgf .Get (0));_bbga ,_cgeca :=_bcdcf .(*_cc .PdfObjectName );if !_cgeca {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_bbga !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_c .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_bcdcf =_cc .TraceToDirectObject (_ebgf .Get (1));
_abeff ,_cgeca :=_bcdcf .(*_cc .PdfObjectDictionary );if !_cgeca {return nil ,_c .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_bcdcf =_abeff .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_bcdcf =_cc .TraceToDirectObject (_bcdcf );_adfgb ,_cgeca :=_bcdcf .(*_cc .PdfObjectArray );if !_cgeca {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _adfgb .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_cfcc ,_cdecf :=_adfgb .GetAsFloat64Slice ();
if _cdecf !=nil {return nil ,_cdecf ;};_aebfd .WhitePoint =_cfcc ;_bcdcf =_abeff .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _bcdcf !=nil {_bcdcf =_cc .TraceToDirectObject (_bcdcf );_adgc ,_gfgff :=_bcdcf .(*_cc .PdfObjectArray );
if !_gfgff {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _adgc .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_eege ,_ffff :=_adgc .GetAsFloat64Slice ();if _ffff !=nil {return nil ,_ffff ;};_aebfd .BlackPoint =_eege ;};_bcdcf =_abeff .Get ("\u0047\u0061\u006dm\u0061");if _bcdcf !=nil {_bcdcf =_cc .TraceToDirectObject (_bcdcf );_fgbg ,_bgab :=_cc .GetNumberAsFloat (_bcdcf );
if _bgab !=nil {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_aebfd .Gamma =_fgbg ;};return _aebfd ,nil ;};func (_ddbca *fontFile )loadFromSegments (_egfa ,_ccacg []byte )error {_df .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_egfa ),len (_ccacg ));
_daca :=_ddbca .parseASCIIPart (_egfa );if _daca !=nil {return _daca ;};_df .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_ddbca );if len (_ccacg )==0{return nil ;};_df .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_ddbca );
return nil ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_gfecg *PdfPageResources )GenerateXObjectName ()_cc .PdfObjectName {_acfda :=1;for {_ggce :=_cc .MakeName (_c .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_acfda ));if !_gfecg .HasXObjectByName (*_ggce ){return *_ggce ;};_acfda ++;};};

// PdfVersion returns version of the PDF file.
func (_gfeab *PdfReader )PdfVersion ()_cc .Version {return _gfeab ._bbed .PdfVersion ()};

// ReplacePage replaces the original page to a new page.
func (_aebf *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_gcec :=pageNum -1;for _eefb :=range _aebf ._dfaa {if _eefb ==_gcec {_bdefe :=page .Duplicate ();_cafcfc (_bdefe );_aebf ._dfaa [_eefb ]=_bdefe ;};};};

// ToPdfObject implements interface PdfModel.
func (_eced *PdfAnnotation3D )ToPdfObject ()_cc .PdfObject {_eced .PdfAnnotation .ToPdfObject ();_bdcc :=_eced ._cef ;_dabg :=_bdcc .PdfObject .(*_cc .PdfObjectDictionary );_dabg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0033\u0044"));
_dabg .SetIfNotNil ("\u0033\u0044\u0044",_eced .T3DD );_dabg .SetIfNotNil ("\u0033\u0044\u0056",_eced .T3DV );_dabg .SetIfNotNil ("\u0033\u0044\u0041",_eced .T3DA );_dabg .SetIfNotNil ("\u0033\u0044\u0049",_eced .T3DI );_dabg .SetIfNotNil ("\u0033\u0044\u0042",_eced .T3DB );
return _bdcc ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_cecc *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _bfeea []float64 ;for _egeb :=0;_egeb < _cecc .GetNumComponents ();_egeb ++{_bfeea =append (_bfeea ,0.0,1.0);};return _bfeea ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_gfae []_cc .PdfObject )([]_cc .PdfObject ,error );};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_fgaa *PdfAnnotation )ToPdfObject ()_cc .PdfObject {_ecf :=_fgaa ._cef ;_egff :=_ecf .PdfObject .(*_cc .PdfObjectDictionary );_egff .Clear ();_egff .Set ("\u0054\u0079\u0070\u0065",_cc .MakeName ("\u0041\u006e\u006eo\u0074"));_egff .SetIfNotNil ("\u0052\u0065\u0063\u0074",_fgaa .Rect );
_egff .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_fgaa .Contents );_egff .SetIfNotNil ("\u0050",_fgaa .P );_egff .SetIfNotNil ("\u004e\u004d",_fgaa .NM );_egff .SetIfNotNil ("\u004d",_fgaa .M );_egff .SetIfNotNil ("\u0046",_fgaa .F );
_egff .SetIfNotNil ("\u0041\u0050",_fgaa .AP );_egff .SetIfNotNil ("\u0041\u0053",_fgaa .AS );_egff .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_fgaa .Border );_egff .SetIfNotNil ("\u0043",_fgaa .C );_egff .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_fgaa .StructParent );
_egff .SetIfNotNil ("\u004f\u0043",_fgaa .OC );return _ecf ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_cc .PdfObjectBool ;SigFlags *_cc .PdfObjectInteger ;CO *_cc .PdfObjectArray ;DR *PdfPageResources ;DA *_cc .PdfObjectString ;Q *_cc .PdfObjectInteger ;XFA _cc .PdfObject ;

// ADBEEchoSign extra objects from Adobe Acrobat, causing signature invalid if not exists.
ADBEEchoSign _cc .PdfObject ;_cgbg *_cc .PdfIndirectObject ;_caadg bool ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_dfcbb PdfModel ;_ecegf _cc .PdfObject ;};func (_afcde *PdfReader )loadDSS ()(*DSS ,error ){if _afcde ._bbed .GetCrypter ()!=nil &&!_afcde ._bbed .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_edafb :=_afcde ._gfed .Get ("\u0044\u0053\u0053");if _edafb ==nil {return nil ,nil ;};_cgdgd ,_ :=_cc .GetIndirect (_edafb );_edafb =_cc .TraceToDirectObject (_edafb );switch _eacf :=_edafb .(type ){case *_cc .PdfObjectNull :return nil ,nil ;case *_cc .PdfObjectDictionary :return _dedad (_cgdgd ,_eacf );
};return nil ,_c .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_edafb );};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ddde *PdfShadingType2 )ToPdfObject ()_cc .PdfObject {_ddde .PdfShading .ToPdfObject ();_aeadb ,_cgfef :=_ddde .getShadingDict ();if _cgfef !=nil {_df .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _aeadb ==nil {_df .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _ddde .Coords !=nil {_aeadb .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_ddde .Coords );
};if _ddde .Domain !=nil {_aeadb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ddde .Domain );};if _ddde .Function !=nil {if len (_ddde .Function )==1{_aeadb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ddde .Function [0].ToPdfObject ());}else {_bcbbg :=_cc .MakeArray ();
for _ ,_aggdaf :=range _ddde .Function {_bcbbg .Append (_aggdaf .ToPdfObject ());};_aeadb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bcbbg );};};if _ddde .Extend !=nil {_aeadb .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_ddde .Extend );
};return _ddde ._ccfe ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _cc .PdfObject ;};

// GetXObjectByName gets XObject by name.
func (_ebcbd *PdfPage )GetXObjectByName (name _cc .PdfObjectName )(_cc .PdfObject ,bool ){_gcbdf ,_aaede :=_ebcbd .Resources .XObject .(*_cc .PdfObjectDictionary );if !_aaede {return nil ,false ;};if _ebcff :=_gcbdf .Get (name );_ebcff !=nil {return _ebcff ,true ;
};return nil ,false ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_edcga *LTV )EnableByName (name string ,extraCerts []*_ffd .Certificate )error {_caded :=_edcga ._cbgcf ._eaeg .AcroForm ;for _ ,_fabbc :=range _caded .AllFields (){_gdfge ,_ :=_fabbc .GetContext ().(*PdfFieldSignature );if _gdfge ==nil {continue ;
};if _cbdb :=_gdfge .PartialName ();_cbdb !=name {continue ;};return _edcga .Enable (_gdfge .V ,extraCerts );};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_aagdcc *PdfSignatureReference )ToPdfObject ()_cc .PdfObject {_cacde :=_cc .MakeDict ();_cacde .SetIfNotNil ("\u0054\u0079\u0070\u0065",_aagdcc .Type );_cacde .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_aagdcc .TransformMethod );
_cacde .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_aagdcc .TransformParams );_cacde .SetIfNotNil ("\u0044\u0061\u0074\u0061",_aagdcc .Data );_cacde .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_aagdcc .DigestMethod );
return _cacde ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_becdc *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_cddf *PdfField )FullName ()(string ,error ){var _ffaaa _aac .Buffer ;_fbfd :=[]string {};if _cddf .T !=nil {_fbfd =append (_fbfd ,_cddf .T .Decoded ());};_abgbc :=map[*PdfField ]bool {};_abgbc [_cddf ]=true ;_gegf :=_cddf .Parent ;for _gegf !=nil {if _ ,_abed :=_abgbc [_gegf ];
_abed {return _ffaaa .String (),_ede .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _gegf .T ==nil {return _ffaaa .String (),_ede .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_fbfd =append (_fbfd ,_gegf .T .Decoded ());_abgbc [_gegf ]=true ;_gegf =_gegf .Parent ;};for _agca :=len (_fbfd )-1;_agca >=0;_agca --{_ffaaa .WriteString (_fbfd [_agca ]);if _agca > 0{_ffaaa .WriteString ("\u002e");};};return _ffaaa .String (),nil ;
};

// ToPdfObject implements interface PdfModel.
func (_gbfb *PdfAnnotationSquiggly )ToPdfObject ()_cc .PdfObject {_gbfb .PdfAnnotation .ToPdfObject ();_agdfb :=_gbfb ._cef ;_caad :=_agdfb .PdfObject .(*_cc .PdfObjectDictionary );_gbfb .PdfAnnotationMarkup .appendToPdfDictionary (_caad );_caad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_caad .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gbfb .QuadPoints );return _agdfb ;};

// String returns a string that describes `base`.
func (_debbb fontCommon )String ()string {return _c .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_debbb .coreString ());};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fcddbc *PdfShadingType5 )ToPdfObject ()_cc .PdfObject {_fcddbc .PdfShading .ToPdfObject ();_afcfb ,_afcfa :=_fcddbc .getShadingDict ();if _afcfa !=nil {_df .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fcddbc .BitsPerCoordinate !=nil {_afcfb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fcddbc .BitsPerCoordinate );};if _fcddbc .BitsPerComponent !=nil {_afcfb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fcddbc .BitsPerComponent );
};if _fcddbc .VerticesPerRow !=nil {_afcfb .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_fcddbc .VerticesPerRow );};if _fcddbc .Decode !=nil {_afcfb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fcddbc .Decode );
};if _fcddbc .Function !=nil {if len (_fcddbc .Function )==1{_afcfb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fcddbc .Function [0].ToPdfObject ());}else {_eaaea :=_cc .MakeArray ();for _ ,_abbge :=range _fcddbc .Function {_eaaea .Append (_abbge .ToPdfObject ());
};_afcfb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eaaea );};};return _fcddbc ._ccfe ;};func _gfg (_agd _cc .PdfObject )(*PdfFilespec ,error ){if _agd ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_agd );};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_deeab *PdfAcroForm ,_bgga *PdfField ,_fgab *PdfAnnotationWidget )(*_cc .PdfObjectDictionary ,error );};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_cc .PdfObjectArray ;Domain *_cc .PdfObjectArray ;Function []PdfFunction ;Extend *_cc .PdfObjectArray ;};func (_afbfd *PdfWriter )writeXRefStreams (_dggg int ,_cceaca int64 )error {_fccff :=_dggg +1;_afbfd ._faff [_fccff ]=crossReference {Type :1,ObjectNumber :_fccff ,Offset :_cceaca };
_eedaf :=_aac .NewBuffer (nil );_gcedc :=_cc .MakeArray ();for _fagga :=0;_fagga <=_dggg ;{for ;_fagga <=_dggg ;_fagga ++{_fbfc ,_fbgcc :=_afbfd ._faff [_fagga ];if _fbgcc &&(!_afbfd ._dfeeg ||_afbfd ._dfeeg &&(_fbfc .Type ==1&&_fbfc .Offset >=_afbfd ._beda ||_fbfc .Type ==0)){break ;
};};var _aaega int ;for _aaega =_fagga +1;_aaega <=_dggg ;_aaega ++{_eabbd ,_agagae :=_afbfd ._faff [_aaega ];if _agagae &&(!_afbfd ._dfeeg ||_afbfd ._dfeeg &&(_eabbd .Type ==1&&_eabbd .Offset > _afbfd ._beda )){continue ;};break ;};_gcedc .Append (_cc .MakeInteger (int64 (_fagga )),_cc .MakeInteger (int64 (_aaega -_fagga )));
for _aagcc :=_fagga ;_aagcc < _aaega ;_aagcc ++{_egaae :=_afbfd ._faff [_aagcc ];switch _egaae .Type {case 0:_g .Write (_eedaf ,_g .BigEndian ,byte (0));_g .Write (_eedaf ,_g .BigEndian ,uint32 (0));_g .Write (_eedaf ,_g .BigEndian ,uint16 (0xFFFF));case 1:_g .Write (_eedaf ,_g .BigEndian ,byte (1));
_g .Write (_eedaf ,_g .BigEndian ,uint32 (_egaae .Offset ));_g .Write (_eedaf ,_g .BigEndian ,uint16 (_egaae .Generation ));case 2:_g .Write (_eedaf ,_g .BigEndian ,byte (2));_g .Write (_eedaf ,_g .BigEndian ,uint32 (_egaae .ObjectNumber ));_g .Write (_eedaf ,_g .BigEndian ,uint16 (_egaae .Index ));
};};_fagga =_aaega +1;};_dggec ,_cafgb :=_cc .MakeStream (_eedaf .Bytes (),_cc .NewFlateEncoder ());if _cafgb !=nil {return _cafgb ;};_dggec .ObjectNumber =int64 (_fccff );_dggec .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_cc .MakeName ("\u0058\u0052\u0065\u0066"));
_dggec .PdfObjectDictionary .Set ("\u0057",_cc .MakeArray (_cc .MakeInteger (1),_cc .MakeInteger (4),_cc .MakeInteger (2)));_dggec .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_gcedc );_dggec .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_cc .MakeInteger (int64 (_fccff )));
_dggec .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_afbfd ._egdc );_dggec .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_afbfd ._fedec );if _afbfd ._dfeeg &&_afbfd ._adged > 0{_dggec .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_cc .MakeInteger (_afbfd ._adged ));
};if _afbfd ._acebb !=nil {_dggec .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_afbfd ._acged );};if _afbfd ._gacge ==nil &&_afbfd ._degcb !=""&&_afbfd ._aebda !=""{_afbfd ._gacge =_cc .MakeArray (_cc .MakeHexString (_afbfd ._degcb ),_cc .MakeHexString (_afbfd ._aebda ));
};if _afbfd ._gacge !=nil {_df .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_afbfd ._gacge );_dggec .Set ("\u0049\u0044",_afbfd ._gacge );};_afbfd .writeObject (int (_dggec .ObjectNumber ),_dggec );return nil ;};

// GetVersion gets the document version.
func (_fcabd *PdfWriter )GetVersion ()_cc .Version {return _fcabd ._gfgfa };

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_dacc :=NewPdfAction ();_aaa :=&PdfActionURI {};_aaa .PdfAction =_dacc ;_dacc .SetContext (_aaa );return _aaa ;};func (_ffbb *DSS )generateHashMap (_cegb []*_cc .PdfObjectStream )(map[string ]*_cc .PdfObjectStream ,error ){_egdeb :=map[string ]*_cc .PdfObjectStream {};
for _ ,_dfgg :=range _cegb {_cddgd ,_feag :=_cc .DecodeStream (_dfgg );if _feag !=nil {return nil ,_feag ;};_gaab ,_feag :=_afcae (_cddgd );if _feag !=nil {return nil ,_feag ;};_egdeb [string (_gaab )]=_dfgg ;};return _egdeb ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_ffaa *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_cc .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ede .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dffe ,_dccc :=_cc .GetNumbersAsFloat (objects );
if _dccc !=nil {return nil ,_dccc ;};return _ffaa .ColorFromFloats (_dffe );};

// GetContainingPdfObject implements interface PdfModel.
func (_fcaed *Permissions )GetContainingPdfObject ()_cc .PdfObject {return _fcaed ._gadeg };func _abegc (_adcb []byte )(_bfffg ,_afgda string ,_ccbe error ){_df .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_adcb ));
_fdgb :=_feccb .FindIndex (_adcb );if _fdgb ==nil {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_cc .ErrTypeError ;};_cgfaa :=_fdgb [1];_bbgac :=_fa .Index (string (_adcb [_cgfaa :]),_gcdff );if _bbgac < 0{_bfffg =string (_adcb [_cgfaa :]);return _bfffg ,"",nil ;};_fgef :=_cgfaa +_bbgac ;_bfffg =string (_adcb [_cgfaa :_fgef ]);_ecbeb :=_fgef ;
_bbgac =_fa .Index (string (_adcb [_ecbeb :]),_feagf );if _bbgac < 0{_df .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ccbe );
return "","",_cc .ErrTypeError ;};_fccad :=_ecbeb +_bbgac ;_afgda =string (_adcb [_ecbeb :_fccad ]);return _bfffg ,_afgda ,nil ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_cgdg *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_ede .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdgb :=vals [0];if _gdgb < 0.0||_gdgb > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gdgb );
return nil ,ErrColorOutOfRange ;};_fdcgf :=vals [1];if _fdcgf < 0.0||_fdcgf > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fdcgf );return nil ,ErrColorOutOfRange ;
};_gfdg :=vals [2];if _gfdg < 0.0||_gfdg > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gfdg );return nil ,ErrColorOutOfRange ;};_bebc :=vals [3];
if _bebc < 0.0||_bebc > 1.0{_df .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bebc );return nil ,ErrColorOutOfRange ;};_eecb :=NewPdfColorDeviceCMYK (_gdgb ,_fdcgf ,_gfdg ,_bebc );
return _eecb ,nil ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_dbcg *PdfFieldButton )IsCheckbox ()bool {return _dbcg .GetType ()==ButtonTypeCheckbox };

// AddExtGState adds a graphics state to the XObject resources.
func (_ecgac *PdfPage )AddExtGState (name _cc .PdfObjectName ,egs *_cc .PdfObjectDictionary )error {if _ecgac .Resources ==nil {_ecgac .Resources =NewPdfPageResources ();};if _ecgac .Resources .ExtGState ==nil {_ecgac .Resources .ExtGState =_cc .MakeDict ();
};_debeb ,_abggg :=_cc .TraceToDirectObject (_ecgac .Resources .ExtGState ).(*_cc .PdfObjectDictionary );if !_abggg {_df .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_cc .TraceToDirectObject (_ecgac .Resources .ExtGState ));
return _ede .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_debeb .Set (name ,egs );return nil ;};

// G returns the value of the green component of the color.
func (_bbb *PdfColorDeviceRGB )G ()float64 {return _bbb [1]};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_fage :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_fage ;};

// BaseFont returns the font's "BaseFont" field.
func (_ceea *PdfFont )BaseFont ()string {return _ceea .baseFields ()._baac };

// SetAction sets the PDF action for the annotation link.
func (_gdg *PdfAnnotationLink )SetAction (action *PdfAction ){_gdg ._gfgd =action ;if action ==nil {_gdg .A =nil ;};};func (_acba *PdfReader )newPdfAnnotationMovieFromDict (_caa *_cc .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_cgde :=PdfAnnotationMovie {};
_cgde .T =_caa .Get ("\u0054");_cgde .Movie =_caa .Get ("\u004d\u006f\u0076i\u0065");_cgde .A =_caa .Get ("\u0041");return &_cgde ,nil ;};func _edegae (_gaffe _cc .PdfObject )(*PdfColorspaceICCBased ,error ){_cgfe :=&PdfColorspaceICCBased {};if _edfa ,_egadc :=_gaffe .(*_cc .PdfIndirectObject );
_egadc {_cgfe ._bbddd =_edfa ;};_gaffe =_cc .TraceToDirectObject (_gaffe );_fdec ,_dbgb :=_gaffe .(*_cc .PdfObjectArray );if !_dbgb {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fdec .Len ()!=2{return nil ,_c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_gaffe =_cc .TraceToDirectObject (_fdec .Get (0));_ggdbc ,_dbgb :=_gaffe .(*_cc .PdfObjectName );if !_dbgb {return nil ,_c .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_ggdbc !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_c .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_gaffe =_fdec .Get (1);
_fgbc ,_dbgb :=_cc .GetStream (_gaffe );if !_dbgb {_df .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_gaffe );
return nil ,_c .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_fbgdd :=_fgbc .PdfObjectDictionary ;_bbee ,_dbgb :=_fbgdd .Get ("\u004e").(*_cc .PdfObjectInteger );
if !_dbgb {return nil ,_c .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_bbee !=1&&*_bbee !=3&&*_bbee !=4{return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_cgfe .N =int (*_bbee );if _dgcd :=_fbgdd .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_dgcd !=nil {_adaec ,_eafdd :=NewPdfColorspaceFromPdfObject (_dgcd );if _eafdd !=nil {return nil ,_eafdd ;};_cgfe .Alternate =_adaec ;};if _bgaag :=_fbgdd .Get ("\u0052\u0061\u006eg\u0065");
_bgaag !=nil {_bgaag =_cc .TraceToDirectObject (_bgaag );_abbf ,_gaea :=_bgaag .(*_cc .PdfObjectArray );if !_gaea {return nil ,_c .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _abbf .Len ()!=2*_cgfe .N {return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_fdbb ,_bbff :=_abbf .GetAsFloat64Slice ();if _bbff !=nil {return nil ,_bbff ;};_cgfe .Range =_fdbb ;}else {_cgfe .Range =make ([]float64 ,2*_cgfe .N );for _dgce :=0;_dgce < _cgfe .N ;_dgce ++{_cgfe .Range [2*_dgce ]=0.0;_cgfe .Range [2*_dgce +1]=1.0;
};};if _ggfe :=_fbgdd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_ggfe !=nil {_eedf ,_fgda :=_ggfe .(*_cc .PdfObjectStream );if !_fgda {return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_cgfe .Metadata =_eedf ;};_cacg ,_caeb :=_cc .DecodeStream (_fgbc );if _caeb !=nil {return nil ,_caeb ;};_cgfe .Data =_cacg ;_cgfe ._ecdc =_fgbc ;return _cgfe ,nil ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_cc .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_degg *_cc .PdfIndirectObject ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_bgedd *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_bgedd ._cffda =colorspace ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_acgc *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_fabf :=_acgc .fill (provider ,appGen );if _fabf !=nil {return _fabf ;};if _ ,_afaeg :=provider .(FieldImageProvider );_afaeg {_fabf =_acgc .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _fabf ;};func (_bcacf *PdfWriter )seekByName (_ddga _cc .PdfObject ,_cfcde []string ,_affae string )([]_cc .PdfObject ,error ){_df .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_ddga );
var _aaadf []_cc .PdfObject ;if _cfbde ,_gacbb :=_ddga .(*_cc .PdfIndirectObject );_gacbb {return _bcacf .seekByName (_cfbde .PdfObject ,_cfcde ,_affae );};if _cdgac ,_ddbeb :=_ddga .(*_cc .PdfObjectStream );_ddbeb {return _bcacf .seekByName (_cdgac .PdfObjectDictionary ,_cfcde ,_affae );
};if _afefe ,_cadg :=_ddga .(*_cc .PdfObjectDictionary );_cadg {_df .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_aefff :=range _afefe .Keys (){_gecce :=_afefe .Get (_aefff );if string (_aefff )==_affae {_aaadf =append (_aaadf ,_gecce );};for _ ,_edagf :=range _cfcde {if string (_aefff )==_edagf {_df .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_edagf );
_dcgde ,_bbgb :=_bcacf .seekByName (_gecce ,_cfcde ,_affae );if _bbgb !=nil {return _aaadf ,_bbgb ;};_aaadf =append (_aaadf ,_dcgde ...);break ;};};};return _aaadf ,nil ;};return _aaadf ,nil ;};func (_aacg *LTV )getCerts (_gdea []*_ffd .Certificate )([][]byte ,error ){_ebgfd :=make ([][]byte ,0,len (_gdea ));
for _ ,_gbce :=range _gdea {_ebgfd =append (_ebgfd ,_gbce .Raw );};return _ebgfd ,nil ;};func (_fggc *PdfReader )newPdfAnnotationSquareFromDict (_edf *_cc .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_fegc :=PdfAnnotationSquare {};_afca ,_addg :=_fggc .newPdfAnnotationMarkupFromDict (_edf );
if _addg !=nil {return nil ,_addg ;};_fegc .PdfAnnotationMarkup =_afca ;_fegc .BS =_edf .Get ("\u0042\u0053");_fegc .IC =_edf .Get ("\u0049\u0043");_fegc .BE =_edf .Get ("\u0042\u0045");_fegc .RD =_edf .Get ("\u0052\u0044");return &_fegc ,nil ;};func (_bfg *PdfReader )newPdfActionGotoRFromDict (_gcb *_cc .PdfObjectDictionary )(*PdfActionGoToR ,error ){_dafb ,_efe :=_gfg (_gcb .Get ("\u0046"));
if _efe !=nil {return nil ,_efe ;};return &PdfActionGoToR {D :_gcb .Get ("\u0044"),NewWindow :_gcb .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_dafb },nil ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_cc .PdfObject ;GetContainingPdfObject ()_cc .PdfObject ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_cfbcb :=&PdfSignature {Type :_cc .MakeName ("\u0053\u0069\u0067"),Handler :handler };_beeed :=&pdfSignDictionary {PdfObjectDictionary :_cc .MakeDict (),_bdfg :&handler ,_fdeef :_cfbcb };_cfbcb ._faecf =_cc .MakeIndirectObject (_beeed );
return _cfbcb ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
func (_dbgcg *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_ggeb :=_dbgcg .actualFont ();if _ggeb ==nil {_df .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_dbgcg ._ggec );
return _edg .CharMetrics {},false ;};if _fgede ,_ggdgf :=_ggeb .GetRuneMetrics (r );_ggdgf {return _fgede ,true ;};if _bbae ,_ffcb :=_dbgcg .GetFontDescriptor ();_ffcb ==nil &&_bbae !=nil {return _edg .CharMetrics {Wx :_bbae ._fbddf },true ;};_df .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dbgcg );
return _edg .CharMetrics {},false ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fbagc *PdfShadingType3 )ToPdfObject ()_cc .PdfObject {_fbagc .PdfShading .ToPdfObject ();_daafc ,_begfc :=_fbagc .getShadingDict ();if _begfc !=nil {_df .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fbagc .Coords !=nil {_daafc .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_fbagc .Coords );};if _fbagc .Domain !=nil {_daafc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fbagc .Domain );};if _fbagc .Function !=nil {if len (_fbagc .Function )==1{_daafc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fbagc .Function [0].ToPdfObject ());
}else {_abcfbg :=_cc .MakeArray ();for _ ,_bbcf :=range _fbagc .Function {_abcfbg .Append (_bbcf .ToPdfObject ());};_daafc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_abcfbg );};};if _fbagc .Extend !=nil {_daafc .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_fbagc .Extend );
};return _fbagc ._ccfe ;};func (_ddg *PdfAppender )updateObjectsDeep (_aggd _cc .PdfObject ,_fde map[_cc .PdfObject ]struct{}){if _fde ==nil {_fde =map[_cc .PdfObject ]struct{}{};};if _ ,_eage :=_fde [_aggd ];_eage ||_aggd ==nil {return ;};_fde [_aggd ]=struct{}{};
_eebd :=_cc .ResolveReferencesDeep (_aggd ,_ddg ._edaf );if _eebd !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eebd );};switch _gaeb :=_aggd .(type ){case *_cc .PdfIndirectObject :switch {case _gaeb .GetParser ()==_ddg ._eaeg ._bbed :return ;
case _gaeb .GetParser ()==_ddg .Reader ._bbed :_ggcf ,_ :=_ddg ._eaeg .GetIndirectObjectByNumber (int (_gaeb .ObjectNumber ));_dad ,_egbcd :=_ggcf .(*_cc .PdfIndirectObject );if _egbcd &&_dad !=nil {if _dad .PdfObject !=_gaeb .PdfObject &&_dad .PdfObject .WriteString ()!=_gaeb .PdfObject .WriteString (){if _fa .Contains (_gaeb .PdfObject .WriteString (),"\u002f\u0053\u0069\u0067")&&_fa .Contains (_gaeb .PdfObject .WriteString (),"\u002f\u0053\u0075\u0062\u0074\u0079\u0070\u0065"){return ;
};_ddg .addNewObject (_aggd );_ddg ._gbdc [_aggd ]=_gaeb .ObjectNumber ;};};default:_ddg .addNewObject (_aggd );};_ddg .updateObjectsDeep (_gaeb .PdfObject ,_fde );case *_cc .PdfObjectArray :for _ ,_edad :=range _gaeb .Elements (){_ddg .updateObjectsDeep (_edad ,_fde );
};case *_cc .PdfObjectDictionary :for _ ,_gggd :=range _gaeb .Keys (){_ddg .updateObjectsDeep (_gaeb .Get (_gggd ),_fde );};case *_cc .PdfObjectStreams :if _gaeb .GetParser ()!=_ddg ._eaeg ._bbed {for _ ,_aafg :=range _gaeb .Elements (){_ddg .updateObjectsDeep (_aafg ,_fde );
};};case *_cc .PdfObjectStream :switch {case _gaeb .GetParser ()==_ddg ._eaeg ._bbed :return ;case _gaeb .GetParser ()==_ddg .Reader ._bbed :if _cbge ,_cccg :=_ddg ._eaeg ._bbed .LookupByReference (_gaeb .PdfObjectReference );_cccg ==nil {var _bbac bool ;
if _cgcf ,_dgac :=_cc .GetStream (_cbge );_dgac &&_aac .Equal (_cgcf .Stream ,_gaeb .Stream ){_bbac =true ;};if _ccaac ,_ebef :=_cc .GetDict (_cbge );_bbac &&_ebef {_bbac =_ccaac .WriteString ()==_gaeb .PdfObjectDictionary .WriteString ();};if _bbac {return ;
};};if _gaeb .ObjectNumber !=0{_ddg ._gbdc [_aggd ]=_gaeb .ObjectNumber ;};default:if _ ,_cbcc :=_ddg ._bdge [_aggd ];!_cbcc {_ddg .addNewObject (_aggd );};};_ddg .updateObjectsDeep (_gaeb .PdfObjectDictionary ,_fde );};};

// ToPdfObject implements interface PdfModel.
func (_daed *PdfActionHide )ToPdfObject ()_cc .PdfObject {_daed .PdfAction .ToPdfObject ();_gbe :=_daed ._dae ;_aaaf :=_gbe .PdfObject .(*_cc .PdfObjectDictionary );_aaaf .SetIfNotNil ("\u0053",_cc .MakeName (string (ActionTypeHide )));_aaaf .SetIfNotNil ("\u0054",_daed .T );
_aaaf .SetIfNotNil ("\u0048",_daed .H );return _gbe ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// GetPage returns the PdfPage model for the specified page number.
func (_ggaeg *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _ggaeg ._bbed .GetCrypter ()!=nil &&!_ggaeg ._bbed .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_ggaeg ._fbad )< pageNumber {return nil ,_ede .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_gaef :=pageNumber -1;if _gaef < 0{return nil ,_c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_agef :=_ggaeg .PageList [_gaef ];
return _agef ,nil ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_dcacd *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _dcacd .Alternate ==nil {_df .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _dcacd .N ==1{_df .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_effab :=NewPdfColorspaceDeviceGray ();return _effab .ColorToRGB (color );}else if _dcacd .N ==3{_df .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _dcacd .N ==4{_df .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_egbd :=NewPdfColorspaceDeviceCMYK ();return _egbd .ColorToRGB (color );}else {return nil ,_ede .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_df .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_dcacd );
return _dcacd .Alternate .ColorToRGB (color );};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_aece FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_aece .Mask ()&^fl .Mask ())};

// SetDate sets the `M` field of the signature.
func (_gffda *PdfSignature )SetDate (date _b .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_gffda .M =_cc .MakeString (date .Format (format ));
};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_eada *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};func _gdaag (_dggd *_cc .PdfObjectDictionary )(*PdfFieldChoice ,error ){_cfgd :=&PdfFieldChoice {};_cfgd .Opt ,_ =_cc .GetArray (_dggd .Get ("\u004f\u0070\u0074"));
_cfgd .TI ,_ =_cc .GetInt (_dggd .Get ("\u0054\u0049"));_cfgd .I ,_ =_cc .GetArray (_dggd .Get ("\u0049"));return _cfgd ,nil ;};func (_bfgf *PdfAnnotationMarkup )appendToPdfDictionary (_eeda *_cc .PdfObjectDictionary ){_eeda .SetIfNotNil ("\u0054",_bfgf .T );
if _bfgf .Popup !=nil {_eeda .Set ("\u0050\u006f\u0070u\u0070",_bfgf .Popup .ToPdfObject ());};_eeda .SetIfNotNil ("\u0043\u0041",_bfgf .CA );_eeda .SetIfNotNil ("\u0052\u0043",_bfgf .RC );_eeda .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_bfgf .CreationDate );
_eeda .SetIfNotNil ("\u0049\u0052\u0054",_bfgf .IRT );_eeda .SetIfNotNil ("\u0053\u0075\u0062\u006a",_bfgf .Subj );_eeda .SetIfNotNil ("\u0052\u0054",_bfgf .RT );_eeda .SetIfNotNil ("\u0049\u0054",_bfgf .IT );_eeda .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_bfgf .ExData );
};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _cc .PdfObject ;Popup *PdfAnnotationPopup ;CA _cc .PdfObject ;RC _cc .PdfObject ;CreationDate _cc .PdfObject ;IRT _cc .PdfObject ;Subj _cc .PdfObject ;RT _cc .PdfObject ;IT _cc .PdfObject ;ExData _cc .PdfObject ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_gfcg *PdfFieldChoice )ToPdfObject ()_cc .PdfObject {_gfcg .PdfField .ToPdfObject ();_aedc :=_gfcg ._geafg ;_aadba :=_aedc .PdfObject .(*_cc .PdfObjectDictionary );_aadba .Set ("\u0046\u0054",_cc .MakeName ("\u0043\u0068"));if _gfcg .Opt !=nil {_aadba .Set ("\u004f\u0070\u0074",_gfcg .Opt );
};if _gfcg .TI !=nil {_aadba .Set ("\u0054\u0049",_gfcg .TI );};if _gfcg .I !=nil {_aadba .Set ("\u0049",_gfcg .I );};return _aedc ;};

// ToPdfObject returns a stream object.
func (_gccga *XObjectForm )ToPdfObject ()_cc .PdfObject {_fgffd :=_gccga ._accabd ;_ecbb :=_fgffd .PdfObjectDictionary ;if _gccga .Filter !=nil {_ecbb =_gccga .Filter .MakeStreamDict ();_fgffd .PdfObjectDictionary =_ecbb ;};_ecbb .Set ("\u0054\u0079\u0070\u0065",_cc .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_ecbb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0046\u006f\u0072\u006d"));_ecbb .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_gccga .FormType );_ecbb .SetIfNotNil ("\u0042\u0042\u006f\u0078",_gccga .BBox );_ecbb .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_gccga .Matrix );
if _gccga .Resources !=nil {_ecbb .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gccga .Resources .ToPdfObject ());};_ecbb .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_gccga .Group );_ecbb .SetIfNotNil ("\u0052\u0065\u0066",_gccga .Ref );_ecbb .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_gccga .MetaData );
_ecbb .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_gccga .PieceInfo );_ecbb .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_gccga .LastModified );_ecbb .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_gccga .StructParent );
_ecbb .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_gccga .StructParents );_ecbb .SetIfNotNil ("\u004f\u0050\u0049",_gccga .OPI );_ecbb .SetIfNotNil ("\u004f\u0043",_gccga .OC );_ecbb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gccga .Name );
_ecbb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cc .MakeInteger (int64 (len (_gccga .Stream ))));_fgffd .Stream =_gccga .Stream ;return _fgffd ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_fdaac *PdfTilingPattern )ToPdfObject ()_cc .PdfObject {_fdaac .PdfPattern .ToPdfObject ();_gbedb :=_fdaac .getDict ();if _fdaac .PaintType !=nil {_gbedb .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_fdaac .PaintType );};if _fdaac .TilingType !=nil {_gbedb .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_fdaac .TilingType );
};if _fdaac .BBox !=nil {_gbedb .Set ("\u0042\u0042\u006f\u0078",_fdaac .BBox .ToPdfObject ());};if _fdaac .XStep !=nil {_gbedb .Set ("\u0058\u0053\u0074e\u0070",_fdaac .XStep );};if _fdaac .YStep !=nil {_gbedb .Set ("\u0059\u0053\u0074e\u0070",_fdaac .YStep );
};if _fdaac .Resources !=nil {_gbedb .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_fdaac .Resources .ToPdfObject ());};if _fdaac .Matrix !=nil {_gbedb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_fdaac .Matrix );};return _fdaac ._ecegf ;};func _eccde ()string {_aaefb .Lock ();
defer _aaefb .Unlock ();return _fcafc };func _ceegg (_ceec _cc .PdfObject )(*fontFile ,error ){_df .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_ceec );
_bccbc :=&fontFile {};_ceec =_cc .TraceToDirectObject (_ceec );_cbedc ,_acdad :=_ceec .(*_cc .PdfObjectStream );if !_acdad {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_ceec );
return nil ,_cc .ErrTypeError ;};_gefe :=_cbedc .PdfObjectDictionary ;_cccbf ,_edda :=_cc .DecodeStream (_cbedc );if _edda !=nil {return nil ,_edda ;};_agga ,_acdad :=_cc .GetNameVal (_gefe .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_acdad {_bccbc ._cece =_agga ;
if _agga =="\u0054\u0079\u0070\u0065\u0031\u0043"{_df .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_dfed ,_ :=_cc .GetIntVal (_gefe .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_dgfad ,_ :=_cc .GetIntVal (_gefe .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _dfed > len (_cccbf ){_dfed =len (_cccbf );
};if _dfed +_dgfad > len (_cccbf ){_dgfad =len (_cccbf )-_dfed ;};_gbfdf :=_cccbf [:_dfed ];var _edfd []byte ;if _dgfad > 0{_edfd =_cccbf [_dfed :_dfed +_dgfad ];};if _dfed > 0&&_dgfad > 0{_eeebf :=_bccbc .loadFromSegments (_gbfdf ,_edfd );if _eeebf !=nil {return nil ,_eeebf ;
};};return _bccbc ,nil ;};type pdfSignDictionary struct{*_cc .PdfObjectDictionary ;_bdfg *SignatureHandler ;_fdeef *PdfSignature ;_cfcfd int64 ;_eega int ;_dggf int ;_gdcd int ;_ddedcf int ;};

// GetCerts returns the signature certificate chain.
func (_bbacd *PdfSignature )GetCerts ()([]*_ffd .Certificate ,error ){var _aabaf []func ()([]*_ffd .Certificate ,error );switch _dfada ,_ :=_cc .GetNameVal (_bbacd .SubFilter );_dfada {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_aabaf =append (_aabaf ,_bbacd .extractChainFromPKCS7 ,_bbacd .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_aabaf =append (_aabaf ,_bbacd .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_aabaf =append (_aabaf ,_bbacd .extractChainFromPKCS7 );
default:return nil ,_c .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_dfada );};for _ ,_gebaf :=range _aabaf {_cgcdg ,_fcddd :=_gebaf ();if _fcddd !=nil {return nil ,_fcddd ;
};if len (_cgcdg )> 0{return _cgcdg ,nil ;};};return nil ,ErrSignNoCertificates ;};

// ToPdfObject implements interface PdfModel.
func (_cfef *PdfAnnotationPolygon )ToPdfObject ()_cc .PdfObject {_cfef .PdfAnnotation .ToPdfObject ();_gggf :=_cfef ._cef ;_cbfb :=_gggf .PdfObject .(*_cc .PdfObjectDictionary );_cfef .PdfAnnotationMarkup .appendToPdfDictionary (_cbfb );_cbfb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_cbfb .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_cfef .Vertices );_cbfb .SetIfNotNil ("\u004c\u0045",_cfef .LE );_cbfb .SetIfNotNil ("\u0042\u0053",_cfef .BS );_cbfb .SetIfNotNil ("\u0049\u0043",_cfef .IC );_cbfb .SetIfNotNil ("\u0042\u0045",_cfef .BE );
_cbfb .SetIfNotNil ("\u0049\u0054",_cfef .IT );_cbfb .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cfef .Measure );return _gggf ;};

// PdfColorPatternType2 represents a color shading pattern type 2 (Axial).
type PdfColorPatternType2 struct{Color PdfColor ;PatternName _cc .PdfObjectName ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _cc .StreamEncoder )(*XObjectImage ,error ){_dcadf :=NewXObjectImage ();return UpdateXObjectImageFromImage (_dcadf ,img ,cs ,encoder );};

// ToPdfObject implements interface PdfModel.
func (_gac *PdfActionTrans )ToPdfObject ()_cc .PdfObject {_gac .PdfAction .ToPdfObject ();_ge :=_gac ._dae ;_ggd :=_ge .PdfObject .(*_cc .PdfObjectDictionary );_ggd .SetIfNotNil ("\u0053",_cc .MakeName (string (ActionTypeTrans )));_ggd .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_gac .Trans );
return _ge ;};

// NewMultipleFontEncoder returns instantiates a new *MultipleFontEncoder
func NewMultipleFontEncoder (fonts []*PdfFont )*MultipleFontEncoder {return &MultipleFontEncoder {_dbfbg :fonts ,CurrentFont :fonts [0]};};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_fgacd *PdfPageResources )GetXObjectFormByName (keyName _cc .PdfObjectName )(*XObjectForm ,error ){_ccedf ,_dcaad :=_fgacd .GetXObjectByName (keyName );if _ccedf ==nil {return nil ,nil ;};if _dcaad !=XObjectTypeForm {return nil ,_ede .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_gbgcg ,_feec :=NewXObjectFormFromStream (_ccedf );if _feec !=nil {return nil ,_feec ;};return _gbgcg ,nil ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_cgbc *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_gdggd ,_fbaag :=_cc .GetDict (_cgbc ._feff .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_fbaag {_gdggd =_cc .MakeDict ();_cgbc ._feff .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_gdggd );
};_ebacce ,_fbaag :=_cc .GetDict (_gdggd .Get (_cc .PdfObjectName (extName )));if !_fbaag {_ebacce =_cc .MakeDict ();_gdggd .Set (_cc .PdfObjectName (extName ),_ebacce );};if _adbd ,_ :=_cc .GetNameVal (_ebacce .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_adbd !=baseVersion {_ebacce .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_cc .MakeName (baseVersion ));};if _dabcg ,_ :=_cc .GetIntVal (_ebacce .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_dabcg !=extLevel {_ebacce .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_cc .MakeInteger (int64 (extLevel )));};};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_dgff *PdfPageResources )GetXObjectImageByName (keyName _cc .PdfObjectName )(*XObjectImage ,error ){_cbggc ,_gbbfb :=_dgff .GetXObjectByName (keyName );if _cbggc ==nil {return nil ,nil ;};if _gbbfb !=XObjectTypeImage {return nil ,_ede .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_eddad ,_fafcb :=NewXObjectImageFromStream (_cbggc );if _fafcb !=nil {return nil ,_fafcb ;};return _eddad ,nil ;};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_aa .File ,error ){const _aege ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_ecgce ,_fbfbae :=_aa .Open (pdfFile );if _fbfbae !=nil {return nil ,nil ,_fbfbae ;};_gcbce ,_fbfbae :=_dcbcbe (_ecgce ,opts ,true ,_aege );if _fbfbae !=nil {_ecgce .Close ();return nil ,nil ,_fbfbae ;};return _gcbce ,_ecgce ,nil ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_aaddf *PdfPageResources )GetContainingPdfObject ()_cc .PdfObject {return _aaddf ._bggcc };

// ToPdfObject converts rectangle to a PDF object.
func (_ccddg *PdfRectangle )ToPdfObject ()_cc .PdfObject {return _cc .MakeArray (_cc .MakeFloat (_ccddg .Llx ),_cc .MakeFloat (_ccddg .Lly ),_cc .MakeFloat (_ccddg .Urx ),_cc .MakeFloat (_ccddg .Ury ));};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_aaefb .Lock ();defer _aaefb .Unlock ();_fgeb =author };func _edeba (_degb *_cc .PdfObjectDictionary )bool {for _ ,_fgba :=range _degb .Keys (){if _ ,_ecaab :=_eebdc [_fgba .String ()];_ecaab {return true ;};};return false ;
};

// ToPdfObject implements interface PdfModel.
func (_cfd *PdfActionGoToE )ToPdfObject ()_cc .PdfObject {_cfd .PdfAction .ToPdfObject ();_add :=_cfd ._dae ;_bgg :=_add .PdfObject .(*_cc .PdfObjectDictionary );_bgg .SetIfNotNil ("\u0053",_cc .MakeName (string (ActionTypeGoToE )));if _cfd .F !=nil {_bgg .Set ("\u0046",_cfd .F .ToPdfObject ());
};_bgg .SetIfNotNil ("\u0044",_cfd .D );_bgg .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_cfd .NewWindow );_bgg .SetIfNotNil ("\u0054",_cfd .T );return _add ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_gbfg *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_ccadb :=0.3*_gbfg .R ()+0.59*_gbfg .G ()+0.11*_gbfg .B ();_ccadb =_ed .Min (_ed .Max (_ccadb ,0.0),1.0);return NewPdfColorDeviceGray (_ccadb );};func (_dgc *PdfReader )newPdfAnnotationUnderlineFromDict (_afa *_cc .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_gfbd :=PdfAnnotationUnderline {};
_aaeb ,_bbad :=_dgc .newPdfAnnotationMarkupFromDict (_afa );if _bbad !=nil {return nil ,_bbad ;};_gfbd .PdfAnnotationMarkup =_aaeb ;_gfbd .QuadPoints =_afa .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gfbd ,nil ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_afea *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_ffag ,_faec :=color .(*PdfColorDeviceRGB );if !_faec {_df .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_ede .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _ffag ,nil ;};

// Subtype returns the font's "Subtype" field.
func (_gbcf *PdfFont )Subtype ()string {_fged :=_gbcf .baseFields ()._edfc ;if _dcceg ,_fecd :=_gbcf ._ggec .(*pdfFontType0 );_fecd {_fged =_fged +"\u003a"+_dcceg .DescendantFont .Subtype ();};return _fged ;};func (_fcbfa *PdfReader )newPdfPageFromDict (_dgacf *_cc .PdfObjectDictionary )(*PdfPage ,error ){_gbec :=NewPdfPage ();
_gbec ._gcead =_dgacf ;_gbec ._gebd =*_dgacf ;_agcac :=*_dgacf ;_gacdf ,_bdca :=_agcac .Get ("\u0054\u0079\u0070\u0065").(*_cc .PdfObjectName );if !_bdca {return nil ,_ede .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");
};if *_gacdf !="\u0050\u0061\u0067\u0065"{return nil ,_ede .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _ddbcg :=_agcac .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_ddbcg !=nil {_gbec .Parent =_ddbcg ;};if _adgea :=_agcac .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_adgea !=nil {_dabad ,_ccdea :=_cc .GetString (_adgea );if !_ccdea {return nil ,_ede .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_cfgdc ,_dddfe :=NewPdfDate (_dabad .Str ());if _dddfe !=nil {return nil ,_dddfe ;};_gbec .LastModified =&_cfgdc ;};if _ddfcdb :=_agcac .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ddfcdb !=nil &&!_cc .IsNullObject (_ddfcdb ){_edga ,_ebfef :=_cc .GetDict (_ddfcdb );
if !_ebfef {return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ddfcdb );};var _efedc error ;_gbec .Resources ,_efedc =NewPdfPageResourcesFromDict (_edga );
if _efedc !=nil {return nil ,_efedc ;};}else {_dgafd ,_dbedb :=_gbec .getParentResources ();if _dbedb !=nil {return nil ,_dbedb ;};if _dgafd ==nil {_dgafd =NewPdfPageResources ();};_gbec .Resources =_dgafd ;};if _cagdb :=_agcac .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_cagdb !=nil {_eaaa ,_ffdcc :=_cc .GetArray (_cagdb );if !_ffdcc {return nil ,_ede .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _eagad error ;
_gbec .MediaBox ,_eagad =NewPdfRectangle (*_eaaa );if _eagad !=nil {return nil ,_eagad ;};};if _fbfe :=_agcac .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_fbfe !=nil {_bfafd ,_aceea :=_cc .GetArray (_fbfe );if !_aceea {return nil ,_ede .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _cdcbb error ;_gbec .CropBox ,_cdcbb =NewPdfRectangle (*_bfafd );if _cdcbb !=nil {return nil ,_cdcbb ;};};if _gdagc :=_agcac .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_gdagc !=nil {_agdb ,_dffbg :=_cc .GetArray (_gdagc );if !_dffbg {return nil ,_ede .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _dcbbe error ;_gbec .BleedBox ,_dcbbe =NewPdfRectangle (*_agdb );if _dcbbe !=nil {return nil ,_dcbbe ;};};if _gcabgd :=_agcac .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_gcabgd !=nil {_gdefe ,_gdaf :=_cc .GetArray (_gcabgd );if !_gdaf {return nil ,_ede .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _eaacg error ;_gbec .TrimBox ,_eaacg =NewPdfRectangle (*_gdefe );if _eaacg !=nil {return nil ,_eaacg ;};};if _gegbf :=_agcac .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_gegbf !=nil {_dbccf ,_fcdafg :=_cc .GetArray (_gegbf );if !_fcdafg {return nil ,_ede .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _febca error ;_gbec .ArtBox ,_febca =NewPdfRectangle (*_dbccf );if _febca !=nil {return nil ,_febca ;};};if _fggef :=_agcac .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_fggef !=nil {_gbec .BoxColorInfo =_fggef ;};
if _afcaa :=_agcac .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_afcaa !=nil {_gbec .Contents =_afcaa ;};if _bfdfg :=_agcac .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_bfdfg !=nil {_adaeee ,_bbfab :=_cc .GetNumberAsInt64 (_bfdfg );if _bbfab !=nil {return nil ,_ede .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_gbec .Rotate =&_adaeee ;};if _abec :=_agcac .Get ("\u0047\u0072\u006fu\u0070");_abec !=nil {_gbec .Group =_abec ;};if _fbfee :=_agcac .Get ("\u0054\u0068\u0075m\u0062");_fbfee !=nil {_gbec .Thumb =_fbfee ;};if _gcgfc :=_agcac .Get ("\u0042");_gcgfc !=nil {_gbec .B =_gcgfc ;
};if _ebabg :=_agcac .Get ("\u0044\u0075\u0072");_ebabg !=nil {_gbec .Dur =_ebabg ;};if _affb :=_agcac .Get ("\u0054\u0072\u0061n\u0073");_affb !=nil {_gbec .Trans =_affb ;};if _egfge :=_agcac .Get ("\u0041\u0041");_egfge !=nil {_gbec .AA =_egfge ;};if _ggcdd :=_agcac .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");
_ggcdd !=nil {_gbec .Metadata =_ggcdd ;};if _deedg :=_agcac .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_deedg !=nil {_gbec .PieceInfo =_deedg ;};if _dgfb :=_agcac .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_dgfb !=nil {_gbec .StructParents =_dgfb ;};if _ccaga :=_agcac .Get ("\u0049\u0044");_ccaga !=nil {_gbec .ID =_ccaga ;};if _agbdef :=_agcac .Get ("\u0050\u005a");_agbdef !=nil {_gbec .PZ =_agbdef ;};if _bbfc :=_agcac .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_bbfc !=nil {_gbec .SeparationInfo =_bbfc ;};if _gfdf :=_agcac .Get ("\u0054\u0061\u0062\u0073");_gfdf !=nil {_gbec .Tabs =_gfdf ;};if _fffbb :=_agcac .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_fffbb !=nil {_gbec .TemplateInstantiated =_fffbb ;};if _adeg :=_agcac .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_adeg !=nil {_gbec .PresSteps =_adeg ;};if _aafba :=_agcac .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_aafba !=nil {_gbec .UserUnit =_aafba ;
};if _fcdg :=_agcac .Get ("\u0056\u0050");_fcdg !=nil {_gbec .VP =_fcdg ;};if _aebfe :=_agcac .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_aebfe !=nil {_gbec .Annots =_aebfe ;};_gbec ._caebc =_fcbfa ;return _gbec ,nil ;};

// AddCustomInfo adds a custom info into document info dictionary.
func (_baccc *PdfInfo )AddCustomInfo (name string ,value string )error {if _baccc ._cbag ==nil {_baccc ._cbag =_cc .MakeDict ();};if _ ,_eefc :=_eecae [name ];_eefc {return _c .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_baccc ._cbag .SetIfNotNil (*_cc .MakeName (name ),_cc .MakeString (value ));return nil ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_aggag *PdfPageResources )GetXObjectByName (keyName _cc .PdfObjectName )(*_cc .PdfObjectStream ,XObjectType ){if _aggag .XObject ==nil {return nil ,XObjectTypeUndefined ;};_faeec ,_bcbfb :=_cc .TraceToDirectObject (_aggag .XObject ).(*_cc .PdfObjectDictionary );
if !_bcbfb {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cc .TraceToDirectObject (_aggag .XObject ));
return nil ,XObjectTypeUndefined ;};if _ggfge :=_faeec .Get (keyName );_ggfge !=nil {_bgffd ,_dbccc :=_cc .GetStream (_ggfge );if !_dbccc {_df .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_ggfge );
return nil ,XObjectTypeUndefined ;};_edgc :=_bgffd .PdfObjectDictionary ;_ccefb ,_dbccc :=_cc .TraceToDirectObject (_edgc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_cc .PdfObjectName );if !_dbccc {_df .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_edgc .String ());
return nil ,XObjectTypeUndefined ;};if *_ccefb =="\u0049\u006d\u0061g\u0065"{return _bgffd ,XObjectTypeImage ;}else if *_ccefb =="\u0046\u006f\u0072\u006d"{return _bgffd ,XObjectTypeForm ;}else if *_ccefb =="\u0050\u0053"{return _bgffd ,XObjectTypePS ;
}else {_df .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_ccefb );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};

// ToPdfObject implements interface PdfModel.
func (_gedg *PdfAnnotationLink )ToPdfObject ()_cc .PdfObject {_gedg .PdfAnnotation .ToPdfObject ();_gcdfa :=_gedg ._cef ;_abbd :=_gcdfa .PdfObject .(*_cc .PdfObjectDictionary );_abbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u004c\u0069\u006e\u006b"));
if _gedg ._gfgd !=nil &&_gedg ._gfgd ._cf !=nil {_abbd .Set ("\u0041",_gedg ._gfgd ._cf .ToPdfObject ());}else if _gedg .A !=nil {_abbd .Set ("\u0041",_gedg .A );};_abbd .SetIfNotNil ("\u0044\u0065\u0073\u0074",_gedg .Dest );_abbd .SetIfNotNil ("\u0048",_gedg .H );
_abbd .SetIfNotNil ("\u0050\u0041",_gedg .PA );_abbd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gedg .QuadPoints );_abbd .SetIfNotNil ("\u0042\u0053",_gedg .BS );return _gcdfa ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_gcbfd *BorderStyle )GetPdfName ()string {switch *_gcbfd {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// AddAnnotation appends `annot` to the list of page annotations.
func (_ggbbc *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _ggbbc ._dagff ==nil {_ggbbc .GetAnnotations ();};_ggbbc ._dagff =append (_ggbbc ._dagff ,annot );};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _cc .StreamEncoder ;Intent _cc .PdfObject ;ImageMask _cc .PdfObject ;Mask _cc .PdfObject ;Matte _cc .PdfObject ;Decode _cc .PdfObject ;Interpolate _cc .PdfObject ;Alternatives _cc .PdfObject ;
SMask _cc .PdfObject ;SMaskInData _cc .PdfObject ;Name _cc .PdfObject ;StructParent _cc .PdfObject ;ID _cc .PdfObject ;OPI _cc .PdfObject ;Metadata _cc .PdfObject ;OC _cc .PdfObject ;Stream []byte ;_dbccfb *_cc .PdfObjectStream ;_bebed bool ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_efbcf interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_deafca *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_df .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ede .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_ede .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// AddImageResource adds an image to the XObject resources.
func (_dcfbab *PdfPage )AddImageResource (name _cc .PdfObjectName ,ximg *XObjectImage )error {var _gedgb *_cc .PdfObjectDictionary ;if _dcfbab .Resources .XObject ==nil {_gedgb =_cc .MakeDict ();_dcfbab .Resources .XObject =_gedgb ;}else {var _cdedf bool ;
_gedgb ,_cdedf =(_dcfbab .Resources .XObject ).(*_cc .PdfObjectDictionary );if !_cdedf {return _ede .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_gedgb .Set (name ,ximg .ToPdfObject ());
return nil ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_fcbg :=NewPdfAnnotation ();_cdf :=&PdfAnnotationLink {};_cdf .PdfAnnotation =_fcbg ;_fcbg .SetContext (_cdf );return _cdf ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _cc .PdfObject ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _cc .PdfObject ;RichMediaContent _cc .PdfObject ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_eadg *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_dada *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_ede .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};func (_dcgfc *PdfWriter )addObjects (_aafgfg _cc .PdfObject )error {_df .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _adfaf ,_ccaea :=_aafgfg .(*_cc .PdfIndirectObject );_ccaea {_df .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_df .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_aafgfg ,_adfaf );_df .Log .Trace ("\u002d\u0020\u0025\u0073",_adfaf .PdfObject );
if _dcgfc .addObject (_adfaf ){_gdggce :=_dcgfc .addObjects (_adfaf .PdfObject );if _gdggce !=nil {return _gdggce ;};};return nil ;};if _eeegg ,_cccfg :=_aafgfg .(*_cc .PdfObjectStream );_cccfg {_df .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");
_df .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_aafgfg ,_aafgfg );if _dcgfc .addObject (_eeegg ){_ffabd :=_dcgfc .addObjects (_eeegg .PdfObjectDictionary );if _ffabd !=nil {return _ffabd ;};};return nil ;};if _edgae ,_bbcgd :=_aafgfg .(*_cc .PdfObjectDictionary );
_bbcgd {_df .Log .Trace ("\u0044\u0069\u0063\u0074");_df .Log .Trace ("\u002d\u0020\u0025\u0073",_aafgfg );for _ ,_cceaa :=range _edgae .Keys (){_bbbfb :=_edgae .Get (_cceaa );if _cffcd ,_ceffg :=_bbbfb .(*_cc .PdfObjectReference );_ceffg {_bbbfb =_cffcd .Resolve ();
_edgae .Set (_cceaa ,_bbbfb );};if _cceaa !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _bgfde :=_dcgfc .addObjects (_bbbfb );_bgfde !=nil {return _bgfde ;};}else {if _ ,_fefea :=_bbbfb .(*_cc .PdfObjectNull );_fefea {continue ;};if _cbfga :=_dcgfc .hasObject (_bbbfb );
!_cbfga {_df .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_bbbfb ,_bbbfb ,_bbbfb );_dcgfc ._fgebe [_bbbfb ]=append (_dcgfc ._fgebe [_bbbfb ],_edgae );
};};};return nil ;};if _agaga ,_fbcabb :=_aafgfg .(*_cc .PdfObjectArray );_fbcabb {_df .Log .Trace ("\u0041\u0072\u0072a\u0079");_df .Log .Trace ("\u002d\u0020\u0025\u0073",_aafgfg );if _agaga ==nil {return _ede .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _bgdac ,_dcdfc :=range _agaga .Elements (){if _cagea ,_cdbfc :=_dcdfc .(*_cc .PdfObjectReference );_cdbfc {_dcdfc =_cagea .Resolve ();_agaga .Set (_bgdac ,_dcdfc );};if _fccbfd :=_dcgfc .addObjects (_dcdfc );_fccbfd !=nil {return _fccbfd ;};};return nil ;
};if _ ,_cdcbg :=_aafgfg .(*_cc .PdfObjectReference );_cdcbg {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_aafgfg );
return _ede .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_gagce *PdfReader )GetObjectNums ()[]int {return _gagce ._bbed .GetObjectNums ()};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_aafc *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_cc .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ede .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cdfg ,_dcce :=_cc .GetNumbersAsFloat (objects );
if _dcce !=nil {return nil ,_dcce ;};return _aafc .ColorFromFloats (_cdfg );};

// Y returns the value of the yellow component of the color.
func (_eecdf *PdfColorDeviceCMYK )Y ()float64 {return _eecdf [2]};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_egcg :=NewPdfAnnotation ();_daae :=&PdfAnnotationStrikeOut {};_daae .PdfAnnotation =_egcg ;_daae .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_egcg .SetContext (_daae );return _daae ;};

// multiFontEncoder implements a an Encoder that holds a list of fonts provided.
type MultipleFontEncoder struct{_dbfbg []*PdfFont ;CurrentFont *PdfFont ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_cc .PdfObjectInteger ;BitsPerComponent *_cc .PdfObjectInteger ;BitsPerFlag *_cc .PdfObjectInteger ;Decode *_cc .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject implements interface PdfModel.
func (_ggf *PdfActionSound )ToPdfObject ()_cc .PdfObject {_ggf .PdfAction .ToPdfObject ();_bgf :=_ggf ._dae ;_aed :=_bgf .PdfObject .(*_cc .PdfObjectDictionary );_aed .SetIfNotNil ("\u0053",_cc .MakeName (string (ActionTypeSound )));_aed .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_ggf .Sound );
_aed .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_ggf .Volume );_aed .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_ggf .Synchronous );_aed .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_ggf .Repeat );_aed .SetIfNotNil ("\u004d\u0069\u0078",_ggf .Mix );
return _bgf ;};func _eegba (_fbgg *_cc .PdfObjectDictionary )(*PdfShadingType5 ,error ){_daabf :=PdfShadingType5 {};_abcfb :=_fbgg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _abcfb ==nil {_df .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ffeea ,_cegbb :=_abcfb .(*_cc .PdfObjectInteger );if !_cegbb {_df .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_abcfb );
return nil ,_cc .ErrTypeError ;};_daabf .BitsPerCoordinate =_ffeea ;_abcfb =_fbgg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _abcfb ==nil {_df .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_ffeea ,_cegbb =_abcfb .(*_cc .PdfObjectInteger );if !_cegbb {_df .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_abcfb );
return nil ,_cc .ErrTypeError ;};_daabf .BitsPerComponent =_ffeea ;_abcfb =_fbgg .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _abcfb ==nil {_df .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_ffeea ,_cegbb =_abcfb .(*_cc .PdfObjectInteger );if !_cegbb {_df .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_abcfb );
return nil ,_cc .ErrTypeError ;};_daabf .VerticesPerRow =_ffeea ;_abcfb =_fbgg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _abcfb ==nil {_df .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_faeaf ,_cegbb :=_abcfb .(*_cc .PdfObjectArray );if !_cegbb {_df .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_abcfb );
return nil ,_cc .ErrTypeError ;};_daabf .Decode =_faeaf ;if _cdggd :=_fbgg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_cdggd !=nil {_daabf .Function =[]PdfFunction {};if _becfa ,_efad :=_cdggd .(*_cc .PdfObjectArray );_efad {for _ ,_ffffg :=range _becfa .Elements (){_agbdcd ,_dbacf :=_adade (_ffffg );
if _dbacf !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dbacf );return nil ,_dbacf ;};_daabf .Function =append (_daabf .Function ,_agbdcd );
};}else {_cbggcb ,_eeab :=_adade (_cdggd );if _eeab !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eeab );return nil ,_eeab ;
};_daabf .Function =append (_daabf .Function ,_cbggcb );};};return &_daabf ,nil ;};func _bfcg (_fddee _cc .PdfObject )(*PdfFunctionType3 ,error ){_eddb :=&PdfFunctionType3 {};var _bccc *_cc .PdfObjectDictionary ;if _geed ,_dedfb :=_fddee .(*_cc .PdfIndirectObject );
_dedfb {_effb ,_ddcf :=_geed .PdfObject .(*_cc .PdfObjectDictionary );if !_ddcf {return nil ,_ede .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eddb ._bacag =_geed ;_bccc =_effb ;}else if _dbgcf ,_abff :=_fddee .(*_cc .PdfObjectDictionary );
_abff {_bccc =_dbgcf ;}else {return nil ,_ede .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eggbf ,_cbfdd :=_cc .TraceToDirectObject (_bccc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cc .PdfObjectArray );
if !_cbfdd {_df .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ede .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _eggbf .Len ()!=2{_df .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ede .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_geeba ,_bfcb :=_eggbf .ToFloat64Array ();
if _bfcb !=nil {return nil ,_bfcb ;};_eddb .Domain =_geeba ;_eggbf ,_cbfdd =_cc .TraceToDirectObject (_bccc .Get ("\u0052\u0061\u006eg\u0065")).(*_cc .PdfObjectArray );if _cbfdd {if _eggbf .Len ()< 0||_eggbf .Len ()%2!=0{return nil ,_ede .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_gddea ,_fbebf :=_eggbf .ToFloat64Array ();if _fbebf !=nil {return nil ,_fbebf ;};_eddb .Range =_gddea ;};_eggbf ,_cbfdd =_cc .TraceToDirectObject (_bccc .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_cc .PdfObjectArray );if !_cbfdd {_df .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_ede .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_eddb .Functions =[]PdfFunction {};
for _ ,_fegb :=range _eggbf .Elements (){_cffaa ,_fface :=_adade (_fegb );if _fface !=nil {return nil ,_fface ;};_eddb .Functions =append (_eddb .Functions ,_cffaa );};_eggbf ,_cbfdd =_cc .TraceToDirectObject (_bccc .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_cc .PdfObjectArray );
if !_cbfdd {_df .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ede .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_decace ,_bfcb :=_eggbf .ToFloat64Array ();if _bfcb !=nil {return nil ,_bfcb ;};_eddb .Bounds =_decace ;if len (_eddb .Bounds )!=len (_eddb .Functions )-1{_df .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_eddb .Bounds ),len (_eddb .Functions ));
return nil ,_ede .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eggbf ,_cbfdd =_cc .TraceToDirectObject (_bccc .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_cc .PdfObjectArray );if !_cbfdd {_df .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ede .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_ababab ,_bfcb :=_eggbf .ToFloat64Array ();
if _bfcb !=nil {return nil ,_bfcb ;};_eddb .Encode =_ababab ;if len (_eddb .Encode )!=2*len (_eddb .Functions ){_df .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_eddb .Encode ),len (_eddb .Functions ));
return nil ,_ede .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _eddb ,nil ;};func (_agbde *PdfAcroForm )filteredFields (_ebfcg FieldFilterFunc ,_bgbe bool )[]*PdfField {if _agbde ==nil {return nil ;};return _cfce (_agbde .Fields ,_ebfcg ,_bgbe );
};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_cc .PdfObjectString ;Q *_cc .PdfObjectInteger ;DS *_cc .PdfObjectString ;RV _cc .PdfObject ;MaxLen *_cc .PdfObjectInteger ;};

// SetVersion sets the PDF version of the output file.
func (_gedce *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_gedce ._gfgfa .Major =majorVersion ;_gedce ._gfgfa .Minor =minorVersion ;};func _bgacg (_fddeeb *_cc .PdfObjectArray )(float64 ,error ){_eeefd ,_abbbcg :=_fddeeb .ToFloat64Array ();
if _abbbcg !=nil {_df .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fddeeb ,_abbbcg );};switch len (_eeefd ){case 1:return _eeefd [0],nil ;
case 3:_fgdaae :=PdfColorspaceDeviceRGB {};_ccagf ,_dacec :=_fgdaae .ColorFromFloats (_eeefd );if _dacec !=nil {return 0.0,_dacec ;};return _ccagf .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_eaffa :=PdfColorspaceDeviceCMYK {};_dgbcd ,_feebce :=_eaffa .ColorFromFloats (_eeefd );
if _feebce !=nil {return 0.0,_feebce ;};_ccfcb ,_feebce :=_eaffa .ColorToRGB (_dgbcd .(*PdfColorDeviceCMYK ));if _feebce !=nil {return 0.0,_feebce ;};return _ccfcb .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_abbbcg =_ede .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");
_df .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fddeeb ,_abbbcg );return 0.0,_abbbcg ;};func _bgcbd (_fefg *_cc .PdfObjectDictionary )(*PdfFieldButton ,error ){_eefga :=&PdfFieldButton {};
_eefga .PdfField =NewPdfField ();_eefga .PdfField .SetContext (_eefga );_eefga .Opt ,_ =_cc .GetArray (_fefg .Get ("\u004f\u0070\u0074"));_bcedcc :=NewPdfAnnotationWidget ();_bcedcc .A ,_ =_cc .GetDict (_fefg .Get ("\u0041"));_bcedcc .AP ,_ =_cc .GetDict (_fefg .Get ("\u0041\u0050"));
_bcedcc .SetContext (_eefga );_eefga .PdfField .Annotations =append (_eefga .PdfField .Annotations ,_bcedcc );return _eefga ,nil ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _cc .PdfObject ;FS _cc .PdfObject ;F _cc .PdfObject ;UF _cc .PdfObject ;DOS _cc .PdfObject ;Mac _cc .PdfObject ;Unix _cc .PdfObject ;ID _cc .PdfObject ;V _cc .PdfObject ;EF _cc .PdfObject ;RF _cc .PdfObject ;Desc _cc .PdfObject ;
CI _cc .PdfObject ;AFRelationship _cc .PdfObject ;_adeca _cc .PdfObject ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_cgfg pdfCIDFontType0 )GetCharMetrics (code _cbf .CharCode )(_edg .CharMetrics ,bool ){_gcdgf :=_cgfg ._gdde ;if _acfd ,_edeff :=_cgfg ._dgfaa [code ];_edeff {_gcdgf =_acfd ;};return _edg .CharMetrics {Wx :_gcdgf },true ;};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_bggfgg *PdfWriter )ApplyStandard (optimizer StandardApplier ){_bggfgg ._gdebc =optimizer };

// AllFields returns a flattened list of all fields in the form.
func (_ccgg *PdfAcroForm )AllFields ()[]*PdfField {if _ccgg ==nil {return nil ;};var _bcfbe []*PdfField ;if _ccgg .Fields !=nil {for _ ,_agdcf :=range *_ccgg .Fields {_bcfbe =append (_bcfbe ,_dbdc (_agdcf )...);};};return _bcfbe ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_bddeg *PdfReader )GetIndirectObjectByNumber (number int )(_cc .PdfObject ,error ){_bcfdb ,_ebbeg :=_bddeg ._bbed .LookupByNumber (number );return _bcfdb ,_ebbeg ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_dbed byte )byte ;

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _b .Time )(PdfDate ,error ){_cedc :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_ebfag ,_ :=_gf .ParseInt (_cedc [1:3],10,32);_cabed ,_ :=_gf .ParseInt (_cedc [4:6],10,32);return PdfDate {_dceda :int64 (timeObj .Year ()),_ecgba :int64 (timeObj .Month ()),_bdddb :int64 (timeObj .Day ()),_fgcccb :int64 (timeObj .Hour ()),_abdd :int64 (timeObj .Minute ()),_eaded :int64 (timeObj .Second ()),_dafbd :_cedc [0],_gcded :_ebfag ,_ebdg :_cabed },nil ;
};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_cbffd *PdfColorDeviceGray )GetNumComponents ()int {return 1};func (_fcbgf *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};func (_badab *PdfWriter )writeNamesDictionary ()error {if _badab ._ccagg ==nil {return nil ;
};_aeef :=_badab ._ccagg .ToPdfObject ();_badab ._feff .Set ("\u004e\u0061\u006de\u0073",_aeef );_debgge :=_badab .addObjects (_aeef );if _debgge !=nil {return _debgge ;};return nil ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_fee :=NewPdfAnnotation ();_cfdd :=&PdfAnnotation3D {};_cfdd .PdfAnnotation =_fee ;_fee .SetContext (_cfdd );return _cfdd ;};

// GetContentStream returns the XObject Form's content stream.
func (_gffca *XObjectForm )GetContentStream ()([]byte ,error ){_bebfa ,_dbedd :=_cc .DecodeStream (_gffca ._accabd );if _dbedd !=nil {return nil ,_dbedd ;};return _bebfa ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_ecgfc pdfFontType3 )GetRuneMetrics (r rune )(_edg .CharMetrics ,bool ){_edag :=_ecgfc .Encoder ();if _edag ==nil {_df .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_ecgfc );
return _edg .CharMetrics {},false ;};_egbfc ,_cadd :=_edag .RuneToCharcode (r );if !_cadd {if r !=' '{_df .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_ecgfc );
};return _edg .CharMetrics {},false ;};_dagg ,_bada :=_ecgfc .GetCharMetrics (_egbfc );return _dagg ,_bada ;};func (_fbd *PdfReader )newPdfActionNamedFromDict (_eagb *_cc .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_eagb .Get ("\u004e")},nil ;
};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ebbe *PdfColorspaceDeviceGray )ToPdfObject ()_cc .PdfObject {return _cc .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};func (_egcf *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";
};func (_abggc *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _abggc ._bbed .GetCrypter ()!=nil &&!_abggc ._bbed .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_gdfac :=_abggc ._gfed ;_dacdb :=_gdfac .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _dacdb ==nil {return nil ,nil ;};_dgee ,_fagf :=_cc .GetIndirect (_dacdb );_dacdb =_cc .TraceToDirectObject (_dacdb );if _cc .IsNullObject (_dacdb ){_df .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_abgef ,_ddfcg :=_cc .GetDict (_dacdb );if !_ddfcg {_df .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_dacdb );_df .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_dacdb );};_df .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_df .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_abggc ._fcae {_bdbaca :=_abggc .traverseObjectData (_abgef );
if _bdbaca !=nil {_df .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_bdbaca );
return nil ,_bdbaca ;};};_eggfbc ,_fgfg :=_abggc .newPdfAcroFormFromDict (_dgee ,_abgef );if _fgfg !=nil {return nil ,_fgfg ;};_eggfbc ._caadg =!_fagf ;return _eggfbc ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_aaebeb pdfCIDFontType2 )GetRuneMetrics (r rune )(_edg .CharMetrics ,bool ){_cacdd ,_cedd :=_aaebeb ._gegff [r ];if !_cedd {_adfad ,_ddcac :=_cc .GetInt (_aaebeb .DW );if !_ddcac {return _edg .CharMetrics {},false ;};_cacdd =int (*_adfad );};return _edg .CharMetrics {Wx :float64 (_cacdd )},true ;
};func (_dbef *pdfFontType0 )bytesToCharcodes (_ebbf []byte )([]_cbf .CharCode ,bool ){if _dbef ._abgbf ==nil {return nil ,false ;};_ecdcb ,_gfec :=_dbef ._abgbf .BytesToCharcodes (_ebbf );if !_gfec {return nil ,false ;};_cdbfe :=make ([]_cbf .CharCode ,len (_ecdcb ));
for _cdcg ,_dccab :=range _ecdcb {_cdbfe [_cdcg ]=_cbf .CharCode (_dccab );};return _cdbfe ,true ;};func (_ffbca *PdfReader )newPdfAnnotationProjectionFromDict (_ecec *_cc .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_fbbae :=&PdfAnnotationProjection {};
_cfbgf ,_gafg :=_ffbca .newPdfAnnotationMarkupFromDict (_ecec );if _gafg !=nil {return nil ,_gafg ;};_fbbae .PdfAnnotationMarkup =_cfbgf ;return _fbbae ,nil ;};

// NewPdfAcroForm returns a new PdfAcroForm with an initialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_cgbg :_cc .MakeIndirectObject (_cc .MakeDict ())};};

// SetFillImage attach a model.Image to push button.
func (_aaga *PdfFieldButton )SetFillImage (image *Image ){if _aaga .IsPush (){_aaga ._fbcgb =image ;};};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_adgcc *PdfOutline )ToPdfObject ()_cc .PdfObject {_gabfc :=_adgcc ._acadc ;_ddcfg :=_gabfc .PdfObject .(*_cc .PdfObjectDictionary );_ddcfg .Set ("\u0054\u0079\u0070\u0065",_cc .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _adgcc .First !=nil {_ddcfg .Set ("\u0046\u0069\u0072s\u0074",_adgcc .First .ToPdfObject ());
};if _adgcc .Last !=nil {_ddcfg .Set ("\u004c\u0061\u0073\u0074",_adgcc .Last .GetContext ().GetContainingPdfObject ());};if _adgcc .Parent !=nil {_ddcfg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_adgcc .Parent .GetContext ().GetContainingPdfObject ());
};if _adgcc .Count !=nil {_ddcfg .Set ("\u0043\u006f\u0075n\u0074",_cc .MakeInteger (*_adgcc .Count ));};return _gabfc ;};

// ToInteger convert to an integer format.
func (_eaaee *PdfColorLab )ToInteger (bits int )[3]uint32 {_efbf :=_ed .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_efbf *_eaaee .L ()),uint32 (_efbf *_eaaee .A ()),uint32 (_efbf *_eaaee .B ())};};var (_feccb =_cb .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");
_acff =_cb .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_abegf =_cb .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_gcdff ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_feagf ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_cbdgc ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// ToPdfObject implements interface PdfModel.
func (_ecc *PdfActionSubmitForm )ToPdfObject ()_cc .PdfObject {_ecc .PdfAction .ToPdfObject ();_bcf :=_ecc ._dae ;_facg :=_bcf .PdfObject .(*_cc .PdfObjectDictionary );_facg .SetIfNotNil ("\u0053",_cc .MakeName (string (ActionTypeSubmitForm )));if _ecc .F !=nil {_facg .Set ("\u0046",_ecc .F .ToPdfObject ());
};_facg .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_ecc .Fields );_facg .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_ecc .Flags );return _bcf ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// ToPdfObject implements interface PdfModel.
func (_fgde *PdfBorderStyle )ToPdfObject ()_cc .PdfObject {_baf :=_cc .MakeDict ();if _fgde ._dabf !=nil {if _cdbd ,_eccc :=_fgde ._dabf .(*_cc .PdfIndirectObject );_eccc {_cdbd .PdfObject =_baf ;};};_baf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _fgde .W !=nil {_baf .Set ("\u0057",_cc .MakeFloat (*_fgde .W ));};if _fgde .S !=nil {_baf .Set ("\u0053",_cc .MakeName (_fgde .S .GetPdfName ()));};if _fgde .D !=nil {_baf .Set ("\u0044",_cc .MakeArrayFromIntegers (*_fgde .D ));};if _fgde ._dabf !=nil {return _fgde ._dabf ;
};return _baf ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_eceae *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_ede .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_aagd ,_febf :=_ec .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._ccee ,img ._aaaacg );if _febf !=nil {return img ,_febf ;};_cfaf ,_febf :=_ec .GrayConverter .Convert (_aagd );if _febf !=nil {return img ,_febf ;
};return _bagc (_cfaf .Base ()),nil ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_cage *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_cc .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_ede .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbed ,_aafgf :=_cc .GetNumbersAsFloat (objects );
if _aafgf !=nil {return nil ,_aafgf ;};return _cage .ColorFromFloats (_cbed );};type pdfCIDFontType2 struct{fontCommon ;_fdab *_cc .PdfIndirectObject ;_acdef _cbf .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_cc .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _cc .PdfObject ;W _cc .PdfObject ;DW2 _cc .PdfObject ;W2 _cc .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _cc .PdfObject ;_cefb map[_cbf .CharCode ]float64 ;_gece float64 ;_gegff map[rune ]int ;};func (_adfacg *PdfWriter )hasObject (_ffggd _cc .PdfObject )bool {_ ,_bebge :=_adfacg ._abbbc [_ffggd ];return _bebge ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_egae *PdfReader )GetEncryptionMethod ()string {_adcbb :=_egae ._bbed .GetCrypter ();return _adcbb .String ();};

// ToPdfObject implements interface PdfModel.
func (_abagf *PdfSignature )ToPdfObject ()_cc .PdfObject {_ddea :=_abagf ._faecf ;var _acaf *_cc .PdfObjectDictionary ;if _fbde ,_eafe :=_ddea .PdfObject .(*pdfSignDictionary );_eafe {_acaf =_fbde .PdfObjectDictionary ;}else {_acaf =_ddea .PdfObject .(*_cc .PdfObjectDictionary );
};_acaf .SetIfNotNil ("\u0054\u0079\u0070\u0065",_abagf .Type );_acaf .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_abagf .Filter );_acaf .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_abagf .SubFilter );_acaf .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_abagf .ByteRange );
_acaf .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_abagf .Contents );_acaf .SetIfNotNil ("\u0043\u0065\u0072\u0074",_abagf .Cert );_acaf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_abagf .Name );_acaf .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_abagf .Reason );
_acaf .SetIfNotNil ("\u004d",_abagf .M );_acaf .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_abagf .Reference );_acaf .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_abagf .Changes );_acaf .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_abagf .ContactInfo );
return _ddea ;};

// SetDecode sets the decode image float slice.
func (_dfac *Image )SetDecode (decode []float64 ){_dfac ._aaaacg =decode };func (_dcae *pdfFontType3 )baseFields ()*fontCommon {return &_dcae .fontCommon };func (_gfea *Names )addEmbeddedFile (_cegae *EmbeddedFile )error {if _gfea .EmbeddedFiles ==nil {_gfea .EmbeddedFiles =_cc .MakeDict ();
_gfea .EmbeddedFiles .Set ("\u004e\u0061\u006de\u0073",_cc .MakeArray ());};_agcgbb :=_accde (_cegae );_daef :=_gfea .EmbeddedFiles .Get ("\u004e\u0061\u006de\u0073");_fccca ,_cfffc :=_daef .(*_cc .PdfObjectArray );if !_cfffc {return _ede .New ("\u0049\u006e\u0076\u0061li\u0064\u0020\u004e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};type FileSpecMap struct{_acgb string ;_bfce *PdfFilespec ;};_gebga :=[]FileSpecMap {};for _bbcae :=0;_bbcae < len (_fccca .Elements ());_bbcae +=2{if _bbcae %2==0{_debec :=_fccca .Get (_bbcae );if _debec !=nil {_abcdg :=_debec .(*_cc .PdfObjectString );
_adcg :=_fccca .Get (_bbcae +1);_egebgg ,_fddbg :=NewPdfFilespecFromObj (_adcg );if _fddbg !=nil {return _fddbg ;};_gebga =append (_gebga ,FileSpecMap {_acgb :_abcdg .String (),_bfce :_egebgg });};};};_gebga =append (_gebga ,FileSpecMap {_acgb :_cegae .Name ,_bfce :_agcgbb });
_eac .Slice (_gebga ,func (_cadbb ,_aadf int )bool {return _gebga [_cadbb ]._acgb < _gebga [_aadf ]._acgb });_fccca =_cc .MakeArray ();for _ ,_dddc :=range _gebga {_fccca .Append (_cc .MakeString (_dddc ._acgb ));_fccca .Append (_dddc ._bfce .ToPdfObject ());
};_gfea .EmbeddedFiles .Set ("\u004e\u0061\u006de\u0073",_fccca );return nil ;};

// Add appends an outline item as a child of the current outline item.
func (_gdda *OutlineItem )Add (item *OutlineItem ){_gdda .Entries =append (_gdda .Entries ,item )};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_ecbg *PdfField )SetContext (ctx PdfModel ){_ecbg ._egbe =ctx };func (_acdf *PdfReader )newPdfAnnotationRedactFromDict (_gffd *_cc .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_gge :=PdfAnnotationRedact {};_ebfc ,_acg :=_acdf .newPdfAnnotationMarkupFromDict (_gffd );
if _acg !=nil {return nil ,_acg ;};_gge .PdfAnnotationMarkup =_ebfc ;_gge .QuadPoints =_gffd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_gge .IC =_gffd .Get ("\u0049\u0043");_gge .RO =_gffd .Get ("\u0052\u004f");_gge .OverlayText =_gffd .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_gge .Repeat =_gffd .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_gge .DA =_gffd .Get ("\u0044\u0041");_gge .Q =_gffd .Get ("\u0051");return &_gge ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dace *PdfAnnotationInk )ToPdfObject ()_cc .PdfObject {_dace .PdfAnnotation .ToPdfObject ();_fbdd :=_dace ._cef ;_dbge :=_fbdd .PdfObject .(*_cc .PdfObjectDictionary );_dace .PdfAnnotationMarkup .appendToPdfDictionary (_dbge );_dbge .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0049\u006e\u006b"));
_dbge .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_dace .InkList );_dbge .SetIfNotNil ("\u0042\u0053",_dace .BS );return _fbdd ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_ggcg *PdfFont )CharcodesToUnicodeWithStats (charcodes []_cbf .CharCode )(_fgacc []rune ,_bfac ,_eefa int ){_egdab ,_bfac ,_eefa :=_ggcg .CharcodesToStrings (charcodes );return []rune (_fa .Join (_egdab ,"")),_bfac ,_eefa ;};

// Reset sets the multi font encoder to its initial state.
func (_geece *MultipleFontEncoder )Reset (){_geece .CurrentFont =_geece ._dbfbg [0]};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_gbeacb *PdfWriter )SetDocInfo (info *PdfInfo ){_gbeacb .setDocInfo (info .ToPdfObject ())};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_cdbfa *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_cdbfa .GetNumComponents (){return nil ,_ede .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecedc ,_bedgf :=_cdbfa .TintTransform .Evaluate (vals );
if _bedgf !=nil {return nil ,_bedgf ;};_cbcgc ,_bedgf :=_cdbfa .AlternateSpace .ColorFromFloats (_ecedc );if _bedgf !=nil {return nil ,_bedgf ;};return _cbcgc ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_eecc *PdfColorspaceCalGray )GetNumComponents ()int {return 1};func (_bdcd *PdfReader )newPdfAnnotationPrinterMarkFromDict (_cdbb *_cc .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_bcb :=PdfAnnotationPrinterMark {};_bcb .MN =_cdbb .Get ("\u004d\u004e");
return &_bcb ,nil ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// Names represents a PDF name tree.
//
// Ref: PDF32000_2008 chapter 7.7.4.
type Names struct{_gefb *_cc .PdfIndirectObject ;

// Dests is a name tree mapping name string to destinations.
Dests *_cc .PdfObjectDictionary ;

// AP is a name tree mapping name strings to annotation appearance streams.
AP *_cc .PdfObjectDictionary ;

// JavaScript is a name tree mapping name strings to JavaScript actions.
JavaScript *_cc .PdfObjectDictionary ;

// Pages is a name tree mapping name strings to visible pages for use in interactive forms.
Pages *_cc .PdfObjectDictionary ;

// Templates is a name tree mapping name strings to invisible (template) pages for use in interactive forms.
Templates *_cc .PdfObjectDictionary ;

// IDS is a name tree mapping digital identifies to Web Capture content sets.
IDS *_cc .PdfObjectDictionary ;

// URLS is a name tree mapping URLs to Web Capture content sets.
URLS *_cc .PdfObjectDictionary ;

// EmbeddedFiles is a name tree mapping name strings to file specifications for embedded file streams.
EmbeddedFiles *_cc .PdfObjectDictionary ;

// AlternatePresentations is a name tree mapping name strings to alternate presentations.
AlternatePresentations *_cc .PdfObjectDictionary ;

// Renditions is a name tree mapping name strings (which shall have Unicode encoding) to rendition objects.
Renditions *_cc .PdfObjectDictionary ;};

// GetContainingPdfObject implements interface PdfModel.
func (_gcd *PdfAction )GetContainingPdfObject ()_cc .PdfObject {return _gcd ._dae };func _aaacc (_eadff _cc .PdfObject )(*PdfPattern ,error ){_gebeab :=&PdfPattern {};var _eefac *_cc .PdfObjectDictionary ;if _fagc ,_cbdeb :=_cc .GetIndirect (_eadff );_cbdeb {_gebeab ._ecegf =_fagc ;
_ggbaa ,_efeceg :=_fagc .PdfObject .(*_cc .PdfObjectDictionary );if !_efeceg {_df .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_fagc .PdfObject );
return nil ,_cc .ErrTypeError ;};_eefac =_ggbaa ;}else if _abfde ,_gade :=_cc .GetStream (_eadff );_gade {_gebeab ._ecegf =_abfde ;_eefac =_abfde .PdfObjectDictionary ;}else {_df .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_eadff );
return nil ,_cc .ErrTypeError ;};_eccad :=_eefac .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _eccad ==nil {_df .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_debff ,_cbagga :=_eccad .(*_cc .PdfObjectInteger );if !_cbagga {_df .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_eccad );
return nil ,_cc .ErrTypeError ;};if *_debff !=1&&*_debff !=2{_df .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_debff );return nil ,_cc .ErrRangeError ;
};_gebeab .PatternType =int64 (*_debff );switch *_debff {case 1:_gfbef ,_eccgc :=_ccadda (_eefac );if _eccgc !=nil {return nil ,_eccgc ;};_gfbef .PdfPattern =_gebeab ;_gebeab ._dfcbb =_gfbef ;return _gebeab ,nil ;case 2:_ceab ,_gbaeg :=_dedbab (_eefac );
if _gbaeg !=nil {return nil ,_gbaeg ;};_ceab .PdfPattern =_gebeab ;_gebeab ._dfcbb =_ceab ;return _gebeab ,nil ;};return nil ,_ede .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// ToPdfObject implements interface PdfModel.
func (_efea *PdfAnnotationSquare )ToPdfObject ()_cc .PdfObject {_efea .PdfAnnotation .ToPdfObject ();_fad :=_efea ._cef ;_cegf :=_fad .PdfObject .(*_cc .PdfObjectDictionary );if _efea .PdfAnnotationMarkup !=nil {_efea .PdfAnnotationMarkup .appendToPdfDictionary (_cegf );
};_cegf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_cegf .SetIfNotNil ("\u0042\u0053",_efea .BS );_cegf .SetIfNotNil ("\u0049\u0043",_efea .IC );_cegf .SetIfNotNil ("\u0042\u0045",_efea .BE );
_cegf .SetIfNotNil ("\u0052\u0044",_efea .RD );return _fad ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_dcaeb *XObjectImage )SetFilter (encoder _cc .StreamEncoder )error {_becbc :=_dcaeb .Stream ;_gadgb ,_egfbb :=_dcaeb .Filter .DecodeBytes (_becbc );if _egfbb !=nil {return _egfbb ;};_dcaeb .Filter =encoder ;encoder .UpdateParams (_dcaeb .getParamsDict ());
_becbc ,_egfbb =encoder .EncodeBytes (_gadgb );if _egfbb !=nil {return _egfbb ;};_dcaeb .Stream =_becbc ;return nil ;};func _dgdc (_afdg _cc .PdfObject )(*PdfFontDescriptor ,error ){_eefd :=&PdfFontDescriptor {};_afdg =_cc .ResolveReference (_afdg );if _dgdaf ,_bgca :=_afdg .(*_cc .PdfIndirectObject );
_bgca {_eefd ._dfdd =_dgdaf ;_afdg =_dgdaf .PdfObject ;};_cfbce ,_bfbd :=_cc .GetDict (_afdg );if !_bfbd {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_afdg );
return nil ,_cc .ErrTypeError ;};if _ebbg :=_cfbce .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_ebbg !=nil {_eefd .FontName =_ebbg ;}else {_df .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_egdf ,_ :=_cc .GetName (_eefd .FontName );if _edcbc :=_cfbce .Get ("\u0054\u0079\u0070\u0065");_edcbc !=nil {_adac ,_gga :=_edcbc .(*_cc .PdfObjectName );if !_gga ||string (*_adac )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_df .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_edcbc ,_egdf ,_eefd .FontName );
};}else {_df .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_egdf ,_eefd .FontName );
};_eefd .FontFamily =_cfbce .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_eefd .FontStretch =_cfbce .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_eefd .FontWeight =_cfbce .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_eefd .Flags =_cfbce .Get ("\u0046\u006c\u0061g\u0073");_eefd .FontBBox =_cfbce .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_eefd .ItalicAngle =_cfbce .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_eefd .Ascent =_cfbce .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_eefd .Descent =_cfbce .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_eefd .Leading =_cfbce .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_eefd .CapHeight =_cfbce .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_eefd .XHeight =_cfbce .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_eefd .StemV =_cfbce .Get ("\u0053\u0074\u0065m\u0056");_eefd .StemH =_cfbce .Get ("\u0053\u0074\u0065m\u0048");_eefd .AvgWidth =_cfbce .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_eefd .MaxWidth =_cfbce .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_eefd .MissingWidth =_cfbce .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_eefd .FontFile =_cfbce .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_eefd .FontFile2 =_cfbce .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_eefd .FontFile3 =_cfbce .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_eefd .CharSet =_cfbce .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_eefd .Style =_cfbce .Get ("\u0053\u0074\u0079l\u0065");_eefd .Lang =_cfbce .Get ("\u004c\u0061\u006e\u0067");
_eefd .FD =_cfbce .Get ("\u0046\u0044");_eefd .CIDSet =_cfbce .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _eefd .Flags !=nil {if _dega ,_gacfb :=_cc .GetIntVal (_eefd .Flags );_gacfb {_eefd ._febd =_dega ;};};if _eefd .MissingWidth !=nil {if _dece ,_dbgg :=_cc .GetNumberAsFloat (_eefd .MissingWidth );
_dbgg ==nil {_eefd ._fbddf =_dece ;};};if _eefd .FontFile !=nil {_ceeea ,_bfda :=_ceegg (_eefd .FontFile );if _bfda !=nil {return _eefd ,_bfda ;};_df .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_ceeea );_eefd .fontFile =_ceeea ;
};if _eefd .FontFile2 !=nil {_ecgg ,_ggdac :=_edg .NewFontFile2FromPdfObject (_eefd .FontFile2 );if _ggdac !=nil {return _eefd ,_ggdac ;};_df .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_ecgg .String ());_eefd ._gbgc =&_ecgg ;
};return _eefd ,nil ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_bcbb *PdfPage )GetPageAsIndirectObject ()*_cc .PdfIndirectObject {return _bcbb ._bfgcg };

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_fffac *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// ToPdfObject implements interface PdfModel.
func (_adeb *PdfAnnotationHighlight )ToPdfObject ()_cc .PdfObject {_adeb .PdfAnnotation .ToPdfObject ();_cebb :=_adeb ._cef ;_gdfg :=_cebb .PdfObject .(*_cc .PdfObjectDictionary );_adeb .PdfAnnotationMarkup .appendToPdfDictionary (_gdfg );_gdfg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_gdfg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_adeb .QuadPoints );return _cebb ;};func _gbeac (_bcedca _cc .PdfObject )[]*_cc .PdfObjectStream {if _bcedca ==nil {return nil ;};_gdbgae ,_bcebbb :=_cc .GetArray (_bcedca );
if !_bcebbb ||_gdbgae .Len ()==0{return nil ;};_dbgbb :=make ([]*_cc .PdfObjectStream ,0,_gdbgae .Len ());for _ ,_cbdda :=range _gdbgae .Elements (){if _ccge ,_aedbd :=_cc .GetStream (_cbdda );_aedbd {_dbgbb =append (_dbgbb ,_ccge );};};return _dbgbb ;
};func _agabd ()*Names {return &Names {_gefb :_cc .MakeIndirectObject (_cc .MakeDict ())}};func (_dfcca *PdfWriter )checkCrossReferenceStream ()bool {_gbad :=_dfcca ._gfgfa .Major > 1||(_dfcca ._gfgfa .Major ==1&&_dfcca ._gfgfa .Minor > 4);if _dfcca ._bddag !=nil {_gbad =*_dfcca ._bddag ;
};return _gbad ;};

// NewPdfColorPatternType2 returns an empty color shading pattern type 2 (Axial).
func NewPdfColorPatternType2 ()*PdfColorPatternType2 {_gdegd :=&PdfColorPatternType2 {};return _gdegd ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_deggb *PdfColorspaceDeviceN )GetNumComponents ()int {return _deggb .ColorantNames .Len ()};func (_fbaa *PdfAppender )replaceObject (_dfbg ,_gecf _cc .PdfObject ){switch _bbg :=_dfbg .(type ){case *_cc .PdfIndirectObject :_fbaa ._gbdc [_gecf ]=_bbg .ObjectNumber ;
case *_cc .PdfObjectStream :_fbaa ._gbdc [_gecf ]=_bbg .ObjectNumber ;};};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _cd .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _bgcff ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _dcbcbe (rs ,opts ,true ,_bgcff );
};

// CustomKeys returns all custom info keys as list.
func (_ebebe *PdfInfo )CustomKeys ()[]string {if _ebebe ._cbag ==nil {return nil ;};_gcgeg :=make ([]string ,len (_ebebe ._cbag .Keys ()));for _ ,_cbbf :=range _ebebe ._cbag .Keys (){_gcgeg =append (_gcgeg ,_cbbf .String ());};return _gcgeg ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_deb :=NewPdfAction ();_bg :=&PdfActionGoTo {};_bg .PdfAction =_deb ;_deb .SetContext (_bg );return _bg ;};

// GetDSS gets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_fgff *PdfAppender )GetDSS ()(_gfd *DSS ){return _fgff ._gbfd };

// StdFontName represents name of a standard font.
type StdFontName =_edg .StdFontName ;var _gbbb =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};
func _fegcc (_adce *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_adce }};func _acdag (_eegdbg *_cc .PdfObjectDictionary )(*PdfShadingType4 ,error ){_defac :=PdfShadingType4 {};_beacbe :=_eegdbg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _beacbe ==nil {_df .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ddabd ,_fcddb :=_beacbe .(*_cc .PdfObjectInteger );if !_fcddb {_df .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_beacbe );
return nil ,_cc .ErrTypeError ;};_defac .BitsPerCoordinate =_ddabd ;_beacbe =_eegdbg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _beacbe ==nil {_df .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_ddabd ,_fcddb =_beacbe .(*_cc .PdfObjectInteger );if !_fcddb {_df .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_beacbe );
return nil ,_cc .ErrTypeError ;};_defac .BitsPerComponent =_ddabd ;_beacbe =_eegdbg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _beacbe ==nil {_df .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ddabd ,_fcddb =_beacbe .(*_cc .PdfObjectInteger );if !_fcddb {_df .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_beacbe );
return nil ,_cc .ErrTypeError ;};_defac .BitsPerComponent =_ddabd ;_beacbe =_eegdbg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _beacbe ==nil {_df .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_begffa ,_fcddb :=_beacbe .(*_cc .PdfObjectArray );if !_fcddb {_df .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_beacbe );
return nil ,_cc .ErrTypeError ;};_defac .Decode =_begffa ;_beacbe =_eegdbg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _beacbe ==nil {_df .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_defac .Function =[]PdfFunction {};if _bedefa ,_aebb :=_beacbe .(*_cc .PdfObjectArray );_aebb {for _ ,_egbdg :=range _bedefa .Elements (){_aadea ,_becff :=_adade (_egbdg );if _becff !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_becff );
return nil ,_becff ;};_defac .Function =append (_defac .Function ,_aadea );};}else {_gedfg ,_bcdcge :=_adade (_beacbe );if _bcdcge !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bcdcge );
return nil ,_bcdcge ;};_defac .Function =append (_defac .Function ,_gedfg );};return &_defac ,nil ;};func (_ddcag *PdfPattern )getDict ()*_cc .PdfObjectDictionary {if _geaba ,_adgab :=_ddcag ._ecegf .(*_cc .PdfIndirectObject );_adgab {_fgfbb ,_efcff :=_geaba .PdfObject .(*_cc .PdfObjectDictionary );
if !_efcff {return nil ;};return _fgfbb ;}else if _agdca ,_cddgde :=_ddcag ._ecegf .(*_cc .PdfObjectStream );_cddgde {return _agdca .PdfObjectDictionary ;}else {_df .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_ddcag ._ecegf );
return nil ;};};

// WriteToFile writes the Appender output to file specified by path.
func (_cegfd *PdfAppender )WriteToFile (outputPath string )error {_ceba ,_cdab :=_aa .Create (outputPath );if _cdab !=nil {return _cdab ;};defer _ceba .Close ();return _cegfd .Write (_ceba );};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_ecdac *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _ecdac ._gegg ==nil {_ecdac ._gegg =_bbd .NewPSExecutor (_ecdac .Program );};var _acdd []_bbd .PSObject ;for _ ,_dafgb :=range xVec {_acdd =append (_acdd ,_bbd .MakeReal (_dafgb ));
};_ddaca ,_cefff :=_ecdac ._gegg .Execute (_acdd );if _cefff !=nil {return nil ,_cefff ;};_acdfb ,_cefff :=_bbd .PSObjectArrayToFloat64Array (_ddaca );if _cefff !=nil {return nil ,_cefff ;};return _acdfb ,nil ;};func _eagadg (_ecef *_cc .PdfObjectDictionary )(*PdfShadingType1 ,error ){_acagb :=PdfShadingType1 {};
if _ggbed :=_ecef .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_ggbed !=nil {_ggbed =_cc .TraceToDirectObject (_ggbed );_aaab ,_gbdd :=_ggbed .(*_cc .PdfObjectArray );if !_gbdd {_df .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggbed );
return nil ,_ede .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_acagb .Domain =_aaab ;};if _dgdea :=_ecef .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_dgdea !=nil {_dgdea =_cc .TraceToDirectObject (_dgdea );
_ffeg ,_bbedg :=_dgdea .(*_cc .PdfObjectArray );if !_bbedg {_df .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dgdea );return nil ,_ede .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_acagb .Matrix =_ffeg ;};_cgfgd :=_ecef .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _cgfgd ==nil {_df .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_acagb .Function =[]PdfFunction {};if _bcade ,_gfgaa :=_cgfgd .(*_cc .PdfObjectArray );_gfgaa {for _ ,_egefg :=range _bcade .Elements (){_cfece ,_ffagf :=_adade (_egefg );if _ffagf !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ffagf );
return nil ,_ffagf ;};_acagb .Function =append (_acagb .Function ,_cfece );};}else {_baeba ,_fagde :=_adade (_cgfgd );if _fagde !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fagde );
return nil ,_fagde ;};_acagb .Function =append (_acagb .Function ,_baeba );};return &_acagb ,nil ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_fbeaa *PdfWriter )SetRotation (rotate int64 )error {_eeaeg ,_egafa :=_cc .GetDict (_fbeaa ._aacbd );if !_egafa {return ErrTypeCheck ;};_eeaeg .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_cc .MakeInteger (rotate ));return nil ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_ffa :=NewPdfAnnotation ();_cecd :=&PdfAnnotationText {};_cecd .PdfAnnotation =_ffa ;_cecd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ffa .SetContext (_cecd );return _cecd ;};func _afcae (_bedfc []byte )([]byte ,error ){_fbgce :=_de .New ();
if _ ,_fafcf :=_cd .Copy (_fbgce ,_aac .NewReader (_bedfc ));_fafcf !=nil {return nil ,_fafcf ;};return _fbgce .Sum (nil ),nil ;};

// GetBorderWidth returns the border style's width.
func (_eda *PdfBorderStyle )GetBorderWidth ()float64 {if _eda .W ==nil {return 1;};return *_eda .W ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fdgdg pdfFontSimple )GetRuneMetrics (r rune )(_edg .CharMetrics ,bool ){if _fdgdg ._gageb !=nil {_daagd ,_cgdc :=_fdgdg ._gageb .Read (r );if _cgdc {return _daagd ,true ;};};_fffacf :=_fdgdg .Encoder ();if _fffacf ==nil {_df .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_fdgdg );
return _edg .CharMetrics {},false ;};_agfba ,_fdff :=_fffacf .RuneToCharcode (r );if !_fdff {if r !=' '{_df .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_fdgdg );
};return _edg .CharMetrics {},false ;};_adfba ,_beec :=_fdgdg .GetCharMetrics (_agfba );return _adfba ,_beec ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_ce :=NewPdfAction ();_gg :=&PdfActionSound {};_gg .PdfAction =_ce ;_ce .SetContext (_gg );return _gg ;};

// String implements interface PdfObject.
func (_dec *PdfAction )String ()string {_egc ,_aae :=_dec .ToPdfObject ().(*_cc .PdfIndirectObject );if _aae {return _c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_dec ._cf ,_egc .PdfObject .String ());};return "";};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;func _dbbc (_egaf *PdfField ,_baddg _cc .PdfObject )error {switch _egaf .GetContext ().(type ){case *PdfFieldText :switch _efbeg :=_baddg .(type ){case *_cc .PdfObjectName :_afddcf :=_efbeg ;_df .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_afddcf .String ());
_egaf .V =_cc .MakeEncodedString (_efbeg .String (),true );case *_cc .PdfObjectString :_egaf .V =_cc .MakeEncodedString (_efbeg .String (),true );default:_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_efbeg ,_efbeg );
};case *PdfFieldButton :switch _baddg .(type ){case *_cc .PdfObjectName :if len (_baddg .String ())> 0{_egaf .V =_baddg ;_dagf (_egaf ,_baddg );};case *_cc .PdfObjectString :if len (_baddg .String ())> 0{_egaf .V =_cc .MakeName (_baddg .String ());_dagf (_egaf ,_egaf .V );
};default:_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_egaf .PartialName (),_baddg );_egaf .V =_baddg ;};case *PdfFieldChoice :switch _baddg .(type ){case *_cc .PdfObjectName :if len (_baddg .String ())> 0{_egaf .V =_cc .MakeString (_baddg .String ());
_dagf (_egaf ,_baddg );};case *_cc .PdfObjectString :if len (_baddg .String ())> 0{_egaf .V =_baddg ;_dagf (_egaf ,_cc .MakeName (_baddg .String ()));};default:_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_egaf .PartialName (),_baddg );
_egaf .V =_baddg ;};case *PdfFieldSignature :_df .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_egaf .PartialName (),_baddg );
};return nil ;};

// NewXObjectImageFromImageLazy creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
// If lazy is true, then lazy mode is enabled for XObject.
// Lazy mode allows to reduce memory usage with the help of temporary files.
func NewXObjectImageFromImageLazy (img *Image ,cs PdfColorspace ,encoder _cc .StreamEncoder ,lazy bool )(*XObjectImage ,error ){_cdecg :=NewXObjectImage ();if lazy {_bbadaf ,_gaagdd :=UpdateXObjectImageFromImage (_cdecg ,img ,cs ,encoder );if _gaagdd !=nil {return nil ,_gaagdd ;
};_bbadaf .ToPdfObject ();_gaagdd =_bbadaf ._dbccfb .MakeLazy ();if _gaagdd !=nil {return nil ,_gaagdd ;};_bbadaf .Stream =nil ;return _bbadaf ,nil ;};return UpdateXObjectImageFromImage (_cdecg ,img ,cs ,encoder );};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fceg *PdfColorspaceSpecialSeparation )ToPdfObject ()_cc .PdfObject {_dfaae :=_cc .MakeArray (_cc .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_dfaae .Append (_fceg .ColorantName );_dfaae .Append (_fceg .AlternateSpace .ToPdfObject ());
_dfaae .Append (_fceg .TintTransform .ToPdfObject ());if _fceg ._degg !=nil {_fceg ._degg .PdfObject =_dfaae ;return _fceg ._degg ;};return _dfaae ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};type pdfFont interface{_edg .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_cc .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1. Return a value the /Widths array (charWidths) if there is one.
//  2. If the font has the same name as a standard 14 font then return width=250.
//  3. Otherwise return no match and let the caller substitute a default.
func (_cbddb pdfFontSimple )GetCharMetrics (code _cbf .CharCode )(_edg .CharMetrics ,bool ){if _edcdd ,_fbegc :=_cbddb ._fdcc [code ];_fbegc {return _edg .CharMetrics {Wx :_edcdd },true ;};if _edg .IsStdFont (_edg .StdFontName (_cbddb ._baac )){return _edg .CharMetrics {Wx :250},true ;
};return _edg .CharMetrics {},false ;};func (_aefe *PdfReader )newPdfActionHideFromDict (_gdd *_cc .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_gdd .Get ("\u0054"),H :_gdd .Get ("\u0048")},nil ;};func (_cfb *PdfReader )newPdfActionFromIndirectObject (_gcf *_cc .PdfIndirectObject )(*PdfAction ,error ){_fcb ,_gdf :=_gcf .PdfObject .(*_cc .PdfObjectDictionary );
if !_gdf {return nil ,_c .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_cfb ._ecbgec .GetModelFromPrimitive (_fcb );model !=nil {_gff ,_bac :=model .(*PdfAction );if !_bac {return nil ,_c .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _gff ,nil ;};_fag :=&PdfAction {};_fag ._dae =_gcf ;_cfb ._ecbgec .Register (_fcb ,_fag );if _gbb :=_fcb .Get ("\u0054\u0079\u0070\u0065");_gbb !=nil {_ffde ,_bcc :=_gbb .(*_cc .PdfObjectName );if !_bcc {_df .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_gbb );
}else {if *_ffde !="\u0041\u0063\u0074\u0069\u006f\u006e"{_df .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_ffde );
};_fag .Type =_ffde ;};};if _ffdef :=_fcb .Get ("\u004e\u0065\u0078\u0074");_ffdef !=nil {_fag .Next =_ffdef ;};if _abfe :=_fcb .Get ("\u0053");_abfe !=nil {_fag .S =_abfe ;};_cec ,_gcfg :=_fag .S .(*_cc .PdfObjectName );if !_gcfg {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_fag .S );
return nil ,_c .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_fag .S );};_feg :=PdfActionType (_cec .String ());
switch _feg {case ActionTypeGoTo :_bdcg ,_gef :=_cfb .newPdfActionGotoFromDict (_fcb );if _gef !=nil {return nil ,_gef ;};_bdcg .PdfAction =_fag ;_fag ._cf =_bdcg ;return _fag ,nil ;case ActionTypeGoToR :_cgc ,_adf :=_cfb .newPdfActionGotoRFromDict (_fcb );
if _adf !=nil {return nil ,_adf ;};_cgc .PdfAction =_fag ;_fag ._cf =_cgc ;return _fag ,nil ;case ActionTypeGoToE :_edgg ,_gee :=_cfb .newPdfActionGotoEFromDict (_fcb );if _gee !=nil {return nil ,_gee ;};_edgg .PdfAction =_fag ;_fag ._cf =_edgg ;return _fag ,nil ;
case ActionTypeLaunch :_eff ,_bca :=_cfb .newPdfActionLaunchFromDict (_fcb );if _bca !=nil {return nil ,_bca ;};_eff .PdfAction =_fag ;_fag ._cf =_eff ;return _fag ,nil ;case ActionTypeThread :_bee ,_ecdd :=_cfb .newPdfActionThreadFromDict (_fcb );if _ecdd !=nil {return nil ,_ecdd ;
};_bee .PdfAction =_fag ;_fag ._cf =_bee ;return _fag ,nil ;case ActionTypeURI :_aaca ,_cbd :=_cfb .newPdfActionURIFromDict (_fcb );if _cbd !=nil {return nil ,_cbd ;};_aaca .PdfAction =_fag ;_fag ._cf =_aaca ;return _fag ,nil ;case ActionTypeSound :_acd ,_dedb :=_cfb .newPdfActionSoundFromDict (_fcb );
if _dedb !=nil {return nil ,_dedb ;};_acd .PdfAction =_fag ;_fag ._cf =_acd ;return _fag ,nil ;case ActionTypeMovie :_ege ,_cgb :=_cfb .newPdfActionMovieFromDict (_fcb );if _cgb !=nil {return nil ,_cgb ;};_ege .PdfAction =_fag ;_fag ._cf =_ege ;return _fag ,nil ;
case ActionTypeHide :_eag ,_gcfgc :=_cfb .newPdfActionHideFromDict (_fcb );if _gcfgc !=nil {return nil ,_gcfgc ;};_eag .PdfAction =_fag ;_fag ._cf =_eag ;return _fag ,nil ;case ActionTypeNamed :_faa ,_gbd :=_cfb .newPdfActionNamedFromDict (_fcb );if _gbd !=nil {return nil ,_gbd ;
};_faa .PdfAction =_fag ;_fag ._cf =_faa ;return _fag ,nil ;case ActionTypeSubmitForm :_dgf ,_ggdb :=_cfb .newPdfActionSubmitFormFromDict (_fcb );if _ggdb !=nil {return nil ,_ggdb ;};_dgf .PdfAction =_fag ;_fag ._cf =_dgf ;return _fag ,nil ;case ActionTypeResetForm :_aceb ,_ccag :=_cfb .newPdfActionResetFormFromDict (_fcb );
if _ccag !=nil {return nil ,_ccag ;};_aceb .PdfAction =_fag ;_fag ._cf =_aceb ;return _fag ,nil ;case ActionTypeImportData :_eba ,_cgcg :=_cfb .newPdfActionImportDataFromDict (_fcb );if _cgcg !=nil {return nil ,_cgcg ;};_eba .PdfAction =_fag ;_fag ._cf =_eba ;
return _fag ,nil ;case ActionTypeSetOCGState :_bbde ,_ceg :=_cfb .newPdfActionSetOCGStateFromDict (_fcb );if _ceg !=nil {return nil ,_ceg ;};_bbde .PdfAction =_fag ;_fag ._cf =_bbde ;return _fag ,nil ;case ActionTypeRendition :_bggd ,_bggc :=_cfb .newPdfActionRenditionFromDict (_fcb );
if _bggc !=nil {return nil ,_bggc ;};_bggd .PdfAction =_fag ;_fag ._cf =_bggd ;return _fag ,nil ;case ActionTypeTrans :_fga ,_daf :=_cfb .newPdfActionTransFromDict (_fcb );if _daf !=nil {return nil ,_daf ;};_fga .PdfAction =_fag ;_fag ._cf =_fga ;return _fag ,nil ;
case ActionTypeGoTo3DView :_fb ,_gacd :=_cfb .newPdfActionGoTo3DViewFromDict (_fcb );if _gacd !=nil {return nil ,_gacd ;};_fb .PdfAction =_fag ;_fag ._cf =_fb ;return _fag ,nil ;case ActionTypeJavaScript :_aea ,_cfa :=_cfb .newPdfActionJavaScriptFromDict (_fcb );
if _cfa !=nil {return nil ,_cfa ;};_aea .PdfAction =_fag ;_fag ._cf =_aea ;return _fag ,nil ;};_df .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_feg );
return nil ,nil ;};

// Items returns all children outline items.
func (_bgbca *OutlineItem )Items ()[]*OutlineItem {return _bgbca .Entries };

// ToPdfObject returns the PDF representation of the colorspace.
func (_fffe *PdfColorspaceDeviceCMYK )ToPdfObject ()_cc .PdfObject {return _cc .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// ToPdfObject implements interface PdfModel.
func (_bdd *PdfAnnotationTrapNet )ToPdfObject ()_cc .PdfObject {_bdd .PdfAnnotation .ToPdfObject ();_edgge :=_bdd ._cef ;_cbcg :=_edgge .PdfObject .(*_cc .PdfObjectDictionary );_cbcg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _edgge ;};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
	    or: [/DeviceN names alternateSpace tintTransform attributes]
*/
func (_ffgf *PdfColorspaceDeviceN )ToPdfObject ()_cc .PdfObject {_ccbg :=_cc .MakeArray (_cc .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_ccbg .Append (_ffgf .ColorantNames );_ccbg .Append (_ffgf .AlternateSpace .ToPdfObject ());_ccbg .Append (_ffgf .TintTransform .ToPdfObject ());
if _ffgf .Attributes !=nil {_ccbg .Append (_ffgf .Attributes .ToPdfObject ());};if _ffgf ._bagf !=nil {_ffgf ._bagf .PdfObject =_ccbg ;return _ffgf ._bagf ;};return _ccbg ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_cceb :=PdfColorLab {l ,a ,b };return &_cceb };

// GetOCProperties returns the optional content properties PdfObject.
func (_ccgb *PdfReader )GetOCProperties ()(_cc .PdfObject ,error ){_bddb :=_ccgb ._gfed ;_aabc :=_bddb .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_aabc =_cc .ResolveReference (_aabc );if !_ccgb ._fcae {_aacbb :=_ccgb .traverseObjectData (_aabc );
if _aacbb !=nil {return nil ,_aacbb ;};};return _aabc ,nil ;};

// AddFont adds a font dictionary to the Font resources.
func (_gegcg *PdfPage )AddFont (name _cc .PdfObjectName ,font _cc .PdfObject )error {if _gegcg .Resources ==nil {_gegcg .Resources =NewPdfPageResources ();};if _gegcg .Resources .Font ==nil {_gegcg .Resources .Font =_cc .MakeDict ();};_gbbee ,_afbf :=_cc .TraceToDirectObject (_gegcg .Resources .Font ).(*_cc .PdfObjectDictionary );
if !_afbf {_df .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_cc .TraceToDirectObject (_gegcg .Resources .Font ));
return _ede .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gbbee .Set (name ,font );return nil ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_acbb *DSS )GetContainingPdfObject ()_cc .PdfObject {return _acbb ._efcg };

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_gffgd *_cc .PdfObjectDictionary ;};

// ToPdfObject implements interface PdfModel.
func (_gcg *PdfAnnotationStrikeOut )ToPdfObject ()_cc .PdfObject {_gcg .PdfAnnotation .ToPdfObject ();_gffdf :=_gcg ._cef ;_efae :=_gffdf .PdfObject .(*_cc .PdfObjectDictionary );_gcg .PdfAnnotationMarkup .appendToPdfDictionary (_efae );_efae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_efae .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gcg .QuadPoints );return _gffdf ;};func (_ecbfb *PdfWriter )setDocumentIDs (_dabbc ,_cbebg string ){_ecbfb ._gacge =_cc .MakeArray (_cc .MakeHexString (_dabbc ),_cc .MakeHexString (_cbebg ));
};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_ggdcb *PdfShading )GetContext ()PdfModel {return _ggdcb ._beacb };

// ToInteger convert to an integer format.
func (_acgd *PdfColorCalGray )ToInteger (bits int )uint32 {_cba :=_ed .Pow (2,float64 (bits ))-1;return uint32 (_cba *_acgd .Val ());};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_fdecg int ,_cafcf *PdfPage )error ;

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _cc .PdfObject ;IC _cc .PdfObject ;BE _cc .PdfObject ;RD _cc .PdfObject ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_bebag *PdfPageResources )GetExtGState (keyName _cc .PdfObjectName )(_cc .PdfObject ,bool ){if _bebag .ExtGState ==nil {return nil ,false ;};_eebac ,_cfac :=_cc .TraceToDirectObject (_bebag .ExtGState ).(*_cc .PdfObjectDictionary );if !_cfac {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bebag .ExtGState );
return nil ,false ;};if _bbaed :=_eebac .Get (keyName );_bbaed !=nil {return _bbaed ,true ;};return nil ,false ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;func (_bad *PdfReader )newPdfActionGotoFromDict (_ged *_cc .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_ged .Get ("\u0044")},nil ;};const (RelationshipSource FileRelationship =iota ;RelationshipData ;
RelationshipAlternative ;RelationshipSupplement ;RelationshipUnspecified ;);

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_cc .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _cc .PdfObject ;A _cc .PdfObject ;SE _cc .PdfObject ;C _cc .PdfObject ;F _cc .PdfObject ;
_bfdgf *_cc .PdfIndirectObject ;};

// ToPdfObject implements model.PdfModel interface.
func (_ddcfe *PdfOutputIntent )ToPdfObject ()_cc .PdfObject {if _ddcfe ._gffgd ==nil {_ddcfe ._gffgd =_cc .MakeDict ();};_gfda :=_ddcfe ._gffgd ;if _ddcfe .Type !=""{_gfda .Set ("\u0054\u0079\u0070\u0065",_cc .MakeName (_ddcfe .Type ));};_gfda .Set ("\u0053",_cc .MakeName (_ddcfe .S .String ()));
if _ddcfe .OutputCondition !=""{_gfda .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_cc .MakeString (_ddcfe .OutputCondition ));};_gfda .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_cc .MakeString (_ddcfe .OutputConditionIdentifier ));
_gfda .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_cc .MakeString (_ddcfe .RegistryName ));if _ddcfe .Info !=""{_gfda .Set ("\u0049\u006e\u0066\u006f",_cc .MakeString (_ddcfe .Info ));};if len (_ddcfe .DestOutputProfile )!=0{_gbdgc ,_dfbde :=_cc .MakeStream (_ddcfe .DestOutputProfile ,_cc .NewFlateEncoder ());
if _dfbde !=nil {_df .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_dfbde );
};_gbdgc .PdfObjectDictionary .Set ("\u004e",_cc .MakeInteger (int64 (_ddcfe .ColorComponents )));_ggegg :=make ([]float64 ,_ddcfe .ColorComponents *2);for _cceef :=0;_cceef < _ddcfe .ColorComponents *2;_cceef ++{_cecda :=0.0;if _cceef %2!=0{_cecda =1.0;
};_ggegg [_cceef ]=_cecda ;};_gbdgc .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_cc .MakeArrayFromFloats (_ggegg ));_gfda .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_gbdgc );};return _gfda ;
};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_cea :=NewPdfAction ();_ad :=&PdfActionImportData {};_ad .PdfAction =_cea ;_cea .SetContext (_ad );return _ad ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_bbdee *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ede .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgccc :=vals [0];_ffdd :=[]float64 {_fgccc };
_dfee ,_gacbf :=_bbdee .TintTransform .Evaluate (_ffdd );if _gacbf !=nil {_df .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_gacbf );
_df .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_bbdee .TintTransform );return nil ,_gacbf ;};_df .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_dfee ,_bbdee .AlternateSpace );
_edb ,_gacbf :=_bbdee .AlternateSpace .ColorFromFloats (_dfee );if _gacbf !=nil {_df .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_gacbf );
return nil ,_gacbf ;};return _edb ,nil ;};

// NewPdfColorPatternType3 returns an empty color shading pattern type 3 (Radial).
func NewPdfColorPatternType3 ()*PdfColorPatternType3 {_fbae :=&PdfColorPatternType3 {};return _fbae };

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_gcge :=PdfColorCalRGB {a ,b ,c };return &_gcge ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_gdeb :=&PdfFieldSignature {};_gdeb .PdfField =NewPdfField ();_gdeb .PdfField .SetContext (_gdeb );_gdeb .PdfAnnotationWidget =NewPdfAnnotationWidget ();_gdeb .PdfAnnotationWidget .SetContext (_gdeb );
_gdeb .PdfAnnotationWidget ._cef =_gdeb .PdfField ._geafg ;_gdeb .T =_cc .MakeString ("");_gdeb .F =_cc .MakeInteger (132);_gdeb .V =signature ;return _gdeb ;};

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_fcceb *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _fcceb ._bbed .GetRevisionNumber ()==0{return nil ,_ede .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _bbbc ,_ebag :=_fcceb ._dgage [_fcceb ];_ebag {return _bbbc ,nil ;};_bfcbd ,_ebbgb :=_fcceb ._bbed .GetPreviousRevisionReadSeeker ();if _ebbgb !=nil {return nil ,_ebbgb ;};_aggfb ,_ebbgb :=_dcbcbe (_bfcbd ,_fcceb ._gaadb ,_fcceb ._dffaf ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _ebbgb !=nil {return nil ,_ebbgb ;};_fcceb ._bdeae [_fcceb ._bbed .GetRevisionNumber ()-1]=_aggfb ;_fcceb ._dgage [_fcceb ]=_aggfb ;_aggfb ._dgage =_fcceb ._dgage ;return _aggfb ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_bdea *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_cc .PdfObject )(PdfColor ,error ){if _bdea .Alternate ==nil {if _bdea .N ==1{_ggdeg :=NewPdfColorspaceDeviceGray ();return _ggdeg .ColorFromPdfObjects (objects );}else if _bdea .N ==3{_eedfd :=NewPdfColorspaceDeviceRGB ();
return _eedfd .ColorFromPdfObjects (objects );}else if _bdea .N ==4{_bbeb :=NewPdfColorspaceDeviceCMYK ();return _bbeb .ColorFromPdfObjects (objects );}else {return nil ,_ede .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _bdea .Alternate .ColorFromPdfObjects (objects );};func (_afg *PdfReader )newPdfActionThreadFromDict (_agdf *_cc .PdfObjectDictionary )(*PdfActionThread ,error ){_bae ,_cgce :=_gfg (_agdf .Get ("\u0046"));if _cgce !=nil {return nil ,_cgce ;};
return &PdfActionThread {D :_agdf .Get ("\u0044"),B :_agdf .Get ("\u0042"),F :_bae },nil ;};const (_cddfa =0x00001;_bgacc =0x00002;_ffda =0x00004;_adfgf =0x00008;_cacgf =0x00020;_dcde =0x00040;_efcge =0x10000;_egca =0x20000;_eedg =0x40000;);func (_cdfab *PdfWriter )writeObject (_eacd int ,_dcedc _cc .PdfObject ){_df .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_eacd );
if _faddg ,_bbbd :=_dcedc .(*_cc .PdfIndirectObject );_bbbd {_cdfab ._faff [_eacd ]=crossReference {Type :1,Offset :_cdfab ._edgfea ,Generation :_faddg .GenerationNumber };_eecbb :=_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_eacd );if _fgcdd ,_fadde :=_faddg .PdfObject .(*pdfSignDictionary );
_fadde {_fgcdd ._cfcfd =_cdfab ._edgfea +int64 (len (_eecbb ));};if _faddg .PdfObject ==nil {_df .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_faddg .PdfObject =_cc .MakeNull ();};_eecbb +=_faddg .PdfObject .WriteString ();_eecbb +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_cdfab .writeString (_eecbb );return ;};if _bgbfc ,_cgbee :=_dcedc .(*_cc .PdfObjectStream );_cgbee {_cdfab ._faff [_eacd ]=crossReference {Type :1,Offset :_cdfab ._edgfea ,Generation :_bgbfc .GenerationNumber };
_ggaea :=_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_eacd );_ggaea +=_bgbfc .PdfObjectDictionary .WriteString ();_ggaea +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_cdfab .writeString (_ggaea );if _bgbfc .Lazy {_edecc ,_cgcba :=_aa .ReadFile (_bgbfc .TempFile );
if _cgcba !=nil {_df .Log .Info ("\u0045\u0072\u0072\u006f\u0072\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u006ca\u007ay\u0020\u0074\u0065\u006d\u0070\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_bgbfc .TempFile );return ;};_cdfab .writeBytes (_edecc );
_aa .Remove (_bgbfc .TempFile );}else {_cdfab .writeBytes (_bgbfc .Stream );};_cdfab .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _dfgac ,_gafdd :=_dcedc .(*_cc .PdfObjectStreams );
_gafdd {_cdfab ._faff [_eacd ]=crossReference {Type :1,Offset :_cdfab ._edgfea ,Generation :_dfgac .GenerationNumber };_cbbef :=_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_eacd );var _aggaa []string ;var _efgf string ;var _bfgbb int64 ;
for _babdc ,_daebea :=range _dfgac .Elements (){_ggebe ,_abbdd :=_daebea .(*_cc .PdfIndirectObject );if !_abbdd {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_eacd ,_daebea );
continue ;};_aeagc :=_ggebe .PdfObject .WriteString ()+"\u0020";_efgf =_efgf +_aeagc ;_aggaa =append (_aggaa ,_c .Sprintf ("\u0025\u0064\u0020%\u0064",_ggebe .ObjectNumber ,_bfgbb ));_cdfab ._faff [int (_ggebe .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_eacd ,Index :_babdc };
_bfgbb =_bfgbb +int64 (len ([]byte (_aeagc )));};_cacef :=_fa .Join (_aggaa ,"\u0020")+"\u0020";_bcbgf :=_cc .NewFlateEncoder ();_cbdbf :=_bcbgf .MakeStreamDict ();_cbdbf .Set (_cc .PdfObjectName ("\u0054\u0079\u0070\u0065"),_cc .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_aecc :=int64 (_dfgac .Len ());_cbdbf .Set (_cc .PdfObjectName ("\u004e"),_cc .MakeInteger (_aecc ));_dafe :=int64 (len (_cacef ));_cbdbf .Set (_cc .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_cc .MakeInteger (_dafe ));_bbada ,_ :=_bcbgf .EncodeBytes ([]byte (_cacef +_efgf ));
_debag :=int64 (len (_bbada ));_cbdbf .Set (_cc .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_cc .MakeInteger (_debag ));_cbbef +=_cbdbf .WriteString ();_cbbef +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_cdfab .writeString (_cbbef );
_cdfab .writeBytes (_bbada );_cdfab .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_cdfab .writeString (_dcedc .WriteString ());};func _adbade ()string {_aaefb .Lock ();defer _aaefb .Unlock ();
_caggc :=_abc .GetLicenseKey ();if len (_ffabe )> 0&&(_caggc .IsLicensed ()||_ffafb ){return _ffabe ;};return _c .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_gaffa (),_caggc .TypeToString ());
};

// ToPdfObject returns a stream object.
func (_fcaa *XObjectImage )ToPdfObject ()_cc .PdfObject {_daefaa :=_fcaa ._dbccfb ;if _fcaa ._bebed {return _daefaa ;};_abdca :=_daefaa .PdfObjectDictionary ;if _fcaa .Filter !=nil {_abdca =_fcaa .Filter .MakeStreamDict ();_daefaa .PdfObjectDictionary =_abdca ;
};_abdca .Set ("\u0054\u0079\u0070\u0065",_cc .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_abdca .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0049\u006d\u0061g\u0065"));_abdca .Set ("\u0057\u0069\u0064t\u0068",_cc .MakeInteger (*(_fcaa .Width )));
_abdca .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_cc .MakeInteger (*(_fcaa .Height )));if _fcaa .BitsPerComponent !=nil {_abdca .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cc .MakeInteger (*(_fcaa .BitsPerComponent )));
};if _fcaa .ColorSpace !=nil {_abdca .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_fcaa .ColorSpace .ToPdfObject ());};_abdca .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_fcaa .Intent );_abdca .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_fcaa .ImageMask );
_abdca .SetIfNotNil ("\u004d\u0061\u0073\u006b",_fcaa .Mask );_eefae :=_abdca .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;if _fcaa .Decode ==nil &&_eefae {_abdca .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _fcaa .Decode !=nil {_abdca .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fcaa .Decode );
};_abdca .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_fcaa .Interpolate );_abdca .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_fcaa .Alternatives );_abdca .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_fcaa .SMask );
_abdca .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_fcaa .SMaskInData );_abdca .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_fcaa .Matte );_abdca .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fcaa .Name );_abdca .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_fcaa .StructParent );
_abdca .SetIfNotNil ("\u0049\u0044",_fcaa .ID );_abdca .SetIfNotNil ("\u004f\u0050\u0049",_fcaa .OPI );_abdca .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_fcaa .Metadata );_abdca .SetIfNotNil ("\u004f\u0043",_fcaa .OC );_abdca .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cc .MakeInteger (int64 (len (_fcaa .Stream ))));
_daefaa .Stream =_fcaa .Stream ;_fcaa ._bebed =true ;return _daefaa ;};

// L returns the value of the L component of the color.
func (_aaff *PdfColorLab )L ()float64 {return _aaff [0]};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_cc .PdfObjectInteger ;BitsPerComponent *_cc .PdfObjectInteger ;BitsPerFlag *_cc .PdfObjectInteger ;Decode *_cc .PdfObjectArray ;Function []PdfFunction ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_cc .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_cc .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_cc .PdfObjectBool ;_beacb PdfModel ;_ccfe _cc .PdfObject ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_dacd *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_cabbe *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _cabbe .UnderlyingCS .GetNumComponents ();};

// Evaluate runs the function on the passed in slice and returns the results.
func (_gbee *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_df .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ede .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_baaag :=[]float64 {0.0};if _gbee .C0 !=nil {_baaag =_gbee .C0 ;};_aaee :=[]float64 {1.0};if _gbee .C1 !=nil {_aaee =_gbee .C1 ;};var _ggbea []float64 ;for _ebefa :=0;_ebefa < len (_baaag );_ebefa ++{_fdbba :=_baaag [_ebefa ]+_ed .Pow (x [0],_gbee .N )*(_aaee [_ebefa ]-_baaag [_ebefa ]);
_ggbea =append (_ggbea ,_fdbba );};return _ggbea ,nil ;};func (_ecfb SignatureValidationResult )String ()string {var _cgcag _aac .Buffer ;_cgcag .WriteString (_c .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_ecfb .Name ));if _ecfb .Date ._dceda > 0{_cgcag .WriteString (_c .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_ecfb .Date .ToGoTime ().String ()));
}else {_cgcag .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_ecfb .Reason )> 0{_cgcag .WriteString (_c .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_ecfb .Reason ));
}else {_cgcag .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_ecfb .Location )> 0{_cgcag .WriteString (_c .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_ecfb .Location ));
}else {_cgcag .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_ecfb .ContactInfo )> 0{_cgcag .WriteString (_c .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_ecfb .ContactInfo ));
}else {_cgcag .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_cgcag .WriteString (_c .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_ecfb .Fields )));
if _ecfb .IsSigned {_cgcag .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_cgcag .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");
};if _ecfb .IsVerified {_cgcag .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_cgcag .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");
};if _ecfb .IsTrusted {_cgcag .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_cgcag .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");
};if !_ecfb .GeneralizedTime .IsZero (){_cgcag .WriteString (_c .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_ecfb .GeneralizedTime .String ()));};if _ecfb .DiffResults !=nil {_cgcag .WriteString (_c .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_ecfb .DiffResults .IsPermitted ()));
if len (_ecfb .DiffResults .Warnings )> 0{_cgcag .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");for _ ,_ddacd :=range _ecfb .DiffResults .Warnings {_cgcag .WriteString (_c .Sprintf ("\u0009\u0025\u0073\u000a",_ddacd ));
};};if len (_ecfb .DiffResults .Errors )> 0{_cgcag .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");for _ ,_bddgf :=range _ecfb .DiffResults .Errors {_cgcag .WriteString (_c .Sprintf ("\u0009\u0025\u0073\u000a",_bddgf ));
};};};if _ecfb .IsCrlFound {_cgcag .WriteString ("R\u0065\u0076\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0061\u003a\u0020C\u0052\u004c\u0020f\u006fu\u006e\u0064\u000a");}else {_cgcag .WriteString ("\u0052\u0065\u0076o\u0063\u0061\u0074\u0069o\u006e\u0020\u0064\u0061\u0074\u0061\u003a \u0043\u0052\u004c\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");
};if _ecfb .IsOcspFound {_cgcag .WriteString ("\u0052\u0065\u0076\u006fc\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u0066\u006f\u0075n\u0064\u000a");}else {_cgcag .WriteString ("\u0052\u0065\u0076\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");
};return _cgcag .String ();};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _cc .PdfObject ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_aaefb .Lock ();defer _aaefb .Unlock ();_fegf =subject };

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_caac *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_caac .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_caac ._efeb =acroForm ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _b .Time ){_aaefb .Lock ();defer _aaefb .Unlock ();_bcbfgg =creationDate ;};type pdfFontType3 struct{fontCommon ;_gbdg *_cc .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _cc .PdfObject ;Encoding _cc .PdfObject ;FontBBox _cc .PdfObject ;FontMatrix _cc .PdfObject ;FirstChar _cc .PdfObject ;LastChar _cc .PdfObject ;Widths _cc .PdfObject ;Resources _cc .PdfObject ;_aacf map[_cbf .CharCode ]float64 ;_debcd _cbf .TextEncoder ;
};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_bcad *PdfColorspaceDeviceNAttributes )ToPdfObject ()_cc .PdfObject {_afae :=_cc .MakeDict ();if _bcad .Subtype !=nil {_afae .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcad .Subtype );};_afae .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_bcad .Colorants );
_afae .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_bcad .Process );_afae .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_bcad .MixingHints );if _bcad ._efaeb !=nil {_bcad ._efaeb .PdfObject =_afae ;return _bcad ._efaeb ;
};return _afae ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _cc .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _facae *_cc .PdfIndirectObject ;var _fega *_cc .PdfObjectName ;var _defe *_cc .PdfObjectArray ;if _ceef ,_abee :=obj .(*_cc .PdfIndirectObject );
_abee {_facae =_ceef ;};obj =_cc .TraceToDirectObject (obj );switch _cgece :=obj .(type ){case *_cc .PdfObjectArray :_defe =_cgece ;case *_cc .PdfObjectName :_fega =_cgece ;};if _fega !=nil {switch *_fega {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_df .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_fega );return nil ,_aaeg ;};};if _defe !=nil &&_defe .Len ()> 0{var _bddd _cc .PdfObject =_facae ;
if _facae ==nil {_bddd =_defe ;};if _bbf ,_gccd :=_cc .GetName (_defe .Get (0));_gccd {switch _bbf .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _defe .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _defe .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _defe .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _abcga (_bddd );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _ecgf (_bddd );
case "\u004c\u0061\u0062":return _bebf (_bddd );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _edegae (_bddd );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _ffge (_bddd );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _ccaf (_bddd );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _eddd (_bddd );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _gacdg (_bddd );default:_df .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_bbf );
};};};_df .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};func (_bfdcd *PdfWriter )writeString (_ggggf string ){if _bfdcd ._fdeagb !=nil {return ;};_bfbge ,_geaag :=_bfdcd ._gacfdb .WriteString (_ggggf );_bfdcd ._edgfea +=int64 (_bfbge );_bfdcd ._fdeagb =_geaag ;};func _adaee (_gdagf *PdfPage )map[_cc .PdfObjectName ]_cc .PdfObject {_ccb :=make (map[_cc .PdfObjectName ]_cc .PdfObject );
if _gdagf .Resources ==nil {return _ccb ;};if _gdagf .Resources .Font !=nil {if _cdbf ,_gfac :=_cc .GetDict (_gdagf .Resources .Font );_gfac {for _ ,_agfe :=range _cdbf .Keys (){_ccb [_agfe ]=_cdbf .Get (_agfe );};};};if _gdagf .Resources .ExtGState !=nil {if _cgbe ,_dgaba :=_cc .GetDict (_gdagf .Resources .ExtGState );
_dgaba {for _ ,_gcbfa :=range _cgbe .Keys (){_ccb [_gcbfa ]=_cgbe .Get (_gcbfa );};};};if _gdagf .Resources .XObject !=nil {if _dgg ,_adec :=_cc .GetDict (_gdagf .Resources .XObject );_adec {for _ ,_daba :=range _dgg .Keys (){_ccb [_daba ]=_dgg .Get (_daba );
};};};if _gdagf .Resources .Pattern !=nil {if _ffee ,_abcf :=_cc .GetDict (_gdagf .Resources .Pattern );_abcf {for _ ,_gafb :=range _ffee .Keys (){_ccb [_gafb ]=_ffee .Get (_gafb );};};};if _gdagf .Resources .Shading !=nil {if _abeg ,_dcc :=_cc .GetDict (_gdagf .Resources .Shading );
_dcc {for _ ,_gdc :=range _abeg .Keys (){_ccb [_gdc ]=_abeg .Get (_gdc );};};};if _gdagf .Resources .ProcSet !=nil {if _ecad ,_eeca :=_cc .GetDict (_gdagf .Resources .ProcSet );_eeca {for _ ,_gfca :=range _ecad .Keys (){_ccb [_gfca ]=_ecad .Get (_gfca );
};};};if _gdagf .Resources .Properties !=nil {if _cfgb ,_beeda :=_cc .GetDict (_gdagf .Resources .Properties );_beeda {for _ ,_beb :=range _cfgb .Keys (){_ccb [_beb ]=_cfgb .Get (_beb );};};};return _ccb ;};

// Width returns the width of `rect`.
func (_gcada *PdfRectangle )Width ()float64 {return _ed .Abs (_gcada .Urx -_gcada .Llx )};func (_cdcb *PdfFont )baseFields ()*fontCommon {if _cdcb ._ggec ==nil {_df .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _cdcb ._ggec .baseFields ();};

// ColorToRGB converts a Lab color to an RGB color.
func (_fcaf *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_fbgd :=func (_ddfb float64 )float64 {if _ddfb >=6.0/29{return _ddfb *_ddfb *_ddfb ;};return 108.0/841*(_ddfb -4.0/29.0);};_ccba ,_ababd :=color .(*PdfColorLab );if !_ababd {_df .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_ede .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_ccba .L ();AStar :=_ccba .A ();BStar :=_ccba .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_fcaf .WhitePoint [0]*_fbgd (L );Y :=_fcaf .WhitePoint [1]*_fbgd (M );Z :=_fcaf .WhitePoint [2]*_fbgd (N );_baff :=3.240479*X +-1.537150*Y +-0.498535*Z ;_dcdg :=-0.969256*X +1.875992*Y +0.041556*Z ;_febfa :=0.055648*X +-0.204043*Y +1.057311*Z ;_baff =_ed .Min (_ed .Max (_baff ,0),1.0);
_dcdg =_ed .Min (_ed .Max (_dcdg ,0),1.0);_febfa =_ed .Min (_ed .Max (_febfa ,0),1.0);return NewPdfColorDeviceRGB (_baff ,_dcdg ,_febfa ),nil ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_aega *PdfFieldButton )ToPdfObject ()_cc .PdfObject {_aega .PdfField .ToPdfObject ();_edcc :=_aega ._geafg ;_ffbf :=_edcc .PdfObject .(*_cc .PdfObjectDictionary );_ffbf .Set ("\u0046\u0054",_cc .MakeName ("\u0042\u0074\u006e"));if _aega .Opt !=nil {_ffbf .Set ("\u004f\u0070\u0074",_aega .Opt );
};return _edcc ;};func (_bbdb *PdfReader )newPdfActionRenditionFromDict (_bcd *_cc .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_bcd .Get ("\u0052"),AN :_bcd .Get ("\u0041\u004e"),OP :_bcd .Get ("\u004f\u0050"),JS :_bcd .Get ("\u004a\u0053")},nil ;
};func (_ccefc *PdfReader )newPdfAnnotationWidgetFromDict (_gba *_cc .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_gec :=PdfAnnotationWidget {};_gec .H =_gba .Get ("\u0048");_gec .MK =_gba .Get ("\u004d\u004b");_gec .A =_gba .Get ("\u0041");_gec .AA =_gba .Get ("\u0041\u0041");
_gec .BS =_gba .Get ("\u0042\u0053");_gec .Parent =_gba .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_gec ,nil ;};func (_agc *PdfReader )newPdfActionSoundFromDict (_ecdf *_cc .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_ecdf .Get ("\u0053\u006f\u0075n\u0064"),Volume :_ecdf .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_ecdf .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_ecdf .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_ecdf .Get ("\u004d\u0069\u0078")},nil ;
};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_adbae *pdfFontSimple )ToPdfObject ()_cc .PdfObject {if _adbae ._ggdfc ==nil {_adbae ._ggdfc =&_cc .PdfIndirectObject {};};_caab :=_adbae .baseFields ().asPdfObjectDictionary ("");_adbae ._ggdfc .PdfObject =_caab ;if _adbae .FirstChar !=nil {_caab .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_adbae .FirstChar );
};if _adbae .LastChar !=nil {_caab .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_adbae .LastChar );};if _adbae .Widths !=nil {_caab .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_adbae .Widths );};if _adbae .Encoding !=nil {_caab .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_adbae .Encoding );
}else if _adbae ._fbed !=nil {_bggfe :=_adbae ._fbed .ToPdfObject ();if _bggfe !=nil {_caab .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bggfe );};};return _adbae ._ggdfc ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_bebd *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_cc .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ede .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_faacc ,_daaba :=_cc .GetNumbersAsFloat (objects );
if _daaba !=nil {return nil ,_daaba ;};return _bebd .ColorFromFloats (_faacc );};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_gbaaa :=&PdfOutlineItem {_bfdgf :_cc .MakeIndirectObject (_cc .MakeDict ())};_gbaaa ._efbcf =_gbaaa ;return _gbaaa ;};

// ValidateSignatures validates digital signatures in the document.
func (_degea *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _degea .AcroForm ==nil {return nil ,nil ;};if _degea .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_gdgdg *PdfSignature ;
_bebfd *PdfField ;_eafgd SignatureHandler ;};var _edcgc []*sigFieldPair ;for _ ,_ggcae :=range _degea .AcroForm .AllFields (){if _ggcae .V ==nil {continue ;};if _cefeb ,_gdaeg :=_cc .GetDict (_ggcae .V );_gdaeg {if _caeee ,_bbadb :=_cc .GetNameVal (_cefeb .Get ("\u0054\u0079\u0070\u0065"));
_bbadb &&(_caeee =="\u0053\u0069\u0067"||_caeee =="\u0044\u006f\u0063T\u0069\u006d\u0065\u0053\u0074\u0061\u006d\u0070"){_fgade ,_aafdc :=_cc .GetIndirect (_ggcae .V );if !_aafdc {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_ecega ,_bedda :=_degea .newPdfSignatureFromIndirect (_fgade );if _bedda !=nil {return nil ,_bedda ;};var _cegea SignatureHandler ;for _ ,_edgcd :=range handlers {if _edgcd .IsApplicable (_ecega ){_cegea =_edgcd ;break ;};};
_edcgc =append (_edcgc ,&sigFieldPair {_gdgdg :_ecega ,_bebfd :_ggcae ,_eafgd :_cegea });};};};var _bdcbb []SignatureValidationResult ;for _ ,_fbce :=range _edcgc {_dfcfd :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_fbce ._bebfd }};
if _fbce ._eafgd ==nil {_dfcfd .Errors =append (_dfcfd .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_bdcbb =append (_bdcbb ,_dfcfd );continue ;};_adfeb ,_cfgacb :=_fbce ._eafgd .NewDigest (_fbce ._gdgdg );
if _cfgacb !=nil {_dfcfd .Errors =append (_dfcfd .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_cfgacb .Error ());_bdcbb =append (_bdcbb ,_dfcfd );continue ;};_ffgfb :=_fbce ._gdgdg .ByteRange ;if _ffgfb ==nil {_dfcfd .Errors =append (_dfcfd .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
_bdcbb =append (_bdcbb ,_dfcfd );continue ;};for _accgb :=0;_accgb < _ffgfb .Len ();_accgb =_accgb +2{_eagea ,_ :=_cc .GetNumberAsInt64 (_ffgfb .Get (_accgb ));_dfggf ,_ :=_cc .GetIntVal (_ffgfb .Get (_accgb +1));if _ ,_egfbf :=_degea ._ddbcgf .Seek (_eagea ,_cd .SeekStart );
_egfbf !=nil {return nil ,_egfbf ;};_dbabe :=make ([]byte ,_dfggf );if _ ,_edcgg :=_degea ._ddbcgf .Read (_dbabe );_edcgg !=nil {return nil ,_edcgg ;};_adfeb .Write (_dbabe );};var _fcdad SignatureValidationResult ;if _decag ,_adbbe :=_fbce ._eafgd .(SignatureHandlerDocMDP );
_adbbe {_fcdad ,_cfgacb =_decag .ValidateWithOpts (_fbce ._gdgdg ,_adfeb ,SignatureHandlerDocMDPParams {Parser :_degea ._bbed });}else {_fcdad ,_cfgacb =_fbce ._eafgd .Validate (_fbce ._gdgdg ,_adfeb );};if _cfgacb !=nil {_df .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_cfgacb ,_fbce ._eafgd );
_fcdad .Errors =append (_fcdad .Errors ,_cfgacb .Error ());};_fcdad .Name =_fbce ._gdgdg .Name .Decoded ();_fcdad .Reason =_fbce ._gdgdg .Reason .Decoded ();if _fbce ._gdgdg .M !=nil {_egagg ,_afggfg :=NewPdfDate (_fbce ._gdgdg .M .String ());if _afggfg !=nil {_df .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_afggfg );
_fcdad .Errors =append (_fcdad .Errors ,_afggfg .Error ());continue ;};_fcdad .Date =_egagg ;};_fcdad .ContactInfo =_fbce ._gdgdg .ContactInfo .Decoded ();_fcdad .Location =_fbce ._gdgdg .Location .Decoded ();_fcdad .Fields =_dfcfd .Fields ;_bdcbb =append (_bdcbb ,_fcdad );
};return _bdcbb ,nil ;};func (_dde *PdfReader )newPdfAnnotationRichMediaFromDict (_dfg *_cc .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_ccf :=&PdfAnnotationRichMedia {};_ccf .RichMediaSettings =_dfg .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");
_ccf .RichMediaContent =_dfg .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _ccf ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_ffaf *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _ffaf .Alternate ==nil {if _ffaf .N ==1{_cfbd :=NewPdfColorspaceDeviceGray ();return _cfbd .ColorFromFloats (vals );}else if _ffaf .N ==3{_abggb :=NewPdfColorspaceDeviceRGB ();
return _abggb .ColorFromFloats (vals );}else if _ffaf .N ==4{_dbde :=NewPdfColorspaceDeviceCMYK ();return _dbde .ColorFromFloats (vals );}else {return nil ,_ede .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _ffaf .Alternate .ColorFromFloats (vals );};func _fgea (_fagdf _cc .PdfObject )(*_cc .PdfObjectDictionary ,*fontCommon ,error ){_dacbg :=&fontCommon {};if _ecaef ,_abbfb :=_fagdf .(*_cc .PdfIndirectObject );_abbfb {_dacbg ._cedf =_ecaef .ObjectNumber ;
};_adfb ,_agbfg :=_cc .GetDict (_fagdf );if !_agbfg {_df .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_fagdf );
return nil ,nil ,ErrFontNotSupported ;};_bfbc ,_agbfg :=_cc .GetNameVal (_adfb .Get ("\u0054\u0079\u0070\u0065"));if !_agbfg {_df .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _bfbc !="\u0046\u006f\u006e\u0074"{_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_bfbc ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_cc .ErrTypeError ;};_adfc ,_agbfg :=_cc .GetNameVal (_adfb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_agbfg {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_dacbg ._edfc =_adfc ;_cfaa ,_agbfg :=_cc .GetNameVal (_adfb .Get ("\u004e\u0061\u006d\u0065"));if _agbfg {_dacbg ._cbdc =_cfaa ;};_bgbc :=_adfb .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _bgbc !=nil {_dacbg ._dcadd =_cc .TraceToDirectObject (_bgbc );
_cebd ,_gaeg :=_cgabg (_dacbg ._dcadd ,_dacbg );if _gaeg !=nil {return _adfb ,_dacbg ,_gaeg ;};_dacbg ._fgbf =_cebd ;}else if _adfc =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_adfc =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_cgff ,_adab :=_fac .NewCIDSystemInfo (_adfb .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _adab !=nil {return _adfb ,_dacbg ,_adab ;};_eegd :=_c .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_cgff .Registry ,_cgff .Ordering );if _fac .IsPredefinedCMap (_eegd ){_dacbg ._fgbf ,_adab =_fac .LoadPredefinedCMap (_eegd );
if _adab !=nil {_df .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_eegd ,_adab );
};};};_fede :=_adfb .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _fede !=nil {_aceda ,_dfgd :=_dgdc (_fede );if _dfgd !=nil {_df .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dfgd );
return _adfb ,_dacbg ,_dfgd ;};_dacbg ._cagc =_aceda ;};if _adfc !="\u0054\u0079\u0070e\u0033"{_efcda ,_bebce :=_cc .GetNameVal (_adfb .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_bebce {_df .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _adfb ,_dacbg ,ErrRequiredAttributeMissing ;};_dacbg ._baac =_efcda ;};return _adfb ,_dacbg ,nil ;};