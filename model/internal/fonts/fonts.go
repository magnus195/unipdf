//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_bd "bytes";_df "encoding/binary";_a "errors";_b "fmt";
	_dfa "github.com/magnus195/unipdf/v3/common";
	_bg "github.com/magnus195/unipdf/v3/core";
	_fa "github.com/magnus195/unipdf/v3/internal/cmap";
	_f "github.com/magnus195/unipdf/v3/internal/textencoding";
_c "io";_de "os";_gb "regexp";_e "sort";_g "strings";_gg "sync";);func (_accg *ttfParser )ParseComponents ()error {if _gee :=_accg .ParseHead ();_gee !=nil {return _gee ;};if _acbe :=_accg .ParseHhea ();_acbe !=nil {return _acbe ;};if _cgc :=_accg .ParseMaxp ();
_cgc !=nil {return _cgc ;};if _gdd :=_accg .ParseHmtx ();_gdd !=nil {return _gdd ;};if _ ,_daag :=_accg ._fegd ["\u006e\u0061\u006d\u0065"];_daag {if _dee :=_accg .ParseName ();_dee !=nil {return _dee ;};};if _ ,_ffae :=_accg ._fegd ["\u004f\u0053\u002f\u0032"];
_ffae {if _gbe :=_accg .ParseOS2 ();_gbe !=nil {return _gbe ;};};if _ ,_geb :=_accg ._fegd ["\u0070\u006f\u0073\u0074"];_geb {if _fef :=_accg .ParsePost ();_fef !=nil {return _fef ;};};if _ ,_cebd :=_accg ._fegd ["\u0063\u006d\u0061\u0070"];_cebd {if _bge :=_accg .ParseCmap ();
_bge !=nil {return _bge ;};};return nil ;};func _affa ()StdFont {_ga .Do (_eg );_eea :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_eea ,_dfc );};type StdFont struct{_ad Descriptor ;_ade *RuneCharSafeMap ;_db _f .TextEncoder ;};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_age :make (map[rune ]CharMetrics ,length )};};var _ec _gg .Once ;
const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _f .TextEncoder )StdFont {var _af rune =0xA0;if _ ,_ddf :=metrics .Read (_af );!_ddf {_dgb ,_ :=metrics .Read (0x20);
metrics .Write (_af ,_dgb );};return StdFont {_ad :desc ,_ade :metrics ,_db :encoder };};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_f .NewStandardEncoder ());};func (_bda *ttfParser )ReadSByte ()(_cdac int8 ){_df .Read (_bda ._ebbd ,_df .BigEndian ,&_cdac );
return _cdac ;};func (_gba *ttfParser )parseCmapSubtable31 (_adc int64 )error {_caf :=make ([]rune ,0,8);_dag :=make ([]rune ,0,8);_cfg :=make ([]int16 ,0,8);_gddd :=make ([]uint16 ,0,8);_gba ._cdg .Chars =make (map[rune ]GID );_gba ._ebbd .Seek (int64 (_gba ._fegd ["\u0063\u006d\u0061\u0070"])+_adc ,_c .SeekStart );
_aafb :=_gba .ReadUShort ();if _aafb !=4{_dfa .Log .Debug ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_aafb );
return nil ;};_gba .Skip (2*2);_ggb :=int (_gba .ReadUShort ()/2);_gba .Skip (3*2);for _fbd :=0;_fbd < _ggb ;_fbd ++{_dag =append (_dag ,rune (_gba .ReadUShort ()));};_gba .Skip (2);for _faf :=0;_faf < _ggb ;_faf ++{_caf =append (_caf ,rune (_gba .ReadUShort ()));
};for _dfb :=0;_dfb < _ggb ;_dfb ++{_cfg =append (_cfg ,_gba .ReadShort ());};_dbb ,_ :=_gba ._ebbd .Seek (int64 (0),_c .SeekCurrent );for _ddc :=0;_ddc < _ggb ;_ddc ++{_gddd =append (_gddd ,_gba .ReadUShort ());};for _fdd :=0;_fdd < _ggb ;_fdd ++{_deaf :=_caf [_fdd ];
_ecae :=_dag [_fdd ];_gff :=_cfg [_fdd ];_acfa :=_gddd [_fdd ];if _acfa > 0{_gba ._ebbd .Seek (_dbb +2*int64 (_fdd )+int64 (_acfa ),_c .SeekStart );};for _abbd :=_deaf ;_abbd <=_ecae ;_abbd ++{if _abbd ==0xFFFF{break ;};var _bdb int32 ;if _acfa > 0{_bdb =int32 (_gba .ReadUShort ());
if _bdb > 0{_bdb +=int32 (_gff );};}else {_bdb =_abbd +int32 (_gff );};if _bdb >=65536{_bdb -=65536;};if _bdb > 0{_gba ._cdg .Chars [_abbd ]=GID (_bdb );};};};return nil ;};var _bc *RuneCharSafeMap ;func (_acc *TtfType )String ()string {return _b .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_acc .PostScriptName ,_acc .UnitsPerEm ,_acc .Bold ,_acc .ItalicAngle ,_acc .CapHeight ,len (_acc .Chars ),len (_acc .GlyphNames ));
};func _eefb ()StdFont {_ga .Do (_eg );_ded :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_ded ,_bc );};func _ebg ()StdFont {_cea :=_f .NewSymbolEncoder ();_ffa :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_ffa ,_gcd ,_cea );};var _cfa =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func NewStdFontByName (name StdFontName )(StdFont ,bool ){_ddd ,_dg :=_ge .read (name );if !_dg {return StdFont {},false ;};return _ddd (),true ;};func (_efbc *ttfParser )parseCmapVersion (_acbf int64 )error {_dfa .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_acbf );
if _efbc ._cdg .Chars ==nil {_efbc ._cdg .Chars =make (map[rune ]GID );};_efbc ._ebbd .Seek (int64 (_efbc ._fegd ["\u0063\u006d\u0061\u0070"])+_acbf ,_c .SeekStart );var _dbaa ,_dcb uint32 ;_aca :=_efbc .ReadUShort ();if _aca < 8{_dbaa =uint32 (_efbc .ReadUShort ());
_dcb =uint32 (_efbc .ReadUShort ());}else {_efbc .ReadUShort ();_dbaa =_efbc .ReadULong ();_dcb =_efbc .ReadULong ();};_dfa .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_aca ,_dbaa ,_dcb );
switch _aca {case 0:return _efbc .parseCmapFormat0 ();case 6:return _efbc .parseCmapFormat6 ();case 12:return _efbc .parseCmapFormat12 ();default:_dfa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_aca );
return nil ;};};type GlyphName =_f .GlyphName ;func _bae ()StdFont {_ec .Do (_abb );_eb :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_eb ,_fcf );};var _adg *RuneCharSafeMap ;func _gcg ()StdFont {_cbd .Do (_fae );_efbe :=Descriptor {Name :TimesItalicName ,Family :_da ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_efbe ,_bdg );};type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;
};func _gdg ()StdFont {_acb :=_f .NewZapfDingbatsEncoder ();_fec :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_fec ,_ceb ,_acb );};func (_gbc *ttfParser )ParsePost ()error {if _efd :=_gbc .Seek ("\u0070\u006f\u0073\u0074");_efd !=nil {return _efd ;};_abec :=_gbc .Read32Fixed ();_gbc ._cdg .ItalicAngle =_gbc .Read32Fixed ();_gbc ._cdg .UnderlinePosition =_gbc .ReadShort ();
_gbc ._cdg .UnderlineThickness =_gbc .ReadShort ();_gbc ._cdg .IsFixedPitch =_gbc .ReadULong ()!=0;_gbc .ReadULong ();_gbc .ReadULong ();_gbc .ReadULong ();_gbc .ReadULong ();_dfa .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_abec );
switch _abec {case 1.0:_gbc ._cdg .GlyphNames =_dedb ;case 2.0:_aaa :=int (_gbc .ReadUShort ());_ecb :=make ([]int ,_aaa );_gbc ._cdg .GlyphNames =make ([]GlyphName ,_aaa );_fddd :=-1;for _gffe :=0;_gffe < _aaa ;_gffe ++{_efe :=int (_gbc .ReadUShort ());
_ecb [_gffe ]=_efe ;if _efe <=0x7fff&&_efe > _fddd {_fddd =_efe ;};};var _gec []GlyphName ;if _fddd >=len (_dedb ){_gec =make ([]GlyphName ,_fddd -len (_dedb )+1);for _gae :=0;_gae < _fddd -len (_dedb )+1;_gae ++{_geae :=int (_gbc .readByte ());_fbdd ,_eee :=_gbc .ReadStr (_geae );
if _eee !=nil {return _eee ;};_gec [_gae ]=GlyphName (_fbdd );};};for _abc :=0;_abc < _aaa ;_abc ++{_dfbg :=_ecb [_abc ];if _dfbg < len (_dedb ){_gbc ._cdg .GlyphNames [_abc ]=_dedb [_dfbg ];}else if _dfbg >=len (_dedb )&&_dfbg <=32767{_gbc ._cdg .GlyphNames [_abc ]=_gec [_dfbg -len (_dedb )];
}else {_gbc ._cdg .GlyphNames [_abc ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_fcb :=make ([]int ,_gbc ._abf );for _aef :=0;_aef < len (_fcb );_aef ++{_fgd :=int (_gbc .ReadSByte ());_fcb [_aef ]=_aef +1+_fgd ;};_gbc ._cdg .GlyphNames =make ([]GlyphName ,len (_fcb ));
for _bcb :=0;_bcb < len (_gbc ._cdg .GlyphNames );_bcb ++{_bgd :=_dedb [_fcb [_bcb ]];_gbc ._cdg .GlyphNames [_bcb ]=_bgd ;};case 3.0:_dfa .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_dfa .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_abec );};return nil ;};func (_cf StdFont )ToPdfObject ()_bg .PdfObject {_fd :=_bg .MakeDict ();
_fd .Set ("\u0054\u0079\u0070\u0065",_bg .MakeName ("\u0046\u006f\u006e\u0074"));_fd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0054\u0079\u0070e\u0031"));_fd .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_bg .MakeName (_cf .Name ()));
_fd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cf ._db .ToPdfObject ());return _bg .MakeIndirectObject (_fd );};type FontWeight int ;type GID =_f .GID ;const (_da ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");
TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
);func (_fgcb *ttfParser )ParseHhea ()error {if _ca :=_fgcb .Seek ("\u0068\u0068\u0065\u0061");_ca !=nil {return _ca ;};_fgcb .Skip (4+15*2);_fgcb ._ggg =_fgcb .ReadUShort ();return nil ;};func (_aabb *ttfParser )readByte ()(_bgf uint8 ){_df .Read (_aabb ._ebbd ,_df .BigEndian ,&_bgf );
return _bgf ;};var _ga _gg .Once ;func (_fag *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_ee :=MakeRuneCharSafeMap (_fag .Length ());_fag .Range (func (_gga rune ,_ff CharMetrics )(_ef bool ){_ee ._age [_gga ]=_ff ;return false });return _ee ;};func init (){RegisterStdFont (CourierName ,_eefb ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_gd ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_bac ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_affa ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};func (_agg *fontMap )write (_aag StdFontName ,_fff func ()StdFont ){_agg .Lock ();defer _agg .Unlock ();
_agg ._ac [_aag ]=_fff ;};const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););func (_aad StdFont )GetMetricsTable ()*RuneCharSafeMap {return _aad ._ade };
var _ceb =&RuneCharSafeMap {_age :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func _gd ()StdFont {_ga .Do (_eg );_bgb :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_bgb ,_bbc );};func _eg (){const _cd =600;_bc =MakeRuneCharSafeMap (len (_dc ));for _ ,_ea :=range _dc {_bc .Write (_ea ,CharMetrics {Wx :_cd });};_bbc =_bc .Copy ();_dfc =_bc .Copy ();_aae =_bc .Copy ();};func (_aff StdFont )Name ()string {return string (_aff ._ad .Name )};
func (_dba *ttfParser )ParseCmap ()error {var _ebd int64 ;if _ege :=_dba .Seek ("\u0063\u006d\u0061\u0070");_ege !=nil {return _ege ;};_dba .ReadUShort ();_agga :=int (_dba .ReadUShort ());_bef :=int64 (0);_deea :=int64 (0);_fbag :=int64 (0);for _ffcb :=0;
_ffcb < _agga ;_ffcb ++{_ggc :=_dba .ReadUShort ();_dgg :=_dba .ReadUShort ();_ebd =int64 (_dba .ReadULong ());if _ggc ==3&&_dgg ==1{_deea =_ebd ;}else if _ggc ==3&&_dgg ==10{_fbag =_ebd ;}else if _ggc ==1&&_dgg ==0{_bef =_ebd ;};};if _bef !=0{if _fca :=_dba .parseCmapVersion (_bef );
_fca !=nil {return _fca ;};};if _deea !=0{if _dff :=_dba .parseCmapSubtable31 (_deea );_dff !=nil {return _dff ;};};if _fbag !=0{if _dedg :=_dba .parseCmapVersion (_fbag );_dedg !=nil {return _dedg ;};};if _deea ==0&&_bef ==0&&_fbag ==0{_dfa .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};type CharMetrics struct{Wx float64 ;Wy float64 ;};func (_fdf *ttfParser )ParseHmtx ()error {if _ffc :=_fdf .Seek ("\u0068\u006d\u0074\u0078");_ffc !=nil {return _ffc ;};_fdf ._cdg .Widths =make ([]uint16 ,0,8);for _aab :=uint16 (0);_aab < _fdf ._ggg ;
_aab ++{_fdf ._cdg .Widths =append (_fdf ._cdg .Widths ,_fdf .ReadUShort ());_fdf .Skip (2);};if _fdf ._ggg < _fdf ._abf &&_fdf ._ggg > 0{_dgbc :=_fdf ._cdg .Widths [_fdf ._ggg -1];for _cad :=_fdf ._ggg ;_cad < _fdf ._abf ;_cad ++{_fdf ._cdg .Widths =append (_fdf ._cdg .Widths ,_dgbc );
};};return nil ;};var _bbb *RuneCharSafeMap ;func init (){RegisterStdFont (HelveticaName ,_eae ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_bcd ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_bae ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (HelveticaBoldObliqueName ,_cfb ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");};func (_ba *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_ba ._dd .Lock ();defer _ba ._dd .Unlock ();_ba ._age [b ]=r ;
};var _bbg =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
func (_bb *fontMap )read (_be StdFontName )(func ()StdFont ,bool ){_bb .Lock ();defer _bb .Unlock ();_aeb ,_ffb :=_bb ._ac [_be ];return _aeb ,_ffb ;};func _gdc ()StdFont {_cbd .Do (_fae );_dfd :=Descriptor {Name :TimesBoldItalicName ,Family :_da ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_dfd ,_fecg );};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;
CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};var _ Font =StdFont {};func (_beg *ttfParser )Parse ()(TtfType ,error ){_ffe ,_eeg :=_beg .ReadStr (4);if _eeg !=nil {return TtfType {},_eeg ;};if _ffe =="\u0074\u0074\u0063\u0066"{return _beg .parseTTC ();
}else if _ffe !="\u0000\u0001\u0000\u0000"&&_ffe !="\u0074\u0072\u0075\u0065"{_dfa .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_ffe );
};_ced :=int (_beg .ReadUShort ());_beg .Skip (3*2);_beg ._fegd =make (map[string ]uint32 );var _bea string ;for _dedc :=0;_dedc < _ced ;_dedc ++{_bea ,_eeg =_beg .ReadStr (4);if _eeg !=nil {return TtfType {},_eeg ;};_beg .Skip (4);_gafg :=_beg .ReadULong ();
_beg .Skip (4);_beg ._fegd [_bea ]=_gafg ;};_dfa .Log .Trace (_ebe (_beg ._fegd ));if _eeg =_beg .ParseComponents ();_eeg !=nil {return TtfType {},_eeg ;};return _beg ._cdg ,nil ;};func (_dfae StdFont )Descriptor ()Descriptor {return _dfae ._ad };var _aae *RuneCharSafeMap ;
var _bee =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
var _eca *RuneCharSafeMap ;func IsStdFont (name StdFontName )bool {_ ,_aaf :=_ge .read (name );return _aaf };type Font interface{Encoder ()_f .TextEncoder ;GetRuneMetrics (_ag rune )(CharMetrics ,bool );};func init (){RegisterStdFont (SymbolName ,_ebg ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_gdg );};func _agf ()StdFont {_cbd .Do (_fae );_ccbf :=Descriptor {Name :TimesBoldName ,Family :_da ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_ccbf ,_eca );};var _gdcc =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func TtfParse (r _c .ReadSeeker )(TtfType ,error ){_gaf :=&ttfParser {_ebbd :r };return _gaf .Parse ()};func TtfParseFile (fileStr string )(TtfType ,error ){_edd ,_aeee :=_de .Open (fileStr );if _aeee !=nil {return TtfType {},_aeee ;};defer _edd .Close ();
return TtfParse (_edd );};var _bcda =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func init (){RegisterStdFont (TimesRomanName ,_deg ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");RegisterStdFont (TimesBoldName ,_agf ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (TimesItalicName ,_gcg ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (TimesBoldItalicName ,_gdc ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_gfb *ttfParser )Read32Fixed ()float64 {_bfg :=float64 (_gfb .ReadShort ());_bfc :=float64 (_gfb .ReadUShort ())/65536.0;return _bfg +_bfc ;};func (_eddf *ttfParser )ReadUShort ()(_geaf uint16 ){_df .Read (_eddf ._ebbd ,_df .BigEndian ,&_geaf );
return _geaf ;};var _fcf *RuneCharSafeMap ;func (_fbe *ttfParser )ReadShort ()(_abbc int16 ){_df .Read (_fbe ._ebbd ,_df .BigEndian ,&_abbc );return _abbc ;};func _fae (){_feg =MakeRuneCharSafeMap (len (_dc ));_eca =MakeRuneCharSafeMap (len (_dc ));_fecg =MakeRuneCharSafeMap (len (_dc ));
_bdg =MakeRuneCharSafeMap (len (_dc ));for _agec ,_bca :=range _dc {_feg .Write (_bca ,CharMetrics {Wx :float64 (_bcda [_agec ])});_eca .Write (_bca ,CharMetrics {Wx :float64 (_gdcc [_agec ])});_fecg .Write (_bca ,CharMetrics {Wx :float64 (_bee [_agec ])});
_bdg .Write (_bca ,CharMetrics {Wx :float64 (_cfa [_agec ])});};};func (_cfc *ttfParser )parseCmapSubtable10 (_geg int64 )error {if _cfc ._cdg .Chars ==nil {_cfc ._cdg .Chars =make (map[rune ]GID );};_cfc ._ebbd .Seek (int64 (_cfc ._fegd ["\u0063\u006d\u0061\u0070"])+_geg ,_c .SeekStart );
var _babe ,_cfef uint32 ;_aba :=_cfc .ReadUShort ();if _aba < 8{_babe =uint32 (_cfc .ReadUShort ());_cfef =uint32 (_cfc .ReadUShort ());}else {_cfc .ReadUShort ();_babe =_cfc .ReadULong ();_cfef =_cfc .ReadULong ();};_dfa .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_aba ,_babe ,_cfef );
if _aba !=0{return _a .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_agac ,_ggd :=_cfc .ReadStr (256);if _ggd !=nil {return _ggd ;
};_cgb :=[]byte (_agac );for _cbg ,_cca :=range _cgb {_cfc ._cdg .Chars [rune (_cbg )]=GID (_cca );if _cca !=0{_b .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_cbg ,_cca ,rune (_cca ));
};};return nil ;};func (_gac *ttfParser )parseCmapFormat12 ()error {_egg :=_gac .ReadULong ();_dfa .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_gac ._cdg .String (),_egg );
for _gacg :=uint32 (0);_gacg < _egg ;_gacg ++{_facg :=_gac .ReadULong ();_decc :=_gac .ReadULong ();_fdaa :=_gac .ReadULong ();if _facg > 0x0010FFFF||(0xD800<=_facg &&_facg <=0xDFFF){return _a .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _decc < _facg ||_decc > 0x0010FFFF||(0xD800<=_decc &&_decc <=0xDFFF){return _a .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _ffag :=_facg ;_ffag <=_decc ;
_ffag ++{if _ffag > 0x10FFFF{_dfa .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_gac ._cdg .Chars [rune (_ffag )]=GID (_fdaa );_fdaa ++;};};return nil ;};func (_aa *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_aa ._dd .RLock ();defer _aa ._dd .RUnlock ();_gf ,_eef :=_aa ._age [b ];return _gf ,_eef ;};func _eae ()StdFont {_ec .Do (_abb );
_bcc :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};return NewStdFont (_bcc ,_bbb );
};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065"););func (_agfb *TtfType )MakeToUnicode ()*_fa .CMap {_fdg :=make (map[_fa .CharCode ]rune );if len (_agfb .GlyphNames )==0{for _fgg :=range _agfb .Chars {_fdg [_fa .CharCode (_fgg )]=_fgg ;
};return _fa .NewToUnicodeCMap (_fdg );};for _baec ,_dac :=range _agfb .Chars {_fdb :=_fa .CharCode (_baec );_bedd :=_agfb .GlyphNames [_dac ];_ddg ,_gcb :=_f .GlyphToRune (_bedd );if !_gcb {_dfa .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_baec ,_bedd );
_ddg =_f .MissingCodeRune ;};_fdg [_fdb ]=_ddg ;};return _fa .NewToUnicodeCMap (_fdg );};func (_ebb *TtfType )MakeEncoder ()(_f .SimpleEncoder ,error ){_cdf :=make (map[_f .CharCode ]GlyphName );for _afe :=_f .CharCode (0);_afe <=256;_afe ++{_bagd :=rune (_afe );
_cba ,_abg :=_ebb .Chars [_bagd ];if !_abg {continue ;};var _gea GlyphName ;if int (_cba )>=0&&int (_cba )< len (_ebb .GlyphNames ){_gea =_ebb .GlyphNames [_cba ];}else {_bed :=rune (_cba );if _cda ,_cfd :=_f .RuneToGlyph (_bed );_cfd {_gea =_cda ;};};
if _gea !=""{_cdf [_afe ]=_gea ;};};if len (_cdf )==0{_dfa .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_ebb ,_ebb .Chars );
};return _f .NewCustomSimpleTextEncoder (_cdf ,nil );};func _bcd ()StdFont {_ec .Do (_abb );_gc :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_gc ,_adg );};func (_bgdc *ttfParser )ReadStr (length int )(string ,error ){_cddd :=make ([]byte ,length );_eeff ,_aebc :=_bgdc ._ebbd .Read (_cddd );if _aebc !=nil {return "",_aebc ;}else if _eeff !=length {return "",_b .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_cddd ),nil ;};func NewFontFile2FromPdfObject (obj _bg .PdfObject )(TtfType ,error ){obj =_bg .TraceToDirectObject (obj );_aga ,_dec :=obj .(*_bg .PdfObjectStream );if !_dec {_dfa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_bg .ErrTypeError ;};_fda ,_adgd :=_bg .DecodeStream (_aga );if _adgd !=nil {return TtfType {},_adgd ;};_cfe :=ttfParser {_ebbd :_bd .NewReader (_fda )};return _cfe .Parse ();};func _cfb ()StdFont {_ec .Do (_abb );_bfb :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_bfb ,_ead );};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");
HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065"););type fontMap struct{_gg .Mutex ;_ac map[StdFontName ]func ()StdFont ;};type StdFontName string ;var _baf =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func (_dca *ttfParser )parseTTC ()(TtfType ,error ){_dca .Skip (2*2);_cbb :=_dca .ReadULong ();if _cbb < 1{return TtfType {},_a .New ("N\u006f \u0066\u006f\u006e\u0074\u0073\u0020\u0069\u006e \u0054\u0054\u0043\u0020fi\u006c\u0065");};_dege :=_dca .ReadULong ();
_ ,_eed :=_dca ._ebbd .Seek (int64 (_dege ),_c .SeekStart );if _eed !=nil {return TtfType {},_eed ;};return _dca .Parse ();};func (_eeb StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_cef ,_eff :=_eeb ._ade .Read (r );return _cef ,_eff ;};func (_bcf *ttfParser )ReadULong ()(_dga uint32 ){_df .Read (_bcf ._ebbd ,_df .BigEndian ,&_dga );
return _dga ;};type RuneCharSafeMap struct{_age map[rune ]CharMetrics ;_dd _gg .RWMutex ;};func (_aafd StdFont )Encoder ()_f .TextEncoder {return _aafd ._db };func (_dae *ttfParser )parseCmapFormat6 ()error {_geef :=int (_dae .ReadUShort ());_aggb :=int (_dae .ReadUShort ());
_dfa .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_dae ._cdg .String (),_geef ,_aggb );
for _eag :=0;_eag < _aggb ;_eag ++{_gfec :=GID (_dae .ReadUShort ());_dae ._cdg .Chars [rune (_eag +_geef )]=_gfec ;};return nil ;};func (_bag *RuneCharSafeMap )Range (f func (_cc rune ,_efb CharMetrics )(_ab bool )){_bag ._dd .RLock ();defer _bag ._dd .RUnlock ();
for _ccb ,_ae :=range _bag ._age {if f (_ccb ,_ae ){break ;};};};func (_dea *RuneCharSafeMap )Length ()int {_dea ._dd .RLock ();defer _dea ._dd .RUnlock ();return len (_dea ._age );};func _bac ()StdFont {_ga .Do (_eg );_gfe :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_gfe ,_aae );};var _ead *RuneCharSafeMap ;var _dfc *RuneCharSafeMap ;var _bbc *RuneCharSafeMap ;var _dedb =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
func (_cgbf *ttfParser )ParseName ()error {if _cbdb :=_cgbf .Seek ("\u006e\u0061\u006d\u0065");_cbdb !=nil {return _cbdb ;};_ggeb ,_ :=_cgbf ._ebbd .Seek (0,_c .SeekCurrent );_cgbf ._cdg .PostScriptName ="";_cgbf .Skip (2);_fggc :=_cgbf .ReadUShort ();
_cag :=_cgbf .ReadUShort ();for _cff :=uint16 (0);_cff < _fggc &&_cgbf ._cdg .PostScriptName =="";_cff ++{_cgbf .Skip (3*2);_cfaa :=_cgbf .ReadUShort ();_gbae :=_cgbf .ReadUShort ();_geba :=_cgbf .ReadUShort ();if _cfaa ==6{_cgbf ._ebbd .Seek (_ggeb +int64 (_cag )+int64 (_geba ),_c .SeekStart );
_dagc ,_deb :=_cgbf .ReadStr (int (_gbae ));if _deb !=nil {return _deb ;};_dagc =_g .Replace (_dagc ,"\u0000","",-1);_begc ,_deb :=_gb .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _deb !=nil {return _deb ;
};_cgbf ._cdg .PostScriptName =_begc .ReplaceAllString (_dagc ,"");};};if _cgbf ._cdg .PostScriptName ==""{_dfa .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func (_facb *ttfParser )ParseHead ()error {if _abe :=_facb .Seek ("\u0068\u0065\u0061\u0064");_abe !=nil {return _abe ;};_facb .Skip (3*4);_acd :=_facb .ReadULong ();if _acd !=0x5F0F3CF5{_dfa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_facb );
};_facb .Skip (2);_facb ._cdg .UnitsPerEm =_facb .ReadUShort ();_facb .Skip (2*8);_facb ._cdg .Xmin =_facb .ReadShort ();_facb ._cdg .Ymin =_facb .ReadShort ();_facb ._cdg .Xmax =_facb .ReadShort ();_facb ._cdg .Ymax =_facb .ReadShort ();return nil ;};
func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_cg :=_ge .read (name );_cg {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_ge .write (name ,fnc );for _ ,_fe :=range aliases {RegisterStdFont (_fe ,fnc );};};func (_cdae *ttfParser )ParseOS2 ()error {if _ggeba :=_cdae .Seek ("\u004f\u0053\u002f\u0032");_ggeba !=nil {return _ggeba ;};_aaec :=_cdae .ReadUShort ();_cdae .Skip (4*2);
_cdae .Skip (11*2+10+4*4+4);_ccg :=_cdae .ReadUShort ();_cdae ._cdg .Bold =(_ccg &32)!=0;_cdae .Skip (2*2);_cdae ._cdg .TypoAscender =_cdae .ReadShort ();_cdae ._cdg .TypoDescender =_cdae .ReadShort ();if _aaec >=2{_cdae .Skip (3*2+2*4+2);_cdae ._cdg .CapHeight =_cdae .ReadShort ();
}else {_cdae ._cdg .CapHeight =0;};return nil ;};var _gcd =&RuneCharSafeMap {_age :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
var _ge =&fontMap {_ac :make (map[StdFontName ]func ()StdFont )};var _fecg *RuneCharSafeMap ;func (_bfbc *ttfParser )parseCmapFormat0 ()error {_ggbc ,_efbg :=_bfbc .ReadStr (256);if _efbg !=nil {return _efbg ;};_fcaf :=[]byte (_ggbc );_dfa .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_bfbc ._cdg .String (),_ggbc ,_fcaf );
for _cde ,_degc :=range _fcaf {_bfbc ._cdg .Chars [rune (_cde )]=GID (_degc );};return nil ;};func (_dedcc *ttfParser )Skip (n int ){_dedcc ._ebbd .Seek (int64 (n ),_c .SeekCurrent )};type ttfParser struct{_cdg TtfType ;_ebbd _c .ReadSeeker ;_fegd map[string ]uint32 ;
_ggg uint16 ;_abf uint16 ;};var _cbd _gg .Once ;var _feg *RuneCharSafeMap ;func _deg ()StdFont {_cbd .Do (_fae );_cgf :=Descriptor {Name :TimesRomanName ,Family :_da ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_cgf ,_feg );};var _bdg *RuneCharSafeMap ;func (_fc CharMetrics )String ()string {return _b .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_fc .Wx ,_fc .Wy );};func (_dgf *TtfType )NewEncoder ()_f .TextEncoder {return _f .NewTrueTypeFontEncoder (_dgf .Chars )};
func (_cbc *ttfParser )ParseMaxp ()error {if _dgbd :=_cbc .Seek ("\u006d\u0061\u0078\u0070");_dgbd !=nil {return _dgbd ;};_cbc .Skip (4);_cbc ._abf =_cbc .ReadUShort ();return nil ;};func _abb (){_bbb =MakeRuneCharSafeMap (len (_dc ));_adg =MakeRuneCharSafeMap (len (_dc ));
for _ed ,_aee :=range _dc {_bbb .Write (_aee ,CharMetrics {Wx :float64 (_baf [_ed ])});_adg .Write (_aee ,CharMetrics {Wx :float64 (_bbg [_ed ])});};_fcf =_bbb .Copy ();_ead =_adg .Copy ();};var _dc =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
func (_eddg *ttfParser )Seek (tag string )error {_ada ,_eaf :=_eddg ._fegd [tag ];if !_eaf {return _b .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );};_eddg ._ebbd .Seek (int64 (_ada ),_c .SeekStart );
return nil ;};func _ebe (_daa map[string ]uint32 )string {var _beb []string ;for _dde :=range _daa {_beb =append (_beb ,_dde );};_e .Slice (_beb ,func (_cdd ,_daac int )bool {return _daa [_beb [_cdd ]]< _daa [_beb [_daac ]]});_cbe :=[]string {_b .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_daa ))};
for _ ,_ebf :=range _beb {_cbe =append (_cbe ,_b .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_ebf ,_daa [_ebf ]));};return _g .Join (_cbe ,"\u000a");};