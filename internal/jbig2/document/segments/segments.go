//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_bf "encoding/binary";_bd "errors";_fc "fmt";
	_dd "github.com/magnus195/unipdf/v3/common";
	_ab "github.com/magnus195/unipdf/v3/internal/bitwise";
	_aa "github.com/magnus195/unipdf/v3/internal/jbig2/basic";
	_fa "github.com/magnus195/unipdf/v3/internal/jbig2/bitmap";
	_bb "github.com/magnus195/unipdf/v3/internal/jbig2/decoder/arithmetic";
	_af "github.com/magnus195/unipdf/v3/internal/jbig2/decoder/huffman";
	_fca "github.com/magnus195/unipdf/v3/internal/jbig2/decoder/mmr";
	_bcc "github.com/magnus195/unipdf/v3/internal/jbig2/encoder/arithmetic";
	_bc "github.com/magnus195/unipdf/v3/internal/jbig2/errors";
	_abb "github.com/magnus195/unipdf/v3/internal/jbig2/internal";_f "image";_b "io";_d "math";_be "strings";_c "time";);func (_fdfbf *Header )writeSegmentDataLength (_eac _ab .BinaryWriter )(_dgcg int ,_dbgf error ){_fgdf :=make ([]byte ,4);
_bf .BigEndian .PutUint32 (_fgdf ,uint32 (_fdfbf .SegmentDataLength ));if _dgcg ,_dbgf =_eac .Write (_fgdf );_dbgf !=nil {return 0,_bc .Wrap (_dbgf ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");
};return _dgcg ,nil ;};func (_fgcc *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _fgcc .RegionSegment };func (_bgf *PageInformationSegment )Init (h *Header ,r *_ab .Reader )(_gdgb error ){_bgf ._egcc =r ;if _gdgb =_bgf .parseHeader ();_gdgb !=nil {return _bc .Wrap (_gdgb ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_aeee *TableSegment )HtRS ()int32 {return _aeee ._efeg };func (_fbfg *GenericRegion )setParametersWithAt (_edcf bool ,_bfd byte ,_gge ,_gaff bool ,_bddd ,_ebgf []int8 ,_acfd ,_dec uint32 ,_fdag *_bb .DecoderStats ,_fgf *_bb .Decoder ){_fbfg .IsMMREncoded =_edcf ;
_fbfg .GBTemplate =_bfd ;_fbfg .IsTPGDon =_gge ;_fbfg .GBAtX =_bddd ;_fbfg .GBAtY =_ebgf ;_fbfg .RegionSegment .BitmapHeight =_dec ;_fbfg .RegionSegment .BitmapWidth =_acfd ;_fbfg ._daga =nil ;_fbfg .Bitmap =nil ;if _fdag !=nil {_fbfg ._gga =_fdag ;};if _fgf !=nil {_fbfg ._cce =_fgf ;
};_dd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_fbfg );};func (_acd *Header )writeReferredToCount (_gfde _ab .BinaryWriter )(_dgc int ,_dfab error ){const _ffab ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_acd .RTSNumbers =make ([]int ,len (_acd .RTSegments ));for _ddbg ,_eeg :=range _acd .RTSegments {_acd .RTSNumbers [_ddbg ]=int (_eeg .SegmentNumber );};if len (_acd .RTSNumbers )<=4{var _ffca byte ;if len (_acd .RetainBits )>=1{_ffca =_acd .RetainBits [0];
};_ffca |=byte (len (_acd .RTSNumbers ))<<5;if _dfab =_gfde .WriteByte (_ffca );_dfab !=nil {return 0,_bc .Wrap (_dfab ,_ffab ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_eeee :=uint32 (len (_acd .RTSNumbers ));
_aaea :=make ([]byte ,4+_aa .Ceil (len (_acd .RTSNumbers )+1,8));_eeee |=0x7<<29;_bf .BigEndian .PutUint32 (_aaea ,_eeee );copy (_aaea [1:],_acd .RetainBits );_dgc ,_dfab =_gfde .Write (_aaea );if _dfab !=nil {return 0,_bc .Wrap (_dfab ,_ffab ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _dgc ,nil ;};func (_gfgb *TextRegion )checkInput ()error {const _gggg ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_gfgb .UseRefinement {if _gfgb .SbrTemplate !=0{_dd .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");
_gfgb .SbrTemplate =0;};};if _gfgb .SbHuffFS ==2||_gfgb .SbHuffRDWidth ==2||_gfgb .SbHuffRDHeight ==2||_gfgb .SbHuffRDX ==2||_gfgb .SbHuffRDY ==2{return _bc .Error (_gggg ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_gfgb .UseRefinement {if _gfgb .SbHuffRSize !=0{_dd .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_gfgb .SbHuffRSize =0;};if _gfgb .SbHuffRDY !=0{_dd .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_gfgb .SbHuffRDY =0;};if _gfgb .SbHuffRDX !=0{_dd .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_gfgb .SbHuffRDX =0;};if _gfgb .SbHuffRDWidth !=0{_dd .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_gfgb .SbHuffRDWidth =0;};if _gfgb .SbHuffRDHeight !=0{_dd .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_gfgb .SbHuffRDHeight =0;};};return nil ;
};func (_fgbe *TextRegion )getSymbols ()error {if _fgbe .Header .RTSegments !=nil {return _fgbe .initSymbols ();};return nil ;};func (_fbgd *GenericRegion )decodeLine (_aegb ,_eab ,_bfc int )error {const _dgad ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";
_cfced :=_fbgd .Bitmap .GetByteIndex (0,_aegb );_bagd :=_cfced -_fbgd .Bitmap .RowStride ;switch _fbgd .GBTemplate {case 0:if !_fbgd .UseExtTemplates {return _fbgd .decodeTemplate0a (_aegb ,_eab ,_bfc ,_cfced ,_bagd );};return _fbgd .decodeTemplate0b (_aegb ,_eab ,_bfc ,_cfced ,_bagd );
case 1:return _fbgd .decodeTemplate1 (_aegb ,_eab ,_bfc ,_cfced ,_bagd );case 2:return _fbgd .decodeTemplate2 (_aegb ,_eab ,_bfc ,_cfced ,_bagd );case 3:return _fbgd .decodeTemplate3 (_aegb ,_eab ,_bfc ,_cfced ,_bagd );};return _bc .Errorf (_dgad ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_fbgd .GBTemplate );
};func (_egba *GenericRegion )setParametersMMR (_agdd bool ,_cbe ,_bfdc int64 ,_cfg ,_cec uint32 ,_gcgb byte ,_fgfb ,_gbg bool ,_abdb ,_cecd []int8 ){_egba .DataOffset =_cbe ;_egba .DataLength =_bfdc ;_egba .RegionSegment =&RegionSegment {};_egba .RegionSegment .BitmapHeight =_cfg ;
_egba .RegionSegment .BitmapWidth =_cec ;_egba .GBTemplate =_gcgb ;_egba .IsMMREncoded =_agdd ;_egba .IsTPGDon =_fgfb ;_egba .GBAtX =_abdb ;_egba .GBAtY =_cecd ;};func (_bgga *TextRegion )decodeDT ()(_gcfbb int64 ,_cbgb error ){if _bgga .IsHuffmanEncoded {if _bgga .SbHuffDT ==3{_gcfbb ,_cbgb =_bgga ._beea .Decode (_bgga ._fbea );
if _cbgb !=nil {return 0,_cbgb ;};}else {var _fabbd _af .Tabler ;_fabbd ,_cbgb =_af .GetStandardTable (11+int (_bgga .SbHuffDT ));if _cbgb !=nil {return 0,_cbgb ;};_gcfbb ,_cbgb =_fabbd .Decode (_bgga ._fbea );if _cbgb !=nil {return 0,_cbgb ;};};}else {var _dbbb int32 ;
_dbbb ,_cbgb =_bgga ._fceg .DecodeInt (_bgga ._ebbd );if _cbgb !=nil {return 0,_cbgb ;};_gcfbb =int64 (_dbbb );};_gcfbb *=int64 (_bgga .SbStrips );return _gcfbb ,nil ;};func (_fecc *GenericRegion )updateOverrideFlags ()error {const _dbc ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _fecc .GBAtX ==nil ||_fecc .GBAtY ==nil {return nil ;};if len (_fecc .GBAtX )!=len (_fecc .GBAtY ){return _bc .Errorf (_dbc ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_fecc .GBAtX ),len (_fecc .GBAtY ));
};_fecc .GBAtOverride =make ([]bool ,len (_fecc .GBAtX ));switch _fecc .GBTemplate {case 0:if !_fecc .UseExtTemplates {if _fecc .GBAtX [0]!=3||_fecc .GBAtY [0]!=-1{_fecc .setOverrideFlag (0);};if _fecc .GBAtX [1]!=-3||_fecc .GBAtY [1]!=-1{_fecc .setOverrideFlag (1);
};if _fecc .GBAtX [2]!=2||_fecc .GBAtY [2]!=-2{_fecc .setOverrideFlag (2);};if _fecc .GBAtX [3]!=-2||_fecc .GBAtY [3]!=-2{_fecc .setOverrideFlag (3);};}else {if _fecc .GBAtX [0]!=-2||_fecc .GBAtY [0]!=0{_fecc .setOverrideFlag (0);};if _fecc .GBAtX [1]!=0||_fecc .GBAtY [1]!=-2{_fecc .setOverrideFlag (1);
};if _fecc .GBAtX [2]!=-2||_fecc .GBAtY [2]!=-1{_fecc .setOverrideFlag (2);};if _fecc .GBAtX [3]!=-1||_fecc .GBAtY [3]!=-2{_fecc .setOverrideFlag (3);};if _fecc .GBAtX [4]!=1||_fecc .GBAtY [4]!=-2{_fecc .setOverrideFlag (4);};if _fecc .GBAtX [5]!=2||_fecc .GBAtY [5]!=-1{_fecc .setOverrideFlag (5);
};if _fecc .GBAtX [6]!=-3||_fecc .GBAtY [6]!=0{_fecc .setOverrideFlag (6);};if _fecc .GBAtX [7]!=-4||_fecc .GBAtY [7]!=0{_fecc .setOverrideFlag (7);};if _fecc .GBAtX [8]!=2||_fecc .GBAtY [8]!=-2{_fecc .setOverrideFlag (8);};if _fecc .GBAtX [9]!=3||_fecc .GBAtY [9]!=-1{_fecc .setOverrideFlag (9);
};if _fecc .GBAtX [10]!=-2||_fecc .GBAtY [10]!=-2{_fecc .setOverrideFlag (10);};if _fecc .GBAtX [11]!=-3||_fecc .GBAtY [11]!=-1{_fecc .setOverrideFlag (11);};};case 1:if _fecc .GBAtX [0]!=3||_fecc .GBAtY [0]!=-1{_fecc .setOverrideFlag (0);};case 2:if _fecc .GBAtX [0]!=2||_fecc .GBAtY [0]!=-1{_fecc .setOverrideFlag (0);
};case 3:if _fecc .GBAtX [0]!=2||_fecc .GBAtY [0]!=-1{_fecc .setOverrideFlag (0);};};return nil ;};func (_acff *Header )writeReferredToSegments (_cfcd _ab .BinaryWriter )(_dgf int ,_bfdb error ){const _agecc ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_cedb uint16 ;_eede uint32 ;);_adea :=_acff .referenceSize ();_ebffe :=1;_egdb :=make ([]byte ,_adea );for _ ,_ffcaa :=range _acff .RTSNumbers {switch _adea {case 4:_eede =uint32 (_ffcaa );_bf .BigEndian .PutUint32 (_egdb ,_eede );_ebffe ,_bfdb =_cfcd .Write (_egdb );
if _bfdb !=nil {return 0,_bc .Wrap (_bfdb ,_agecc ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_cedb =uint16 (_ffcaa );_bf .BigEndian .PutUint16 (_egdb ,_cedb );_ebffe ,_bfdb =_cfcd .Write (_egdb );if _bfdb !=nil {return 0,_bc .Wrap (_bfdb ,_agecc ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _bfdb =_cfcd .WriteByte (byte (_ffcaa ));_bfdb !=nil {return 0,_bc .Wrap (_bfdb ,_agecc ,"\u0075\u0069\u006et\u0038");};};_dgf +=_ebffe ;};return _dgf ,nil ;};func (_aceb *Header )readSegmentPageAssociation (_dbgd Documenter ,_fbeg *_ab .Reader ,_gbda uint64 ,_bgcd ...int )(_edfc error ){const _bbbfb ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_aceb .PageAssociationFieldSize {_gfcg ,_gbde :=_fbeg .ReadBits (8);if _gbde !=nil {return _bc .Wrap (_gbde ,_bbbfb ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_aceb .PageAssociation =int (_gfcg &0xFF);}else {_gadg ,_acbeg :=_fbeg .ReadBits (32);
if _acbeg !=nil {return _bc .Wrap (_acbeg ,_bbbfb ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_aceb .PageAssociation =int (_gadg &_d .MaxInt32 );};if _gbda ==0{return nil ;};if _aceb .PageAssociation !=0{_agec ,_bca :=_dbgd .GetPage (_aceb .PageAssociation );
if _bca !=nil {return _bc .Wrap (_bca ,_bbbfb ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _efdb int ;for _dbde :=uint64 (0);_dbde < _gbda ;_dbde ++{_efdb =_bgcd [_dbde ];
_aceb .RTSegments [_dbde ],_bca =_agec .GetSegment (_efdb );if _bca !=nil {var _fbec error ;_aceb .RTSegments [_dbde ],_fbec =_dbgd .GetGlobalSegment (_efdb );if _fbec !=nil {return _bc .Wrapf (_bca ,_bbbfb ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_aceb .PageAssociation );
};};};return nil ;};for _bcfg :=uint64 (0);_bcfg < _gbda ;_bcfg ++{_aceb .RTSegments [_bcfg ],_edfc =_dbgd .GetGlobalSegment (_bgcd [_bcfg ]);if _edfc !=nil {return _bc .Wrapf (_edfc ,_bbbfb ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_bgcd [_bcfg ]);
};};return nil ;};func (_gdb *TextRegion )GetRegionBitmap ()(*_fa .Bitmap ,error ){if _gdb .RegionBitmap !=nil {return _gdb .RegionBitmap ,nil ;};if !_gdb .IsHuffmanEncoded {if _gdac :=_gdb .setCodingStatistics ();_gdac !=nil {return nil ,_gdac ;};};if _dbcf :=_gdb .createRegionBitmap ();
_dbcf !=nil {return nil ,_dbcf ;};if _fgcaf :=_gdb .decodeSymbolInstances ();_fgcaf !=nil {return nil ,_fgcaf ;};return _gdb .RegionBitmap ,nil ;};func (_age *GenericRegion )overrideAtTemplate2 (_agba ,_gaca ,_ebffg ,_fae ,_acf int )int {_agba &=0x3FB;
if _age .GBAtY [0]==0&&_age .GBAtX [0]>=-int8 (_acf ){_agba |=(_fae >>uint (7-(int8 (_acf )+_age .GBAtX [0]))&0x1)<<2;}else {_agba |=int (_age .getPixel (_gaca +int (_age .GBAtX [0]),_ebffg +int (_age .GBAtY [0])))<<2;};return _agba ;};func (_dcdd *TextRegion )String ()string {_agfb :=&_be .Builder {};
_agfb .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_agfb .WriteString (_dcdd .RegionInfo .String ()+"\u000a");_agfb .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_dcdd .SbrTemplate ));
_agfb .WriteString (_fc .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_dcdd .SbDsOffset ));_agfb .WriteString (_fc .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_dcdd .DefaultPixel ));
_agfb .WriteString (_fc .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_dcdd .CombinationOperator ));_agfb .WriteString (_fc .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_dcdd .IsTransposed ));
_agfb .WriteString (_fc .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_dcdd .ReferenceCorner ));_agfb .WriteString (_fc .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_dcdd .UseRefinement ));
_agfb .WriteString (_fc .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_dcdd .IsHuffmanEncoded ));if _dcdd .IsHuffmanEncoded {_agfb .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_dcdd .SbHuffRSize ));
_agfb .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_dcdd .SbHuffRDY ));_agfb .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_dcdd .SbHuffRDX ));
_agfb .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_dcdd .SbHuffRDHeight ));_agfb .WriteString (_fc .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_dcdd .SbHuffRDWidth ));
_agfb .WriteString (_fc .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_dcdd .SbHuffDT ));_agfb .WriteString (_fc .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_dcdd .SbHuffDS ));
_agfb .WriteString (_fc .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_dcdd .SbHuffFS ));};_agfb .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_dcdd .SbrATX ));
_agfb .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_dcdd .SbrATY ));_agfb .WriteString (_fc .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_dcdd .NumberOfSymbolInstances ));
_agfb .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_dcdd .SbrATX ));return _agfb .String ();};func NewHeader (d Documenter ,r *_ab .Reader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_afc :=&Header {Reader :r };
if _bgcb :=_afc .parse (d ,r ,offset ,organizationType );_bgcb !=nil {return nil ,_bc .Wrap (_bgcb ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _afc ,nil ;};type template1 struct{};type templater interface{form (_cde ,_dbag ,_abba ,_cgb ,_geg int16 )int16 ;
setIndex (_fdfbb *_bb .DecoderStats );};func _gefg (_cgbc int )int {if _cgbc ==0{return 0;};_cgbc |=_cgbc >>1;_cgbc |=_cgbc >>2;_cgbc |=_cgbc >>4;_cgbc |=_cgbc >>8;_cgbc |=_cgbc >>16;return (_cgbc +1)>>1;};func (_bbggf *SymbolDictionary )decodeRefinedSymbol (_bbca ,_gagb uint32 )error {var (_dgd int ;
_dccf ,_fafe int32 ;);if _bbggf .IsHuffmanEncoded {_efcge ,_ebadd :=_bbggf ._fdfag .ReadBits (byte (_bbggf ._gggbg ));if _ebadd !=nil {return _ebadd ;};_dgd =int (_efcge );_defaf ,_ebadd :=_af .GetStandardTable (15);if _ebadd !=nil {return _ebadd ;};_aaaf ,_ebadd :=_defaf .Decode (_bbggf ._fdfag );
if _ebadd !=nil {return _ebadd ;};_dccf =int32 (_aaaf );_aaaf ,_ebadd =_defaf .Decode (_bbggf ._fdfag );if _ebadd !=nil {return _ebadd ;};_fafe =int32 (_aaaf );_defaf ,_ebadd =_af .GetStandardTable (1);if _ebadd !=nil {return _ebadd ;};if _ ,_ebadd =_defaf .Decode (_bbggf ._fdfag );
_ebadd !=nil {return _ebadd ;};_bbggf ._fdfag .Align ();}else {_bbfc ,_dgcb :=_bbggf ._bbefg .DecodeIAID (uint64 (_bbggf ._gggbg ),_bbggf ._dfbda );if _dgcb !=nil {return _dgcb ;};_dgd =int (_bbfc );_dccf ,_dgcb =_bbggf ._bbefg .DecodeInt (_bbggf ._cdca );
if _dgcb !=nil {return _dgcb ;};_fafe ,_dgcb =_bbggf ._bbefg .DecodeInt (_bbggf ._aaad );if _dgcb !=nil {return _dgcb ;};};if _ecfc :=_bbggf .setSymbolsArray ();_ecfc !=nil {return _ecfc ;};_baca :=_bbggf ._acce [_dgd ];if _adc :=_bbggf .decodeNewSymbols (_bbca ,_gagb ,_baca ,_dccf ,_fafe );
_adc !=nil {return _adc ;};if _bbggf .IsHuffmanEncoded {_bbggf ._fdfag .Align ();};return nil ;};func (_gdcb *TextRegion )parseHeader ()error {var _acbag error ;_dd .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _acbag !=nil {_dd .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_acbag );
}else {_dd .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _acbag =_gdcb .RegionInfo .parseHeader ();
_acbag !=nil {return _acbag ;};if _acbag =_gdcb .readRegionFlags ();_acbag !=nil {return _acbag ;};if _gdcb .IsHuffmanEncoded {if _acbag =_gdcb .readHuffmanFlags ();_acbag !=nil {return _acbag ;};};if _acbag =_gdcb .readUseRefinement ();_acbag !=nil {return _acbag ;
};if _acbag =_gdcb .readAmountOfSymbolInstances ();_acbag !=nil {return _acbag ;};if _acbag =_gdcb .getSymbols ();_acbag !=nil {return _acbag ;};if _acbag =_gdcb .computeSymbolCodeLength ();_acbag !=nil {return _acbag ;};if _acbag =_gdcb .checkInput ();
_acbag !=nil {return _acbag ;};_dd .Log .Trace ("\u0025\u0073",_gdcb .String ());return nil ;};func (_cab *SymbolDictionary )encodeRefinementATFlags (_acbf _ab .BinaryWriter )(_dae int ,_gdf error ){const _geaf ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_cab .UseRefinementAggregation ||_cab .SdrTemplate !=0{return 0,nil ;};for _cdgfc :=0;_cdgfc < 2;_cdgfc ++{if _gdf =_acbf .WriteByte (byte (_cab .SdrATX [_cdgfc ]));_gdf !=nil {return _dae ,_bc .Wrapf (_gdf ,_geaf ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_cdgfc );
};_dae ++;if _gdf =_acbf .WriteByte (byte (_cab .SdrATY [_cdgfc ]));_gdf !=nil {return _dae ,_bc .Wrapf (_gdf ,_geaf ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_cdgfc );};_dae ++;};return _dae ,nil ;};func (_eebg *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_gabf int ;
_ffbg int32 ;_feca error ;_dafcc =int32 (_eebg ._bggg +_eebg .NumberOfNewSymbols );_feag =make ([]int ,_dafcc ););for _ggabd :=int32 (0);_ggabd < _dafcc ;_ggabd +=_ffbg {if _eebg .IsHuffmanEncoded {_bcdf ,_bcda :=_af .GetStandardTable (1);if _bcda !=nil {return nil ,_bcda ;
};_dfef ,_bcda :=_bcdf .Decode (_eebg ._fdfag );if _bcda !=nil {return nil ,_bcda ;};_ffbg =int32 (_dfef );}else {_ffbg ,_feca =_eebg ._bbefg .DecodeInt (_eebg ._gcaa );if _feca !=nil {return nil ,_feca ;};};if _ffbg !=0{if _ggabd +_ffbg > _dafcc {return nil ,_bc .Error ("\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0067\u0065\u0074T\u006f\u0045\u0078\u0070\u006f\u0072\u0074F\u006c\u0061\u0067\u0073","\u006d\u0061\u006c\u0066\u006f\u0072m\u0065\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0064\u0061\u0074\u0061\u0020\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u002e\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u006f\u0075\u0074\u0020\u006ff\u0020r\u0061\u006e\u0067\u0065");
};for _bdgdc :=_ggabd ;_bdgdc < _ggabd +_ffbg ;_bdgdc ++{_feag [_bdgdc ]=_gabf ;};};if _gabf ==0{_gabf =1;}else {_gabf =0;};};return _feag ,nil ;};func (_ffa *GenericRegion )String ()string {_aabf :=&_be .Builder {};_aabf .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_aabf .WriteString (_ffa .RegionSegment .String ()+"\u000a");_aabf .WriteString (_fc .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_ffa .UseExtTemplates ));_aabf .WriteString (_fc .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_ffa .IsTPGDon ));
_aabf .WriteString (_fc .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_ffa .GBTemplate ));_aabf .WriteString (_fc .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_ffa .IsMMREncoded ));
_aabf .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_ffa .GBAtX ));_aabf .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_ffa .GBAtY ));
_aabf .WriteString (_fc .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_ffa .GBAtOverride ));return _aabf .String ();};func (_fage *GenericRegion )overrideAtTemplate1 (_cag ,_cfea ,_bgef ,_gad ,_bbfd int )int {_cag &=0x1FF7;
if _fage .GBAtY [0]==0&&_fage .GBAtX [0]>=-int8 (_bbfd ){_cag |=(_gad >>uint (7-(int8 (_bbfd )+_fage .GBAtX [0]))&0x1)<<3;}else {_cag |=int (_fage .getPixel (_cfea +int (_fage .GBAtX [0]),_bgef +int (_fage .GBAtY [0])))<<3;};return _cag ;};func (_bagg *GenericRegion )copyLineAbove (_cbd int )error {_dbf :=_cbd *_bagg .Bitmap .RowStride ;
_dcba :=_dbf -_bagg .Bitmap .RowStride ;for _dbb :=0;_dbb < _bagg .Bitmap .RowStride ;_dbb ++{_fcb ,_afe :=_bagg .Bitmap .GetByte (_dcba );if _afe !=nil {return _afe ;};_dcba ++;if _afe =_bagg .Bitmap .SetByte (_dbf ,_fcb );_afe !=nil {return _afe ;};_dbf ++;
};return nil ;};func (_fbff *GenericRegion )decodeTemplate2 (_edcc ,_ccf ,_eaef int ,_dbd ,_fgcg int )(_eed error ){const _aecc ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_ced ,_bedg int ;_eca ,_dab int ;_egbf byte ;
_eefe ,_ggaf int ;);if _edcc >=1{_egbf ,_eed =_fbff .Bitmap .GetByte (_fgcg );if _eed !=nil {return _bc .Wrap (_eed ,_aecc ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_eca =int (_egbf );};if _edcc >=2{_egbf ,_eed =_fbff .Bitmap .GetByte (_fgcg -_fbff .Bitmap .RowStride );
if _eed !=nil {return _bc .Wrap (_eed ,_aecc ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_dab =int (_egbf )<<4;};_ced =(_eca >>3&0x7c)|(_dab >>3&0x380);for _eaec :=0;_eaec < _eaef ;_eaec =_eefe {var (_dacc byte ;
_cfeg int ;);_eefe =_eaec +8;if _cdgf :=_ccf -_eaec ;_cdgf > 8{_cfeg =8;}else {_cfeg =_cdgf ;};if _edcc > 0{_eca <<=8;if _eefe < _ccf {_egbf ,_eed =_fbff .Bitmap .GetByte (_fgcg +1);if _eed !=nil {return _bc .Wrap (_eed ,_aecc ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");
};_eca |=int (_egbf );};};if _edcc > 1{_dab <<=8;if _eefe < _ccf {_egbf ,_eed =_fbff .Bitmap .GetByte (_fgcg -_fbff .Bitmap .RowStride +1);if _eed !=nil {return _bc .Wrap (_eed ,_aecc ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");
};_dab |=int (_egbf )<<4;};};for _dff :=0;_dff < _cfeg ;_dff ++{_addd :=uint (10-_dff );if _fbff ._fabc {_bedg =_fbff .overrideAtTemplate2 (_ced ,_eaec +_dff ,_edcc ,int (_dacc ),_dff );_fbff ._gga .SetIndex (int32 (_bedg ));}else {_fbff ._gga .SetIndex (int32 (_ced ));
};_ggaf ,_eed =_fbff ._cce .DecodeBit (_fbff ._gga );if _eed !=nil {return _bc .Wrap (_eed ,_aecc ,"");};_dacc |=byte (_ggaf <<uint (7-_dff ));_ced =((_ced &0x1bd)<<1)|_ggaf |((_eca >>_addd )&0x4)|((_dab >>_addd )&0x80);};if _ffcg :=_fbff .Bitmap .SetByte (_dbd ,_dacc );
_ffcg !=nil {return _bc .Wrap (_ffcg ,_aecc ,"");};_dbd ++;_fgcg ++;};return nil ;};func (_aca *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_aag ,_eaf ,_gc ,_bg ,_afdc ,_gca ,_dad ,_deb ,_gcb int )error {var (_gg ,_bdgg ,_afa ,_fe ,_dddd ,_fgg int ;
_cge byte ;_gcd error ;);if _aag > 0{_cge ,_gcd =_aca .RegionBitmap .GetByte (_dad -_gc );if _gcd !=nil {return _gcd ;};_afa =int (_cge );};if _deb > 0&&_deb <=_aca .ReferenceBitmap .Height {_cge ,_gcd =_aca .ReferenceBitmap .GetByte (_gcb -_bg +_gca );
if _gcd !=nil {return _gcd ;};_fe =int (_cge )<<4;};if _deb >=0&&_deb < _aca .ReferenceBitmap .Height {_cge ,_gcd =_aca .ReferenceBitmap .GetByte (_gcb +_gca );if _gcd !=nil {return _gcd ;};_dddd =int (_cge )<<1;};if _deb > -2&&_deb < _aca .ReferenceBitmap .Height -1{_cge ,_gcd =_aca .ReferenceBitmap .GetByte (_gcb +_bg +_gca );
if _gcd !=nil {return _gcd ;};_fgg =int (_cge );};_gg =((_afa >>5)&0x6)|((_fgg >>2)&0x30)|(_dddd &0x180)|(_fe &0xc00);var _fde int ;for _efb :=0;_efb < _afdc ;_efb =_fde {var _dfc int ;_fde =_efb +8;var _bgc int ;if _bgc =_eaf -_efb ;_bgc > 8{_bgc =8;};
_bff :=_fde < _eaf ;_fbc :=_fde < _aca .ReferenceBitmap .Width ;_ff :=_gca +1;if _aag > 0{_cge =0;if _bff {_cge ,_gcd =_aca .RegionBitmap .GetByte (_dad -_gc +1);if _gcd !=nil {return _gcd ;};};_afa =(_afa <<8)|int (_cge );};if _deb > 0&&_deb <=_aca .ReferenceBitmap .Height {var _fcab int ;
if _fbc {_cge ,_gcd =_aca .ReferenceBitmap .GetByte (_gcb -_bg +_ff );if _gcd !=nil {return _gcd ;};_fcab =int (_cge )<<4;};_fe =(_fe <<8)|_fcab ;};if _deb >=0&&_deb < _aca .ReferenceBitmap .Height {var _ed int ;if _fbc {_cge ,_gcd =_aca .ReferenceBitmap .GetByte (_gcb +_ff );
if _gcd !=nil {return _gcd ;};_ed =int (_cge )<<1;};_dddd =(_dddd <<8)|_ed ;};if _deb > -2&&_deb < (_aca .ReferenceBitmap .Height -1){_cge =0;if _fbc {_cge ,_gcd =_aca .ReferenceBitmap .GetByte (_gcb +_bg +_ff );if _gcd !=nil {return _gcd ;};};_fgg =(_fgg <<8)|int (_cge );
};for _aeb :=0;_aeb < _bgc ;_aeb ++{var _ad int ;_add :=false ;_aac :=(_gg >>4)&0x1ff;if _aac ==0x1ff{_add =true ;_ad =1;}else if _aac ==0x00{_add =true ;};if !_add {if _aca ._afd {_bdgg =_aca .overrideAtTemplate0 (_gg ,_efb +_aeb ,_aag ,_dfc ,_aeb );_aca ._cg .SetIndex (int32 (_bdgg ));
}else {_aca ._cg .SetIndex (int32 (_gg ));};_ad ,_gcd =_aca ._dcd .DecodeBit (_aca ._cg );if _gcd !=nil {return _gcd ;};};_aaac :=uint (7-_aeb );_dfc |=_ad <<_aaac ;_gg =((_gg &0xdb6)<<1)|_ad |(_afa >>_aaac +5)&0x002|((_fgg >>_aaac +2)&0x010)|((_dddd >>_aaac )&0x080)|((_fe >>_aaac )&0x400);
};_gcd =_aca .RegionBitmap .SetByte (_dad ,byte (_dfc ));if _gcd !=nil {return _gcd ;};_dad ++;_gcb ++;};return nil ;};func (_ead *GenericRefinementRegion )decodeTemplate (_cgcf ,_ebe ,_adb ,_fdf ,_aed ,_aeg ,_db ,_caa ,_fcc ,_fee int ,_gce templater )(_fff error ){var (_cfbb ,_ccg ,_ega ,_aebg ,_aab int16 ;
_ebd ,_dcb ,_gcc ,_cda int ;_ggd byte ;);if _fcc >=1&&(_fcc -1)< _ead .ReferenceBitmap .Height {_ggd ,_fff =_ead .ReferenceBitmap .GetByte (_fee -_fdf );if _fff !=nil {return _fff ;};_ebd =int (_ggd );};if _fcc >=0&&(_fcc )< _ead .ReferenceBitmap .Height {_ggd ,_fff =_ead .ReferenceBitmap .GetByte (_fee );
if _fff !=nil {return _fff ;};_dcb =int (_ggd );};if _fcc >=-1&&(_fcc +1)< _ead .ReferenceBitmap .Height {_ggd ,_fff =_ead .ReferenceBitmap .GetByte (_fee +_fdf );if _fff !=nil {return _fff ;};_gcc =int (_ggd );};_fee ++;if _cgcf >=1{_ggd ,_fff =_ead .RegionBitmap .GetByte (_caa -_adb );
if _fff !=nil {return _fff ;};_cda =int (_ggd );};_caa ++;_cdc :=_ead .ReferenceDX %8;_dga :=6+_cdc ;_gab :=_fee %_fdf ;if _dga >=0{if _dga < 8{_cfbb =int16 (_ebd >>uint (_dga ))&0x07;};if _dga < 8{_ccg =int16 (_dcb >>uint (_dga ))&0x07;};if _dga < 8{_ega =int16 (_gcc >>uint (_dga ))&0x07;
};if _dga ==6&&_gab > 1{if _fcc >=1&&(_fcc -1)< _ead .ReferenceBitmap .Height {_ggd ,_fff =_ead .ReferenceBitmap .GetByte (_fee -_fdf -2);if _fff !=nil {return _fff ;};_cfbb |=int16 (_ggd <<2)&0x04;};if _fcc >=0&&_fcc < _ead .ReferenceBitmap .Height {_ggd ,_fff =_ead .ReferenceBitmap .GetByte (_fee -2);
if _fff !=nil {return _fff ;};_ccg |=int16 (_ggd <<2)&0x04;};if _fcc >=-1&&_fcc +1< _ead .ReferenceBitmap .Height {_ggd ,_fff =_ead .ReferenceBitmap .GetByte (_fee +_fdf -2);if _fff !=nil {return _fff ;};_ega |=int16 (_ggd <<2)&0x04;};};if _dga ==0{_ebd =0;
_dcb =0;_gcc =0;if _gab < _fdf -1{if _fcc >=1&&_fcc -1< _ead .ReferenceBitmap .Height {_ggd ,_fff =_ead .ReferenceBitmap .GetByte (_fee -_fdf );if _fff !=nil {return _fff ;};_ebd =int (_ggd );};if _fcc >=0&&_fcc < _ead .ReferenceBitmap .Height {_ggd ,_fff =_ead .ReferenceBitmap .GetByte (_fee );
if _fff !=nil {return _fff ;};_dcb =int (_ggd );};if _fcc >=-1&&_fcc +1< _ead .ReferenceBitmap .Height {_ggd ,_fff =_ead .ReferenceBitmap .GetByte (_fee +_fdf );if _fff !=nil {return _fff ;};_gcc =int (_ggd );};};_fee ++;};}else {_cfbb =int16 (_ebd <<1)&0x07;
_ccg =int16 (_dcb <<1)&0x07;_ega =int16 (_gcc <<1)&0x07;_ebd =0;_dcb =0;_gcc =0;if _gab < _fdf -1{if _fcc >=1&&_fcc -1< _ead .ReferenceBitmap .Height {_ggd ,_fff =_ead .ReferenceBitmap .GetByte (_fee -_fdf );if _fff !=nil {return _fff ;};_ebd =int (_ggd );
};if _fcc >=0&&_fcc < _ead .ReferenceBitmap .Height {_ggd ,_fff =_ead .ReferenceBitmap .GetByte (_fee );if _fff !=nil {return _fff ;};_dcb =int (_ggd );};if _fcc >=-1&&_fcc +1< _ead .ReferenceBitmap .Height {_ggd ,_fff =_ead .ReferenceBitmap .GetByte (_fee +_fdf );
if _fff !=nil {return _fff ;};_gcc =int (_ggd );};_fee ++;};_cfbb |=int16 ((_ebd >>7)&0x07);_ccg |=int16 ((_dcb >>7)&0x07);_ega |=int16 ((_gcc >>7)&0x07);};_aebg =int16 (_cda >>6);_aab =0;_cac :=(2-_cdc )%8;_ebd <<=uint (_cac );_dcb <<=uint (_cac );_gcc <<=uint (_cac );
_cda <<=2;var _gcce int ;for _acb :=0;_acb < _ebe ;_acb ++{_dba :=_acb &0x07;_agb :=_gce .form (_cfbb ,_ccg ,_ega ,_aebg ,_aab );if _ead ._afd {_ggd ,_fff =_ead .RegionBitmap .GetByte (_ead .RegionBitmap .GetByteIndex (_acb ,_cgcf ));if _fff !=nil {return _fff ;
};_ead ._cg .SetIndex (int32 (_ead .overrideAtTemplate0 (int (_agb ),_acb ,_cgcf ,int (_ggd ),_dba )));}else {_ead ._cg .SetIndex (int32 (_agb ));};_gcce ,_fff =_ead ._dcd .DecodeBit (_ead ._cg );if _fff !=nil {return _fff ;};if _fff =_ead .RegionBitmap .SetPixel (_acb ,_cgcf ,byte (_gcce ));
_fff !=nil {return _fff ;};_cfbb =((_cfbb <<1)|0x01&int16 (_ebd >>7))&0x07;_ccg =((_ccg <<1)|0x01&int16 (_dcb >>7))&0x07;_ega =((_ega <<1)|0x01&int16 (_gcc >>7))&0x07;_aebg =((_aebg <<1)|0x01&int16 (_cda >>7))&0x07;_aab =int16 (_gcce );if (_acb -int (_ead .ReferenceDX ))%8==5{_ebd =0;
_dcb =0;_gcc =0;if ((_acb -int (_ead .ReferenceDX ))/8)+1< _ead .ReferenceBitmap .RowStride {if _fcc >=1&&(_fcc -1)< _ead .ReferenceBitmap .Height {_ggd ,_fff =_ead .ReferenceBitmap .GetByte (_fee -_fdf );if _fff !=nil {return _fff ;};_ebd =int (_ggd );
};if _fcc >=0&&_fcc < _ead .ReferenceBitmap .Height {_ggd ,_fff =_ead .ReferenceBitmap .GetByte (_fee );if _fff !=nil {return _fff ;};_dcb =int (_ggd );};if _fcc >=-1&&(_fcc +1)< _ead .ReferenceBitmap .Height {_ggd ,_fff =_ead .ReferenceBitmap .GetByte (_fee +_fdf );
if _fff !=nil {return _fff ;};_gcc =int (_ggd );};};_fee ++;}else {_ebd <<=1;_dcb <<=1;_gcc <<=1;};if _dba ==5&&_cgcf >=1{if ((_acb >>3)+1)>=_ead .RegionBitmap .RowStride {_cda =0;}else {_ggd ,_fff =_ead .RegionBitmap .GetByte (_caa -_adb );if _fff !=nil {return _fff ;
};_cda =int (_ggd );};_caa ++;}else {_cda <<=1;};};return nil ;};func (_dadb *SymbolDictionary )getSymbol (_ggce int )(*_fa .Bitmap ,error ){const _abaf ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_abdd ,_aafd :=_dadb ._agcf .GetBitmap (_dadb ._agcbg [_ggce ]);
if _aafd !=nil {return nil ,_bc .Wrap (_aafd ,_abaf ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _abdd ,nil ;};func (_eefea *GenericRegion )readGBAtPixels (_gfe int )error {const _gbce ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";
_eefea .GBAtX =make ([]int8 ,_gfe );_eefea .GBAtY =make ([]int8 ,_gfe );for _ddb :=0;_ddb < _gfe ;_ddb ++{_fbd ,_eeaf :=_eefea ._aea .ReadByte ();if _eeaf !=nil {return _bc .Wrapf (_eeaf ,_gbce ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_ddb );
};_eefea .GBAtX [_ddb ]=int8 (_fbd );_fbd ,_eeaf =_eefea ._aea .ReadByte ();if _eeaf !=nil {return _bc .Wrapf (_eeaf ,_gbce ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_ddb );};_eefea .GBAtY [_ddb ]=int8 (_fbd );};return nil ;
};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_beda *RegionSegment )Encode (w _ab .BinaryWriter )(_dcaa int ,_eafbf error ){const _fbge ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_dafc :=make ([]byte ,4);_bf .BigEndian .PutUint32 (_dafc ,_beda .BitmapWidth );_dcaa ,_eafbf =w .Write (_dafc );if _eafbf !=nil {return 0,_bc .Wrap (_eafbf ,_fbge ,"\u0057\u0069\u0064t\u0068");};_bf .BigEndian .PutUint32 (_dafc ,_beda .BitmapHeight );
var _cggf int ;_cggf ,_eafbf =w .Write (_dafc );if _eafbf !=nil {return 0,_bc .Wrap (_eafbf ,_fbge ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_dcaa +=_cggf ;_bf .BigEndian .PutUint32 (_dafc ,_beda .XLocation );_cggf ,_eafbf =w .Write (_dafc );if _eafbf !=nil {return 0,_bc .Wrap (_eafbf ,_fbge ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_dcaa +=_cggf ;_bf .BigEndian .PutUint32 (_dafc ,_beda .YLocation );_cggf ,_eafbf =w .Write (_dafc );if _eafbf !=nil {return 0,_bc .Wrap (_eafbf ,_fbge ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_dcaa +=_cggf ;if _eafbf =w .WriteByte (byte (_beda .CombinaionOperator )&0x07);
_eafbf !=nil {return 0,_bc .Wrap (_eafbf ,_fbge ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_dcaa ++;return _dcaa ,nil ;};func (_defb *SymbolDictionary )addSymbol (_efa Regioner )error {_ebgc ,_adac :=_efa .GetRegionBitmap ();
if _adac !=nil {return _adac ;};_defb ._acac [_defb ._cbbe ]=_ebgc ;_defb ._acce =append (_defb ._acce ,_ebgc );_dd .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_ebgc );
return nil ;};func (_ebdag *TextRegion )getUserTable (_eedbb int )(_af .Tabler ,error ){const _eccdb ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _beef int ;for _ ,_aacf :=range _ebdag .Header .RTSegments {if _aacf .Type ==53{if _beef ==_eedbb {_bdfb ,_bggdc :=_aacf .GetSegmentData ();
if _bggdc !=nil {return nil ,_bggdc ;};_acbfa ,_dbec :=_bdfb .(*TableSegment );if !_dbec {_dd .Log .Debug (_fc .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_aacf .SegmentNumber ));
return nil ,_bc .Error (_eccdb ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _af .NewEncodedTable (_acbfa );};_beef ++;};};return nil ,nil ;};func (_gbbc *HalftoneRegion )computeSegmentDataStructure ()error {_gbbc .DataOffset =_gbbc ._fbb .AbsolutePosition ();_gbbc .DataHeaderLength =_gbbc .DataOffset -_gbbc .DataHeaderOffset ;
_gbbc .DataLength =int64 (_gbbc ._fbb .AbsoluteLength ())-_gbbc .DataHeaderLength ;return nil ;};type Type int ;func (_cgdc *RegionSegment )String ()string {_dcbd :=&_be .Builder {};_dcbd .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");
_dcbd .WriteString (_fc .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_cgdc .BitmapWidth ,_cgdc .BitmapHeight ));
_dcbd .WriteString (_fc .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_cgdc .XLocation ,_cgdc .YLocation ));_dcbd .WriteString (_fc .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_cgdc .CombinaionOperator ));
return _dcbd .String ();};func (_gcg *template1 )form (_gabe ,_gbe ,_afb ,_dbe ,_acg int16 )int16 {return ((_gabe &0x02)<<8)|(_gbe <<6)|((_afb &0x03)<<4)|(_dbe <<1)|_acg ;};func (_e *EndOfStripe )LineNumber ()int {return _e ._dc };func (_aaacg *TableSegment )HtLow ()int32 {return _aaacg ._gace };
func (_afac *SymbolDictionary )encodeNumSyms (_adbeg _ab .BinaryWriter )(_gcdf int ,_cfgf error ){const _cecb ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_afag :=make ([]byte ,4);_bf .BigEndian .PutUint32 (_afag ,_afac .NumberOfExportedSymbols );
if _gcdf ,_cfgf =_adbeg .Write (_afag );_cfgf !=nil {return _gcdf ,_bc .Wrap (_cfgf ,_cecb ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_bf .BigEndian .PutUint32 (_afag ,_afac .NumberOfNewSymbols );_aeag ,_cfgf :=_adbeg .Write (_afag );
if _cfgf !=nil {return _gcdf ,_bc .Wrap (_cfgf ,_cecb ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _gcdf +_aeag ,nil ;};func (_gdaec *TextRegion )decodeCurrentT ()(int64 ,error ){if _gdaec .SbStrips !=1{if _gdaec .IsHuffmanEncoded {_bbfe ,_dedg :=_gdaec ._fbea .ReadBits (byte (_gdaec .LogSBStrips ));
return int64 (_bbfe ),_dedg ;};_ffbgd ,_bdbd :=_gdaec ._fceg .DecodeInt (_gdaec ._eefa );if _bdbd !=nil {return 0,_bdbd ;};return int64 (_ffbgd ),nil ;};return 0,nil ;};func (_abg *PageInformationSegment )checkInput ()error {if _abg .PageBMHeight ==_d .MaxInt32 {if !_abg .IsStripe {_dd .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_bbcg *Header )readSegmentDataLength (_cbga *_ab .Reader )(_afbf error ){_bbcg .SegmentDataLength ,_afbf =_cbga .ReadBits (32);if _afbf !=nil {return _afbf ;};_bbcg .SegmentDataLength &=_d .MaxInt32 ;return nil ;};func (_fcee *Header )readNumberOfReferredToSegments (_bacb *_ab .Reader )(uint64 ,error ){const _aabb ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_eafd ,_cffc :=_bacb .ReadBits (3);if _cffc !=nil {return 0,_bc .Wrap (_cffc ,_aabb ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_eafd &=0xf;var _eadca []byte ;if _eafd <=4{_eadca =make ([]byte ,5);for _eee :=0;_eee <=4;_eee ++{_ffg ,_efdab :=_bacb .ReadBit ();
if _efdab !=nil {return 0,_bc .Wrap (_efdab ,_aabb ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_eadca [_eee ]=byte (_ffg );};}else {_eafd ,_cffc =_bacb .ReadBits (29);if _cffc !=nil {return 0,_cffc ;};_eafd &=_d .MaxInt32 ;
_cfeac :=(_eafd +8)>>3;_cfeac <<=3;_eadca =make ([]byte ,_cfeac );var _eabf uint64 ;for _eabf =0;_eabf < _cfeac ;_eabf ++{_daceff ,_cfcee :=_bacb .ReadBit ();if _cfcee !=nil {return 0,_bc .Wrap (_cfcee ,_aabb ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};_eadca [_eabf ]=byte (_daceff );};};return _eafd ,nil ;};func (_adgb *RegionSegment )readCombinationOperator ()error {_agee ,_gffc :=_adgb ._eegb .ReadBits (3);if _gffc !=nil {return _gffc ;};_adgb .CombinaionOperator =_fa .CombinationOperator (_agee &0xF);
return nil ;};func (_bgg *GenericRegion )overrideAtTemplate3 (_afga ,_bga ,_cagd ,_bgcf ,_ddcc int )int {_afga &=0x3EF;if _bgg .GBAtY [0]==0&&_bgg .GBAtX [0]>=-int8 (_ddcc ){_afga |=(_bgcf >>uint (7-(int8 (_ddcc )+_bgg .GBAtX [0]))&0x1)<<4;}else {_afga |=int (_bgg .getPixel (_bga +int (_bgg .GBAtX [0]),_cagd +int (_bgg .GBAtY [0])))<<4;
};return _afga ;};func (_eaba *TextRegion )decodeRI ()(int64 ,error ){if !_eaba .UseRefinement {return 0,nil ;};if _eaba .IsHuffmanEncoded {_aeefc ,_fed :=_eaba ._fbea .ReadBit ();return int64 (_aeefc ),_fed ;};_cdfg ,_bef :=_eaba ._fceg .DecodeInt (_eaba ._fcegg );
return int64 (_cdfg ),_bef ;};func (_eabb *GenericRegion )overrideAtTemplate0a (_gbb ,_dace ,_gacb ,_ebac ,_aae ,_afg int )int {if _eabb .GBAtOverride [0]{_gbb &=0xFFEF;if _eabb .GBAtY [0]==0&&_eabb .GBAtX [0]>=-int8 (_aae ){_gbb |=(_ebac >>uint (int8 (_afg )-_eabb .GBAtX [0]&0x1))<<4;
}else {_gbb |=int (_eabb .getPixel (_dace +int (_eabb .GBAtX [0]),_gacb +int (_eabb .GBAtY [0])))<<4;};};if _eabb .GBAtOverride [1]{_gbb &=0xFBFF;if _eabb .GBAtY [1]==0&&_eabb .GBAtX [1]>=-int8 (_aae ){_gbb |=(_ebac >>uint (int8 (_afg )-_eabb .GBAtX [1]&0x1))<<10;
}else {_gbb |=int (_eabb .getPixel (_dace +int (_eabb .GBAtX [1]),_gacb +int (_eabb .GBAtY [1])))<<10;};};if _eabb .GBAtOverride [2]{_gbb &=0xF7FF;if _eabb .GBAtY [2]==0&&_eabb .GBAtX [2]>=-int8 (_aae ){_gbb |=(_ebac >>uint (int8 (_afg )-_eabb .GBAtX [2]&0x1))<<11;
}else {_gbb |=int (_eabb .getPixel (_dace +int (_eabb .GBAtX [2]),_gacb +int (_eabb .GBAtY [2])))<<11;};};if _eabb .GBAtOverride [3]{_gbb &=0x7FFF;if _eabb .GBAtY [3]==0&&_eabb .GBAtX [3]>=-int8 (_aae ){_gbb |=(_ebac >>uint (int8 (_afg )-_eabb .GBAtX [3]&0x1))<<15;
}else {_gbb |=int (_eabb .getPixel (_dace +int (_eabb .GBAtX [3]),_gacb +int (_eabb .GBAtY [3])))<<15;};};return _gbb ;};func (_eb *GenericRefinementRegion )decodeTypicalPredictedLine (_ba ,_fb ,_cd ,_fgc ,_fdc ,_cc int )error {_ga :=_ba -int (_eb .ReferenceDY );
_ecc :=_eb .ReferenceBitmap .GetByteIndex (0,_ga );_aga :=_eb .RegionBitmap .GetByteIndex (0,_ba );var _fce error ;switch _eb .TemplateID {case 0:_fce =_eb .decodeTypicalPredictedLineTemplate0 (_ba ,_fb ,_cd ,_fgc ,_fdc ,_cc ,_aga ,_ga ,_ecc );case 1:_fce =_eb .decodeTypicalPredictedLineTemplate1 (_ba ,_fb ,_cd ,_fgc ,_fdc ,_cc ,_aga ,_ga ,_ecc );
};return _fce ;};func (_eeda *Header )String ()string {_eggbd :=&_be .Builder {};_eggbd .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_eggbd .WriteString (_fc .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_eeda .SegmentNumber ));
_eggbd .WriteString (_fc .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_eeda .Type ));_eggbd .WriteString (_fc .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_eeda .RetainFlag ));
_eggbd .WriteString (_fc .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_eeda .PageAssociation ));_eggbd .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_eeda .PageAssociationFieldSize ));
_eggbd .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_deg :=range _eeda .RTSNumbers {_eggbd .WriteString (_fc .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_deg ));};_eggbd .WriteString (_fc .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_eeda .HeaderLength ));
_eggbd .WriteString (_fc .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_eeda .SegmentDataLength ));_eggbd .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_eeda .SegmentDataStartOffset ));
return _eggbd .String ();};func (_ccb *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_bad ,_gcf ,_dce ,_bgcg ,_gff ,_gd ,_cfb ,_fef ,_bea int )(_ca error ){var (_cb ,_gfb int ;_eba ,_cbg int ;_gef ,_cca int ;_dgb byte ;);if _bad > 0{_dgb ,_ca =_ccb .RegionBitmap .GetByte (_cfb -_dce );
if _ca !=nil {return _ca ;};_eba =int (_dgb );};if _fef > 0&&_fef <=_ccb .ReferenceBitmap .Height {_dgb ,_ca =_ccb .ReferenceBitmap .GetByte (_bea -_bgcg +_gd );if _ca !=nil {return _ca ;};_cbg =int (_dgb )<<2;};if _fef >=0&&_fef < _ccb .ReferenceBitmap .Height {_dgb ,_ca =_ccb .ReferenceBitmap .GetByte (_bea +_gd );
if _ca !=nil {return _ca ;};_gef =int (_dgb );};if _fef > -2&&_fef < _ccb .ReferenceBitmap .Height -1{_dgb ,_ca =_ccb .ReferenceBitmap .GetByte (_bea +_bgcg +_gd );if _ca !=nil {return _ca ;};_cca =int (_dgb );};_cb =((_eba >>5)&0x6)|((_cca >>2)&0x30)|(_gef &0xc0)|(_cbg &0x200);
_gfb =((_cca >>2)&0x70)|(_gef &0xc0)|(_cbg &0x700);var _ccd int ;for _gfc :=0;_gfc < _gff ;_gfc =_ccd {var (_ffc int ;_fdd int ;);_ccd =_gfc +8;if _ffc =_gcf -_gfc ;_ffc > 8{_ffc =8;};_agd :=_ccd < _gcf ;_fdgg :=_ccd < _ccb .ReferenceBitmap .Width ;_fba :=_gd +1;
if _bad > 0{_dgb =0;if _agd {_dgb ,_ca =_ccb .RegionBitmap .GetByte (_cfb -_dce +1);if _ca !=nil {return _ca ;};};_eba =(_eba <<8)|int (_dgb );};if _fef > 0&&_fef <=_ccb .ReferenceBitmap .Height {var _faa int ;if _fdgg {_dgb ,_ca =_ccb .ReferenceBitmap .GetByte (_bea -_bgcg +_fba );
if _ca !=nil {return _ca ;};_faa =int (_dgb )<<2;};_cbg =(_cbg <<8)|_faa ;};if _fef >=0&&_fef < _ccb .ReferenceBitmap .Height {_dgb =0;if _fdgg {_dgb ,_ca =_ccb .ReferenceBitmap .GetByte (_bea +_fba );if _ca !=nil {return _ca ;};};_gef =(_gef <<8)|int (_dgb );
};if _fef > -2&&_fef < (_ccb .ReferenceBitmap .Height -1){_dgb =0;if _fdgg {_dgb ,_ca =_ccb .ReferenceBitmap .GetByte (_bea +_bgcg +_fba );if _ca !=nil {return _ca ;};};_cca =(_cca <<8)|int (_dgb );};for _dgbe :=0;_dgbe < _ffc ;_dgbe ++{var _fgd int ;_ee :=(_gfb >>4)&0x1ff;
switch _ee {case 0x1ff:_fgd =1;case 0x00:_fgd =0;default:_ccb ._cg .SetIndex (int32 (_cb ));_fgd ,_ca =_ccb ._dcd .DecodeBit (_ccb ._cg );if _ca !=nil {return _ca ;};};_ebg :=uint (7-_dgbe );_fdd |=_fgd <<_ebg ;_cb =((_cb &0x0d6)<<1)|_fgd |(_eba >>_ebg +5)&0x002|((_cca >>_ebg +2)&0x010)|((_gef >>_ebg )&0x040)|((_cbg >>_ebg )&0x200);
_gfb =((_gfb &0xdb)<<1)|((_cca >>_ebg +2)&0x010)|((_gef >>_ebg )&0x080)|((_cbg >>_ebg )&0x400);};_ca =_ccb .RegionBitmap .SetByte (_cfb ,byte (_fdd ));if _ca !=nil {return _ca ;};_cfb ++;_bea ++;};return nil ;};func (_baae *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _baae .IsHuffmanEncoded {switch _baae .SdHuffDecodeWidthSelection {case 0:_dfcg ,_baeca :=_af .GetStandardTable (2);
if _baeca !=nil {return 0,_baeca ;};return _dfcg .Decode (_baae ._fdfag );case 1:_cceg ,_abea :=_af .GetStandardTable (3);if _abea !=nil {return 0,_abea ;};return _cceg .Decode (_baae ._fdfag );case 3:if _baae ._cggb ==nil {var _fcaa int ;if _baae .SdHuffDecodeHeightSelection ==3{_fcaa ++;
};_fdcc ,_dcgc :=_baae .getUserTable (_fcaa );if _dcgc !=nil {return 0,_dcgc ;};_baae ._cggb =_fdcc ;};return _baae ._cggb .Decode (_baae ._fdfag );};}else {_bfdbe ,_gefaad :=_baae ._bbefg .DecodeInt (_baae ._afeb );if _gefaad !=nil {return 0,_gefaad ;
};return int64 (_bfdbe ),nil ;};return 0,nil ;};func (_egaa *SymbolDictionary )decodeAggregate (_ecdf ,_aebf uint32 )error {var (_gffd int64 ;_bbba error ;);if _egaa .IsHuffmanEncoded {_gffd ,_bbba =_egaa .huffDecodeRefAggNInst ();if _bbba !=nil {return _bbba ;
};}else {_dbfd ,_efcd :=_egaa ._bbefg .DecodeInt (_egaa ._fbfaf );if _efcd !=nil {return _efcd ;};_gffd =int64 (_dbfd );};if _gffd > 1{return _egaa .decodeThroughTextRegion (_ecdf ,_aebf ,uint32 (_gffd ));}else if _gffd ==1{return _egaa .decodeRefinedSymbol (_ecdf ,_aebf );
};return nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;
TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;
TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_gegd *HalftoneRegion )grayScaleDecoding (_bbc int )([][]int ,error ){var (_bbeg []int8 ;_caeg []int8 ;);if !_gegd .IsMMREncoded {_bbeg =make ([]int8 ,4);
_caeg =make ([]int8 ,4);if _gegd .HTemplate <=1{_bbeg [0]=3;}else if _gegd .HTemplate >=2{_bbeg [0]=2;};_caeg [0]=-1;_bbeg [1]=-3;_caeg [1]=-1;_bbeg [2]=2;_caeg [2]=-2;_bbeg [3]=-2;_caeg [3]=-2;};_egbg :=make ([]*_fa .Bitmap ,_bbc );_edab :=NewGenericRegion (_gegd ._fbb );
_edab .setParametersMMR (_gegd .IsMMREncoded ,_gegd .DataOffset ,_gegd .DataLength ,_gegd .HGridHeight ,_gegd .HGridWidth ,_gegd .HTemplate ,false ,_gegd .HSkipEnabled ,_bbeg ,_caeg );_edabc :=_bbc -1;var _gfgf error ;_egbg [_edabc ],_gfgf =_edab .GetRegionBitmap ();
if _gfgf !=nil {return nil ,_gfgf ;};for _edabc > 0{_edabc --;_edab .Bitmap =nil ;_egbg [_edabc ],_gfgf =_edab .GetRegionBitmap ();if _gfgf !=nil {return nil ,_gfgf ;};if _gfgf =_gegd .combineGrayscalePlanes (_egbg ,_edabc );_gfgf !=nil {return nil ,_gfgf ;
};};return _gegd .computeGrayScalePlanes (_egbg ,_bbc );};func (_bce *SymbolDictionary )readNumberOfExportedSymbols ()error {_bdc ,_bcca :=_bce ._fdfag .ReadBits (32);if _bcca !=nil {return _bcca ;};_bce .NumberOfExportedSymbols =uint32 (_bdc &_d .MaxUint32 );
return nil ;};func (_fgca *template0 )setIndex (_bfg *_bb .DecoderStats ){_bfg .SetIndex (0x100)};var _ templater =&template1 {};func (_acacb *TextRegion )decodeRdx ()(int64 ,error ){const _egbbg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _acacb .IsHuffmanEncoded {if _acacb .SbHuffRDX ==3{if _acacb ._geafg ==nil {var (_gada int ;
_bada error ;);if _acacb .SbHuffFS ==3{_gada ++;};if _acacb .SbHuffDS ==3{_gada ++;};if _acacb .SbHuffDT ==3{_gada ++;};if _acacb .SbHuffRDWidth ==3{_gada ++;};if _acacb .SbHuffRDHeight ==3{_gada ++;};_acacb ._geafg ,_bada =_acacb .getUserTable (_gada );
if _bada !=nil {return 0,_bc .Wrap (_bada ,_egbbg ,"");};};return _acacb ._geafg .Decode (_acacb ._fbea );};_bdce ,_acgd :=_af .GetStandardTable (14+int (_acacb .SbHuffRDX ));if _acgd !=nil {return 0,_bc .Wrap (_acgd ,_egbbg ,"");};return _bdce .Decode (_acacb ._fbea );
};_cffg ,_edd :=_acacb ._fceg .DecodeInt (_acacb ._abbd );if _edd !=nil {return 0,_bc .Wrap (_edd ,_egbbg ,"");};return int64 (_cffg ),nil ;};func (_abed *Header )GetSegmentData ()(Segmenter ,error ){var _aebd Segmenter ;if _abed .SegmentData !=nil {_aebd =_abed .SegmentData ;
};if _aebd ==nil {_ccfaa ,_eggb :=_eadg [_abed .Type ];if !_eggb {return nil ,_fc .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_abed .Type ,_abed .Type );
};_aebd =_ccfaa ();_dd .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_abed .SegmentNumber ,_abed .SegmentDataStartOffset );
_gacd ,_decf :=_abed .subInputReader ();if _decf !=nil {return nil ,_decf ;};if _fbcd :=_aebd .Init (_abed ,_gacd );_fbcd !=nil {_dd .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_fbcd ,_aebd );
return nil ,_fbcd ;};_abed .SegmentData =_aebd ;};return _aebd ,nil ;};type EndOfStripe struct{_df *_ab .Reader ;_dc int ;};func (_bbbfa *RegionSegment )parseHeader ()error {const _deab ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_dd .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");
defer func (){_dd .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_ccfg ,_egad :=_bbbfa ._eegb .ReadBits (32);
if _egad !=nil {return _bc .Wrap (_egad ,_deab ,"\u0077\u0069\u0064t\u0068");};_bbbfa .BitmapWidth =uint32 (_ccfg &_d .MaxUint32 );_ccfg ,_egad =_bbbfa ._eegb .ReadBits (32);if _egad !=nil {return _bc .Wrap (_egad ,_deab ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_bbbfa .BitmapHeight =uint32 (_ccfg &_d .MaxUint32 );_ccfg ,_egad =_bbbfa ._eegb .ReadBits (32);if _egad !=nil {return _bc .Wrap (_egad ,_deab ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_bbbfa .XLocation =uint32 (_ccfg &_d .MaxUint32 );
_ccfg ,_egad =_bbbfa ._eegb .ReadBits (32);if _egad !=nil {return _bc .Wrap (_egad ,_deab ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_bbbfa .YLocation =uint32 (_ccfg &_d .MaxUint32 );if _ ,_egad =_bbbfa ._eegb .ReadBits (5);_egad !=nil {return _bc .Wrap (_egad ,_deab ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _egad =_bbbfa .readCombinationOperator ();_egad !=nil {return _bc .Wrap (_egad ,_deab ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};type GenericRefinementRegion struct{_dg templater ;
_ded templater ;_aaa *_ab .Reader ;_g *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_fa .Bitmap ;ReferenceBitmap *_fa .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_dcd *_bb .Decoder ;
_cg *_bb .DecoderStats ;_afd bool ;_faf []bool ;};func (_cbbf *PageInformationSegment )Size ()int {return 19};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;
HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader *_ab .Reader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_ffb *PageInformationSegment )readMaxStripeSize ()error {_cfbcef ,_gfbf :=_ffb ._egcc .ReadBits (15);
if _gfbf !=nil {return _gfbf ;};_ffb .MaxStripeSize =uint16 (_cfbcef &_d .MaxUint16 );return nil ;};func (_cbce *TableSegment )StreamReader ()*_ab .Reader {return _cbce ._bbeb };func (_cea *SymbolDictionary )encodeSymbols (_eeb _ab .BinaryWriter )(_bdfg int ,_ebce error ){const _dfgb ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";
_ffac :=_bcc .New ();_ffac .Init ();_fgga ,_ebce :=_cea ._agcf .SelectByIndexes (_cea ._agcbg );if _ebce !=nil {return 0,_bc .Wrap (_ebce ,_dfgb ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_fcbge :=map[*_fa .Bitmap ]int {};for _deac ,_ffe :=range _fgga .Values {_fcbge [_ffe ]=_deac ;
};_fgga .SortByHeight ();var _adf ,_cdbe int ;_egfg ,_ebce :=_fgga .GroupByHeight ();if _ebce !=nil {return 0,_bc .Wrap (_ebce ,_dfgb ,"");};for _ ,_gcadg :=range _egfg .Values {_gbba :=_gcadg .Values [0].Height ;_afcf :=_gbba -_adf ;if _ebce =_ffac .EncodeInteger (_bcc .IADH ,_afcf );
_ebce !=nil {return 0,_bc .Wrapf (_ebce ,_dfgb ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_afcf );};_adf =_gbba ;_ageb ,_dfabd :=_gcadg .GroupByWidth ();if _dfabd !=nil {return 0,_bc .Wrapf (_dfabd ,_dfgb ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_gbba );
};var _eag int ;for _ ,_dfad :=range _ageb .Values {for _ ,_fdcff :=range _dfad .Values {_gfce :=_fdcff .Width ;_eccc :=_gfce -_eag ;if _dfabd =_ffac .EncodeInteger (_bcc .IADW ,_eccc );_dfabd !=nil {return 0,_bc .Wrapf (_dfabd ,_dfgb ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_eccc );
};_eag +=_eccc ;if _dfabd =_ffac .EncodeBitmap (_fdcff ,false );_dfabd !=nil {return 0,_bc .Wrapf (_dfabd ,_dfgb ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_gbba ,_gfce );};_cceb :=_fcbge [_fdcff ];
_cea ._ggfc [_cceb ]=_cdbe ;_cdbe ++;};};if _dfabd =_ffac .EncodeOOB (_bcc .IADW );_dfabd !=nil {return 0,_bc .Wrap (_dfabd ,_dfgb ,"\u0049\u0041\u0044\u0057");};};if _ebce =_ffac .EncodeInteger (_bcc .IAEX ,0);_ebce !=nil {return 0,_bc .Wrap (_ebce ,_dfgb ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _ebce =_ffac .EncodeInteger (_bcc .IAEX ,len (_cea ._agcbg ));_ebce !=nil {return 0,_bc .Wrap (_ebce ,_dfgb ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_ffac .Final ();_caac ,_ebce :=_ffac .WriteTo (_eeb );
if _ebce !=nil {return 0,_bc .Wrap (_ebce ,_dfgb ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};
return int (_caac ),nil ;};func (_fggg *TextRegion )setContexts (_bagba *_bb .DecoderStats ,_feeg *_bb .DecoderStats ,_bdfcc *_bb .DecoderStats ,_begb *_bb .DecoderStats ,_fbgdb *_bb .DecoderStats ,_faabd *_bb .DecoderStats ,_fdccaf *_bb .DecoderStats ,_egcca *_bb .DecoderStats ,_caebd *_bb .DecoderStats ,_dgcd *_bb .DecoderStats ){_fggg ._ebbd =_feeg ;
_fggg ._aace =_bdfcc ;_fggg ._aecf =_begb ;_fggg ._eefa =_fbgdb ;_fggg ._aegg =_fdccaf ;_fggg ._eaeg =_egcca ;_fggg ._aggb =_faabd ;_fggg ._abbd =_caebd ;_fggg ._cgge =_dgcd ;_fggg ._bgfa =_bagba ;};func (_bbee *PatternDictionary )readGrayMax ()error {_fbdf ,_febc :=_bbee ._cagg .ReadBits (32);
if _febc !=nil {return _febc ;};_bbee .GrayMax =uint32 (_fbdf &_d .MaxUint32 );return nil ;};func (_bade *SymbolDictionary )checkInput ()error {if _bade .SdHuffDecodeHeightSelection ==2{_dd .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_bade .SdHuffDecodeHeightSelection );
};if _bade .SdHuffDecodeWidthSelection ==2{_dd .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_bade .SdHuffDecodeWidthSelection );
};if _bade .IsHuffmanEncoded {if _bade .SdTemplate !=0{_dd .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_bade .SdTemplate );
};if !_bade .UseRefinementAggregation {if !_bade .UseRefinementAggregation {if _bade ._caea {_dd .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_bade ._caea =false ;};if _bade ._aagg {_dd .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_bade ._aagg =false ;};};};}else {if _bade .SdHuffBMSizeSelection !=0{_dd .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_bade .SdHuffBMSizeSelection =0;};if _bade .SdHuffDecodeWidthSelection !=0{_dd .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_bade .SdHuffDecodeWidthSelection =0;};if _bade .SdHuffDecodeHeightSelection !=0{_dd .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_bade .SdHuffDecodeHeightSelection =0;};};if !_bade .UseRefinementAggregation {if _bade .SdrTemplate !=0{_dd .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_bade .SdrTemplate );
_bade .SdrTemplate =0;};};if !_bade .IsHuffmanEncoded ||!_bade .UseRefinementAggregation {if _bade .SdHuffAggInstanceSelection {_dd .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_bade .SdHuffAggInstanceSelection );
};};return nil ;};func NewRegionSegment (r *_ab .Reader )*RegionSegment {return &RegionSegment {_eegb :r }};func (_bac *HalftoneRegion )computeY (_adg ,_bace int )int {return _bac .shiftAndFill (int (_bac .HGridY )+_adg *int (_bac .HRegionX )-_bace *int (_bac .HRegionY ));
};func (_dbfc *Header )readHeaderFlags ()error {const _bgd ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_bda ,_ggea :=_dbfc .Reader .ReadBit ();if _ggea !=nil {return _bc .Wrap (_ggea ,_bgd ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");
};if _bda !=0{_dbfc .RetainFlag =true ;};_bda ,_ggea =_dbfc .Reader .ReadBit ();if _ggea !=nil {return _bc .Wrap (_ggea ,_bgd ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _bda !=0{_dbfc .PageAssociationFieldSize =true ;
};_afgac ,_ggea :=_dbfc .Reader .ReadBits (6);if _ggea !=nil {return _bc .Wrap (_ggea ,_bgd ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_dbfc .Type =Type (int (_afgac ));return nil ;};func (_dgca *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_eafe ,_cfgd :=_dgca ._egcc .ReadBit ();
if _cfgd !=nil {return _cfgd ;};if _eafe ==1{_dgca ._ffd =true ;};return nil ;};func (_bfe *EndOfStripe )Init (h *Header ,r *_ab .Reader )error {_bfe ._df =r ;return _bfe .parseHeader ();};func (_ddcca *HalftoneRegion )GetRegionBitmap ()(*_fa .Bitmap ,error ){if _ddcca .HalftoneRegionBitmap !=nil {return _ddcca .HalftoneRegionBitmap ,nil ;
};var _dfbe error ;_ddcca .HalftoneRegionBitmap =_fa .New (int (_ddcca .RegionSegment .BitmapWidth ),int (_ddcca .RegionSegment .BitmapHeight ));if _ddcca .Patterns ==nil ||len (_ddcca .Patterns )==0{_ddcca .Patterns ,_dfbe =_ddcca .GetPatterns ();if _dfbe !=nil {return nil ,_dfbe ;
};};if _ddcca .HDefaultPixel ==1{_ddcca .HalftoneRegionBitmap .SetDefaultPixel ();};_egf :=_d .Ceil (_d .Log (float64 (len (_ddcca .Patterns )))/_d .Log (2));_gcda :=int (_egf );var _adbe [][]int ;_adbe ,_dfbe =_ddcca .grayScaleDecoding (_gcda );if _dfbe !=nil {return nil ,_dfbe ;
};if _dfbe =_ddcca .renderPattern (_adbe );_dfbe !=nil {return nil ,_dfbe ;};return _ddcca .HalftoneRegionBitmap ,nil ;};func (_ebcb *PageInformationSegment )Encode (w _ab .BinaryWriter )(_bfba int ,_aba error ){const _gfdd ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_afaa :=make ([]byte ,4);_bf .BigEndian .PutUint32 (_afaa ,uint32 (_ebcb .PageBMWidth ));_bfba ,_aba =w .Write (_afaa );if _aba !=nil {return _bfba ,_bc .Wrap (_aba ,_gfdd ,"\u0077\u0069\u0064t\u0068");};_bf .BigEndian .PutUint32 (_afaa ,uint32 (_ebcb .PageBMHeight ));
var _fdfa int ;_fdfa ,_aba =w .Write (_afaa );if _aba !=nil {return _fdfa +_bfba ,_bc .Wrap (_aba ,_gfdd ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_bfba +=_fdfa ;_bf .BigEndian .PutUint32 (_afaa ,uint32 (_ebcb .ResolutionX ));_fdfa ,_aba =w .Write (_afaa );
if _aba !=nil {return _fdfa +_bfba ,_bc .Wrap (_aba ,_gfdd ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_bfba +=_fdfa ;_bf .BigEndian .PutUint32 (_afaa ,uint32 (_ebcb .ResolutionY ));if _fdfa ,_aba =w .Write (_afaa );_aba !=nil {return _fdfa +_bfba ,_bc .Wrap (_aba ,_gfdd ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_bfba +=_fdfa ;if _aba =_ebcb .encodeFlags (w );_aba !=nil {return _bfba ,_bc .Wrap (_aba ,_gfdd ,"");};_bfba ++;if _fdfa ,_aba =_ebcb .encodeStripingInformation (w );_aba !=nil {return _bfba ,_bc .Wrap (_aba ,_gfdd ,"");};_bfba +=_fdfa ;return _bfba ,nil ;
};func (_beg *TextRegion )decodeID ()(int64 ,error ){if _beg .IsHuffmanEncoded {if _beg ._ggccg ==nil {_fceeb ,_ggdf :=_beg ._fbea .ReadBits (byte (_beg ._beca ));return int64 (_fceeb ),_ggdf ;};return _beg ._ggccg .Decode (_beg ._fbea );};return _beg ._fceg .DecodeIAID (uint64 (_beg ._beca ),_beg ._aggb );
};func (_eabc *TableSegment )HtHigh ()int32 {return _eabc ._acca };var _ _af .BasicTabler =&TableSegment {};func (_gega *PageInformationSegment )readWidthAndHeight ()error {_dagab ,_cddg :=_gega ._egcc .ReadBits (32);if _cddg !=nil {return _cddg ;};_gega .PageBMWidth =int (_dagab &_d .MaxInt32 );
_dagab ,_cddg =_gega ._egcc .ReadBits (32);if _cddg !=nil {return _cddg ;};_gega .PageBMHeight =int (_dagab &_d .MaxInt32 );return nil ;};func (_cbced *TextRegion )decodeRdh ()(int64 ,error ){const _gdbf ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";
if _cbced .IsHuffmanEncoded {if _cbced .SbHuffRDHeight ==3{if _cbced ._febg ==nil {var (_edgf int ;_efeb error ;);if _cbced .SbHuffFS ==3{_edgf ++;};if _cbced .SbHuffDS ==3{_edgf ++;};if _cbced .SbHuffDT ==3{_edgf ++;};if _cbced .SbHuffRDWidth ==3{_edgf ++;
};_cbced ._febg ,_efeb =_cbced .getUserTable (_edgf );if _efeb !=nil {return 0,_bc .Wrap (_efeb ,_gdbf ,"");};};return _cbced ._febg .Decode (_cbced ._fbea );};_cebgc ,_defbd :=_af .GetStandardTable (14+int (_cbced .SbHuffRDHeight ));if _defbd !=nil {return 0,_bc .Wrap (_defbd ,_gdbf ,"");
};return _cebgc .Decode (_cbced ._fbea );};_fcg ,_gadf :=_cbced ._fceg .DecodeInt (_cbced ._eaeg );if _gadf !=nil {return 0,_bc .Wrap (_gadf ,_gdbf ,"");};return int64 (_fcg ),nil ;};func (_cgec *HalftoneRegion )parseHeader ()error {if _gcaf :=_cgec .RegionSegment .parseHeader ();
_gcaf !=nil {return _gcaf ;};_eafg ,_bagb :=_cgec ._fbb .ReadBit ();if _bagb !=nil {return _bagb ;};_cgec .HDefaultPixel =int8 (_eafg );_deae ,_bagb :=_cgec ._fbb .ReadBits (3);if _bagb !=nil {return _bagb ;};_cgec .CombinationOperator =_fa .CombinationOperator (_deae &0xf);
_eafg ,_bagb =_cgec ._fbb .ReadBit ();if _bagb !=nil {return _bagb ;};if _eafg ==1{_cgec .HSkipEnabled =true ;};_deae ,_bagb =_cgec ._fbb .ReadBits (2);if _bagb !=nil {return _bagb ;};_cgec .HTemplate =byte (_deae &0xf);_eafg ,_bagb =_cgec ._fbb .ReadBit ();
if _bagb !=nil {return _bagb ;};if _eafg ==1{_cgec .IsMMREncoded =true ;};_deae ,_bagb =_cgec ._fbb .ReadBits (32);if _bagb !=nil {return _bagb ;};_cgec .HGridWidth =uint32 (_deae &_d .MaxUint32 );_deae ,_bagb =_cgec ._fbb .ReadBits (32);if _bagb !=nil {return _bagb ;
};_cgec .HGridHeight =uint32 (_deae &_d .MaxUint32 );_deae ,_bagb =_cgec ._fbb .ReadBits (32);if _bagb !=nil {return _bagb ;};_cgec .HGridX =int32 (_deae &_d .MaxInt32 );_deae ,_bagb =_cgec ._fbb .ReadBits (32);if _bagb !=nil {return _bagb ;};_cgec .HGridY =int32 (_deae &_d .MaxInt32 );
_deae ,_bagb =_cgec ._fbb .ReadBits (16);if _bagb !=nil {return _bagb ;};_cgec .HRegionX =uint16 (_deae &_d .MaxUint16 );_deae ,_bagb =_cgec ._fbb .ReadBits (16);if _bagb !=nil {return _bagb ;};_cgec .HRegionY =uint16 (_deae &_d .MaxUint16 );if _bagb =_cgec .computeSegmentDataStructure ();
_bagb !=nil {return _bagb ;};return _cgec .checkInput ();};const (ORandom OrganizationType =iota ;OSequential ;);func (_gdg *Header )referenceSize ()uint {switch {case _gdg .SegmentNumber <=255:return 1;case _gdg .SegmentNumber <=65535:return 2;default:return 4;
};};func (_fab *GenericRefinementRegion )getGrReference ()(*_fa .Bitmap ,error ){segments :=_fab ._g .RTSegments ;if len (segments )==0{return nil ,_bd .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_fag ,_gf :=segments [0].GetSegmentData ();if _gf !=nil {return nil ,_gf ;};_ddd ,_cfe :=_fag .(Regioner );if !_cfe {return nil ,_fc .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_fag );
};return _ddd .GetRegionBitmap ();};func (_fgcf *GenericRefinementRegion )overrideAtTemplate0 (_dfb ,_ddf ,_ce ,_addg ,_fccd int )int {if _fgcf ._faf [0]{_dfb &=0xfff7;if _fgcf .GrAtY [0]==0&&int (_fgcf .GrAtX [0])>=-_fccd {_dfb |=(_addg >>uint (7-(_fccd +int (_fgcf .GrAtX [0])))&0x1)<<3;
}else {_dfb |=_fgcf .getPixel (_fgcf .RegionBitmap ,_ddf +int (_fgcf .GrAtX [0]),_ce +int (_fgcf .GrAtY [0]))<<3;};};if _fgcf ._faf [1]{_dfb &=0xefff;if _fgcf .GrAtY [1]==0&&int (_fgcf .GrAtX [1])>=-_fccd {_dfb |=(_addg >>uint (7-(_fccd +int (_fgcf .GrAtX [1])))&0x1)<<12;
}else {_dfb |=_fgcf .getPixel (_fgcf .ReferenceBitmap ,_ddf +int (_fgcf .GrAtX [1]),_ce +int (_fgcf .GrAtY [1]));};};return _dfb ;};func (_bgce *TextRegion )decodeSymbolInstances ()error {_agbedg ,_aage :=_bgce .decodeStripT ();if _aage !=nil {return _aage ;
};var (_cggfe int64 ;_dggaa uint32 ;);for _dggaa < _bgce .NumberOfSymbolInstances {_eaaf ,_aabg :=_bgce .decodeDT ();if _aabg !=nil {return _aabg ;};_agbedg +=_eaaf ;var _cdcg int64 ;_aafe :=true ;_bgce ._adcg =0;for {if _aafe {_cdcg ,_aabg =_bgce .decodeDfs ();
if _aabg !=nil {return _aabg ;};_cggfe +=_cdcg ;_bgce ._adcg =_cggfe ;_aafe =false ;}else {_ccca ,_defd :=_bgce .decodeIds ();if _bd .Is (_defd ,_abb .ErrOOB ){break ;};if _defd !=nil {return _defd ;};if _dggaa >=_bgce .NumberOfSymbolInstances {break ;
};_bgce ._adcg +=_ccca +int64 (_bgce .SbDsOffset );};_ebca ,_ecff :=_bgce .decodeCurrentT ();if _ecff !=nil {return _ecff ;};_cfd :=_agbedg +_ebca ;_gegac ,_ecff :=_bgce .decodeID ();if _ecff !=nil {return _ecff ;};_bcdg ,_ecff :=_bgce .decodeRI ();if _ecff !=nil {return _ecff ;
};_cbf ,_ecff :=_bgce .decodeIb (_bcdg ,_gegac );if _ecff !=nil {return _ecff ;};if _ecff =_bgce .blit (_cbf ,_cfd );_ecff !=nil {return _ecff ;};_dggaa ++;};};return nil ;};type OrganizationType uint8 ;func NewGenericRegion (r *_ab .Reader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_aea :r };
};type SegmentEncoder interface{Encode (_gba _ab .BinaryWriter )(_efbd int ,_cfbaf error );};func (_cccd *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_fa .Points ,symbols *_fa .Bitmaps ,classIDs *_aa .IntSlice ,boxes *_fa .Boxes ,width ,height ,symBits int ){_cccd .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_cccd ._bfga =globalSymbolsMap ;_cccd ._caec =localSymbolsMap ;_cccd ._egca =comps ;_cccd ._gegb =inLL ;_cccd ._ecbe =symbols ;_cccd ._bffe =classIDs ;_cccd ._fafa =boxes ;_cccd ._cdga =symBits ;};func (_fcbg *PatternDictionary )parseHeader ()error {_dd .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_dd .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_efee :=_fcbg ._cagg .ReadBits (5);if _efee !=nil {return _efee ;};if _efee =_fcbg .readTemplate ();_efee !=nil {return _efee ;};if _efee =_fcbg .readIsMMREncoded ();_efee !=nil {return _efee ;};if _efee =_fcbg .readPatternWidthAndHeight ();_efee !=nil {return _efee ;
};if _efee =_fcbg .readGrayMax ();_efee !=nil {return _efee ;};if _efee =_fcbg .computeSegmentDataStructure ();_efee !=nil {return _efee ;};return _fcbg .checkInput ();};func (_ec *GenericRefinementRegion )decodeOptimized (_bbf ,_cfce ,_dag ,_egb ,_fg ,_aaf ,_fge int )error {var (_fdg error ;
_afdb int ;_ecb int ;);_bed :=_bbf -int (_ec .ReferenceDY );if _dcc :=int (-_ec .ReferenceDX );_dcc > 0{_afdb =_dcc ;};_acc :=_ec .ReferenceBitmap .GetByteIndex (_afdb ,_bed );if _ec .ReferenceDX > 0{_ecb =int (_ec .ReferenceDX );};_ea :=_ec .RegionBitmap .GetByteIndex (_ecb ,_bbf );
switch _ec .TemplateID {case 0:_fdg =_ec .decodeTemplate (_bbf ,_cfce ,_dag ,_egb ,_fg ,_aaf ,_fge ,_ea ,_bed ,_acc ,_ec ._dg );case 1:_fdg =_ec .decodeTemplate (_bbf ,_cfce ,_dag ,_egb ,_fg ,_aaf ,_fge ,_ea ,_bed ,_acc ,_ec ._ded );};return _fdg ;};func (_dbed *GenericRegion )parseHeader ()(_dcec error ){_dd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _dcec !=nil {_dd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_dcec );
}else {_dd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_egbb int ;_ggcd uint64 ;);if _dcec =_dbed .RegionSegment .parseHeader ();_dcec !=nil {return _dcec ;};if _ ,_dcec =_dbed ._aea .ReadBits (3);_dcec !=nil {return _dcec ;};_egbb ,_dcec =_dbed ._aea .ReadBit ();if _dcec !=nil {return _dcec ;};
if _egbb ==1{_dbed .UseExtTemplates =true ;};_egbb ,_dcec =_dbed ._aea .ReadBit ();if _dcec !=nil {return _dcec ;};if _egbb ==1{_dbed .IsTPGDon =true ;};_ggcd ,_dcec =_dbed ._aea .ReadBits (2);if _dcec !=nil {return _dcec ;};_dbed .GBTemplate =byte (_ggcd &0xf);
_egbb ,_dcec =_dbed ._aea .ReadBit ();if _dcec !=nil {return _dcec ;};if _egbb ==1{_dbed .IsMMREncoded =true ;};if !_dbed .IsMMREncoded {_baa :=1;if _dbed .GBTemplate ==0{_baa =4;if _dbed .UseExtTemplates {_baa =12;};};if _dcec =_dbed .readGBAtPixels (_baa );
_dcec !=nil {return _dcec ;};};if _dcec =_dbed .computeSegmentDataStructure ();_dcec !=nil {return _dcec ;};_dd .Log .Trace ("\u0025\u0073",_dbed );return nil ;};func (_bbgc *HalftoneRegion )computeGrayScalePlanes (_ccdb []*_fa .Bitmap ,_acbe int )([][]int ,error ){_fcd :=make ([][]int ,_bbgc .HGridHeight );
for _cae :=0;_cae < len (_fcd );_cae ++{_fcd [_cae ]=make ([]int ,_bbgc .HGridWidth );};for _gfg :=0;_gfg < int (_bbgc .HGridHeight );_gfg ++{for _dfbee :=0;_dfbee < int (_bbgc .HGridWidth );_dfbee +=8{var _gdc int ;if _gbd :=int (_bbgc .HGridWidth )-_dfbee ;
_gbd > 8{_gdc =8;}else {_gdc =_gbd ;};_ddfe :=_ccdb [0].GetByteIndex (_dfbee ,_gfg );for _bebd :=0;_bebd < _gdc ;_bebd ++{_bgee :=_bebd +_dfbee ;_fcd [_gfg ][_bgee ]=0;for _ffaf :=0;_ffaf < _acbe ;_ffaf ++{_daa ,_gefe :=_ccdb [_ffaf ].GetByte (_ddfe );
if _gefe !=nil {return nil ,_gefe ;};_bcf :=_daa >>uint (7-_bgee &7);_baf :=_bcf &1;_ddfbd :=1<<uint (_ffaf );_ccba :=int (_baf )*_ddfbd ;_fcd [_gfg ][_bgee ]+=_ccba ;};};};};return _fcd ,nil ;};func (_agcb *PatternDictionary )readTemplate ()error {_ggec ,_cafg :=_agcb ._cagg .ReadBits (2);
if _cafg !=nil {return _cafg ;};_agcb .HDTemplate =byte (_ggec );return nil ;};func (_efgc *SymbolDictionary )InitEncode (symbols *_fa .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _ege ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_efgc .SdATX =[]int8 {3,-3,2,-2};_efgc .SdATY =[]int8 {-1,-1,-2,-2};_efgc ._agcf =symbols ;_efgc ._agcbg =make ([]int ,len (symbolList ));copy (_efgc ._agcbg ,symbolList );if len (_efgc ._agcbg )!=_efgc ._agcf .Size (){return _bc .Error (_ege ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_efgc .NumberOfNewSymbols =uint32 (symbols .Size ());_efgc .NumberOfExportedSymbols =uint32 (symbols .Size ());_efgc ._ggfc =symbolMap ;_efgc ._acfc =unborderSymbols ;return nil ;};func (_bafe *SymbolDictionary )setInSyms ()error {if _bafe .Header .RTSegments !=nil {return _bafe .retrieveImportSymbols ();
};_bafe ._adde =make ([]*_fa .Bitmap ,0);return nil ;};type TableSegment struct{_bbeb *_ab .Reader ;_deca int32 ;_dee int32 ;_efeg int32 ;_gace int32 ;_acca int32 ;};func (_gbag *PatternDictionary )GetDictionary ()([]*_fa .Bitmap ,error ){if _gbag .Patterns !=nil {return _gbag .Patterns ,nil ;
};if !_gbag .IsMMREncoded {_gbag .setGbAtPixels ();};_edfa :=NewGenericRegion (_gbag ._cagg );_edfa .setParametersMMR (_gbag .IsMMREncoded ,_gbag .DataOffset ,_gbag .DataLength ,uint32 (_gbag .HdpHeight ),(_gbag .GrayMax +1)*uint32 (_gbag .HdpWidth ),_gbag .HDTemplate ,false ,false ,_gbag .GBAtX ,_gbag .GBAtY );
_dagg ,_cfa :=_edfa .GetRegionBitmap ();if _cfa !=nil {return nil ,_cfa ;};if _cfa =_gbag .extractPatterns (_dagg );_cfa !=nil {return nil ,_cfa ;};return _gbag .Patterns ,nil ;};func (_ecgf *TextRegion )decodeDfs ()(int64 ,error ){if _ecgf .IsHuffmanEncoded {if _ecgf .SbHuffFS ==3{if _ecgf ._gfee ==nil {var _bggac error ;
_ecgf ._gfee ,_bggac =_ecgf .getUserTable (0);if _bggac !=nil {return 0,_bggac ;};};return _ecgf ._gfee .Decode (_ecgf ._fbea );};_fgfg ,_ecgc :=_af .GetStandardTable (6+int (_ecgf .SbHuffFS ));if _ecgc !=nil {return 0,_ecgc ;};return _fgfg .Decode (_ecgf ._fbea );
};_eedg ,_gged :=_ecgf ._fceg .DecodeInt (_ecgf ._aace );if _gged !=nil {return 0,_gged ;};return int64 (_eedg ),nil ;};func (_fd *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _fd .RegionInfo };func (_cafc *Header )pageSize ()uint {if _cafc .PageAssociation <=255{return 1;
};return 4;};func (_ffgf *SymbolDictionary )setAtPixels ()error {if _ffgf .IsHuffmanEncoded {return nil ;};_ebgec :=1;if _ffgf .SdTemplate ==0{_ebgec =4;};if _dbbg :=_ffgf .readAtPixels (_ebgec );_dbbg !=nil {return _dbbg ;};return nil ;};func (_aadf *TextRegion )encodeFlags (_ffcc _ab .BinaryWriter )(_ggdfa int ,_cbbdg error ){const _gbcd ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _cbbdg =_ffcc .WriteBit (int (_aadf .SbrTemplate ));_cbbdg !=nil {return _ggdfa ,_bc .Wrap (_cbbdg ,_gbcd ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_cbbdg =_ffcc .WriteBits (uint64 (_aadf .SbDsOffset ),5);_cbbdg !=nil {return _ggdfa ,_bc .Wrap (_cbbdg ,_gbcd ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _cbbdg =_ffcc .WriteBit (int (_aadf .DefaultPixel ));_cbbdg !=nil {return _ggdfa ,_bc .Wrap (_cbbdg ,_gbcd ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_cbbdg =_ffcc .WriteBits (uint64 (_aadf .CombinationOperator ),2);
_cbbdg !=nil {return _ggdfa ,_bc .Wrap (_cbbdg ,_gbcd ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _cbbdg =_ffcc .WriteBit (int (_aadf .IsTransposed ));_cbbdg !=nil {return _ggdfa ,_bc .Wrap (_cbbdg ,_gbcd ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_cbbdg =_ffcc .WriteBits (uint64 (_aadf .ReferenceCorner ),2);_cbbdg !=nil {return _ggdfa ,_bc .Wrap (_cbbdg ,_gbcd ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_cbbdg =_ffcc .WriteBits (uint64 (_aadf .LogSBStrips ),2);
_cbbdg !=nil {return _ggdfa ,_bc .Wrap (_cbbdg ,_gbcd ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _cdeg int ;if _aadf .UseRefinement {_cdeg =1;};if _cbbdg =_ffcc .WriteBit (_cdeg );_cbbdg !=nil {return _ggdfa ,_bc .Wrap (_cbbdg ,_gbcd ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_cdeg =0;if _aadf .IsHuffmanEncoded {_cdeg =1;};if _cbbdg =_ffcc .WriteBit (_cdeg );_cbbdg !=nil {return _ggdfa ,_bc .Wrap (_cbbdg ,_gbcd ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_ggdfa =2;return _ggdfa ,nil ;};func (_bgbg *SymbolDictionary )decodeHeightClassCollectiveBitmap (_cggbg int64 ,_cagcb ,_gbcb uint32 )(*_fa .Bitmap ,error ){if _cggbg ==0{_bbdfa :=_fa .New (int (_gbcb ),int (_cagcb ));
var (_efca byte ;_beed error ;);for _fgea :=0;_fgea < len (_bbdfa .Data );_fgea ++{_efca ,_beed =_bgbg ._fdfag .ReadByte ();if _beed !=nil {return nil ,_beed ;};if _beed =_bbdfa .SetByte (_fgea ,_efca );_beed !=nil {return nil ,_beed ;};};return _bbdfa ,nil ;
};if _bgbg ._ddaf ==nil {_bgbg ._ddaf =NewGenericRegion (_bgbg ._fdfag );};_bgbg ._ddaf .setParameters (true ,_bgbg ._fdfag .AbsolutePosition (),_cggbg ,_cagcb ,_gbcb );_afbd ,_bcb :=_bgbg ._ddaf .GetRegionBitmap ();if _bcb !=nil {return nil ,_bcb ;};return _afbd ,nil ;
};func (_bfb *Header )CleanSegmentData (){if _bfb .SegmentData !=nil {_bfb .SegmentData =nil ;};};func (_efg *PatternDictionary )Init (h *Header ,r *_ab .Reader )error {_efg ._cagg =r ;return _efg .parseHeader ();};func (_badd *TextRegion )setParameters (_acag *_bb .Decoder ,_faed ,_gfaba bool ,_eeafa ,_fcbe uint32 ,_gbdg uint32 ,_ecfb int8 ,_fcegf uint32 ,_beff int8 ,_ggdc _fa .CombinationOperator ,_bdda int8 ,_fabd int16 ,_cagcc ,_dgea ,_fbda ,_bddab ,_cgba ,_bacbd ,_cedd ,_daggd ,_ddeb ,_ffcfc int8 ,_abef ,_degg []int8 ,_ebedg []*_fa .Bitmap ,_egbc int8 ){_badd ._fceg =_acag ;
_badd .IsHuffmanEncoded =_faed ;_badd .UseRefinement =_gfaba ;_badd .RegionInfo .BitmapWidth =_eeafa ;_badd .RegionInfo .BitmapHeight =_fcbe ;_badd .NumberOfSymbolInstances =_gbdg ;_badd .SbStrips =_ecfb ;_badd .NumberOfSymbols =_fcegf ;_badd .DefaultPixel =_beff ;
_badd .CombinationOperator =_ggdc ;_badd .IsTransposed =_bdda ;_badd .ReferenceCorner =_fabd ;_badd .SbDsOffset =_cagcc ;_badd .SbHuffFS =_dgea ;_badd .SbHuffDS =_fbda ;_badd .SbHuffDT =_bddab ;_badd .SbHuffRDWidth =_cgba ;_badd .SbHuffRDHeight =_bacbd ;
_badd .SbHuffRSize =_ddeb ;_badd .SbHuffRDX =_cedd ;_badd .SbHuffRDY =_daggd ;_badd .SbrTemplate =_ffcfc ;_badd .SbrATX =_abef ;_badd .SbrATY =_degg ;_badd .Symbols =_ebedg ;_badd ._beca =_egbc ;};func (_afdg *TextRegion )Init (header *Header ,r *_ab .Reader )error {_afdg .Header =header ;
_afdg ._fbea =r ;_afdg .RegionInfo =NewRegionSegment (_afdg ._fbea );return _afdg .parseHeader ();};func (_gefa *GenericRegion )decodeTemplate1 (_cef ,_debab ,_bgb int ,_cbb ,_dddc int )(_gggb error ){const _cfbc ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_ebda ,_beae int ;_eae ,_bage int ;_bbgb byte ;_afbc ,_ccac int ;);if _cef >=1{_bbgb ,_gggb =_gefa .Bitmap .GetByte (_dddc );if _gggb !=nil {return _bc .Wrap (_gggb ,_cfbc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_eae =int (_bbgb );};if _cef >=2{_bbgb ,_gggb =_gefa .Bitmap .GetByte (_dddc -_gefa .Bitmap .RowStride );
if _gggb !=nil {return _bc .Wrap (_gggb ,_cfbc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_bage =int (_bbgb )<<5;};_ebda =((_eae >>1)&0x1f8)|((_bage >>1)&0x1e00);for _abbb :=0;_abbb < _bgb ;_abbb =_afbc {var (_beb byte ;_gcad int ;);_afbc =_abbb +8;
if _dac :=_debab -_abbb ;_dac > 8{_gcad =8;}else {_gcad =_dac ;};if _cef > 0{_eae <<=8;if _afbc < _debab {_bbgb ,_gggb =_gefa .Bitmap .GetByte (_dddc +1);if _gggb !=nil {return _bc .Wrap (_gggb ,_cfbc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");
};_eae |=int (_bbgb );};};if _cef > 1{_bage <<=8;if _afbc < _debab {_bbgb ,_gggb =_gefa .Bitmap .GetByte (_dddc -_gefa .Bitmap .RowStride +1);if _gggb !=nil {return _bc .Wrap (_gggb ,_cfbc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_bage |=int (_bbgb )<<5;
};};for _gfab :=0;_gfab < _gcad ;_gfab ++{if _gefa ._fabc {_beae =_gefa .overrideAtTemplate1 (_ebda ,_abbb +_gfab ,_cef ,int (_beb ),_gfab );_gefa ._gga .SetIndex (int32 (_beae ));}else {_gefa ._gga .SetIndex (int32 (_ebda ));};_ccac ,_gggb =_gefa ._cce .DecodeBit (_gefa ._gga );
if _gggb !=nil {return _bc .Wrap (_gggb ,_cfbc ,"");};_beb |=byte (_ccac )<<uint (7-_gfab );_gaag :=uint (8-_gfab );_ebda =((_ebda &0xefb)<<1)|_ccac |((_eae >>_gaag )&0x8)|((_bage >>_gaag )&0x200);};if _dbee :=_gefa .Bitmap .SetByte (_cbb ,_beb );_dbee !=nil {return _bc .Wrap (_dbee ,_cfbc ,"");
};_cbb ++;_dddc ++;};return nil ;};func (_ecfg *Header )writeSegmentPageAssociation (_gafg _ab .BinaryWriter )(_dda int ,_gbdaa error ){const _bcab ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _ecfg .pageSize ()!=4{if _gbdaa =_gafg .WriteByte (byte (_ecfg .PageAssociation ));_gbdaa !=nil {return 0,_bc .Wrap (_gbdaa ,_bcab ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_gefaa :=make ([]byte ,4);
_bf .BigEndian .PutUint32 (_gefaa ,uint32 (_ecfg .PageAssociation ));if _dda ,_gbdaa =_gafg .Write (_gefaa );_gbdaa !=nil {return 0,_bc .Wrap (_gbdaa ,_bcab ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};
return _dda ,nil ;};func (_cedcf *TextRegion )readAmountOfSymbolInstances ()error {_fbcaf ,_gbdc :=_cedcf ._fbea .ReadBits (32);if _gbdc !=nil {return _gbdc ;};_cedcf .NumberOfSymbolInstances =uint32 (_fbcaf &_d .MaxUint32 );_efbb :=_cedcf .RegionInfo .BitmapWidth *_cedcf .RegionInfo .BitmapHeight ;
if _efbb < _cedcf .NumberOfSymbolInstances {_dd .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_efbb ,_cedcf .NumberOfSymbolInstances );
_cedcf .NumberOfSymbolInstances =_efbb ;};return nil ;};func (_ecfge *TableSegment )parseHeader ()error {var (_gaaaf int ;_dffc uint64 ;_bbed error ;);_gaaaf ,_bbed =_ecfge ._bbeb .ReadBit ();if _bbed !=nil {return _bbed ;};if _gaaaf ==1{return _fc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_gaaaf );
};if _dffc ,_bbed =_ecfge ._bbeb .ReadBits (3);_bbed !=nil {return _bbed ;};_ecfge ._efeg =(int32 (_dffc )+1)&0xf;if _dffc ,_bbed =_ecfge ._bbeb .ReadBits (3);_bbed !=nil {return _bbed ;};_ecfge ._dee =(int32 (_dffc )+1)&0xf;if _dffc ,_bbed =_ecfge ._bbeb .ReadBits (32);
_bbed !=nil {return _bbed ;};_ecfge ._gace =int32 (_dffc &_d .MaxInt32 );if _dffc ,_bbed =_ecfge ._bbeb .ReadBits (32);_bbed !=nil {return _bbed ;};_ecfge ._acca =int32 (_dffc &_d .MaxInt32 );return nil ;};func (_bcdd *Header )readSegmentNumber (_cfbce *_ab .Reader )error {const _fdfe ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_edbf :=make ([]byte ,4);_ ,_fdad :=_cfbce .Read (_edbf );if _fdad !=nil {return _bc .Wrap (_fdad ,_fdfe ,"");};_bcdd .SegmentNumber =_bf .BigEndian .Uint32 (_edbf );return nil ;};type PageInformationSegment struct{_egcc *_ab .Reader ;PageBMHeight int ;
PageBMWidth int ;ResolutionX int ;ResolutionY int ;_ffd bool ;_dded _fa .CombinationOperator ;_fccc bool ;DefaultPixelValue uint8 ;_bccd bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_ffdb *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _ffdb .SdHuffDecodeHeightSelection {case 0:_gebf ,_aaacb :=_af .GetStandardTable (4);
if _aaacb !=nil {return 0,_aaacb ;};return _gebf .Decode (_ffdb ._fdfag );case 1:_caeb ,_dfaaf :=_af .GetStandardTable (5);if _dfaaf !=nil {return 0,_dfaaf ;};return _caeb .Decode (_ffdb ._fdfag );case 3:if _ffdb ._badf ==nil {_fgfe ,_cccb :=_af .GetStandardTable (0);
if _cccb !=nil {return 0,_cccb ;};_ffdb ._badf =_fgfe ;};return _ffdb ._badf .Decode (_ffdb ._fdfag );};return 0,nil ;};func (_gb *GenericRefinementRegion )Init (header *Header ,r *_ab .Reader )error {_gb ._g =header ;_gb ._aaa =r ;_gb .RegionInfo =NewRegionSegment (r );
return _gb .parseHeader ();};func (_dbce *SymbolDictionary )setSymbolsArray ()error {if _dbce ._adde ==nil {if _gaeb :=_dbce .retrieveImportSymbols ();_gaeb !=nil {return _gaeb ;};};if _dbce ._acce ==nil {_dbce ._acce =append (_dbce ._acce ,_dbce ._adde ...);
};return nil ;};func (_bcfb *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_bcfb .SdHuffAggInstanceSelection {_cedc ,_ffce :=_af .GetStandardTable (1);if _ffce !=nil {return 0,_ffce ;};return _cedc .Decode (_bcfb ._fdfag );};if _bcfb ._fdcb ==nil {var (_cfga int ;
_effb error ;);if _bcfb .SdHuffDecodeHeightSelection ==3{_cfga ++;};if _bcfb .SdHuffDecodeWidthSelection ==3{_cfga ++;};if _bcfb .SdHuffBMSizeSelection ==3{_cfga ++;};_bcfb ._fdcb ,_effb =_bcfb .getUserTable (_cfga );if _effb !=nil {return 0,_effb ;};};
return _bcfb ._fdcb .Decode (_bcfb ._fdfag );};func (_ggeg *SymbolDictionary )String ()string {_dgg :=&_be .Builder {};_dgg .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_dgg .WriteString (_fc .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_ggeg .SdrTemplate ));
_dgg .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_ggeg .SdTemplate ));_dgg .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_ggeg ._caea ));
_dgg .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_ggeg ._aagg ));_dgg .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_ggeg .SdHuffAggInstanceSelection ));
_dgg .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_ggeg .SdHuffBMSizeSelection ));_dgg .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_ggeg .SdHuffDecodeWidthSelection ));
_dgg .WriteString (_fc .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_ggeg .SdHuffDecodeHeightSelection ));_dgg .WriteString (_fc .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_ggeg .UseRefinementAggregation ));
_dgg .WriteString (_fc .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_ggeg .IsHuffmanEncoded ));_dgg .WriteString (_fc .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_ggeg .SdATX ));
_dgg .WriteString (_fc .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_ggeg .SdATY ));_dgg .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_ggeg .SdrATX ));_dgg .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_ggeg .SdrATY ));
_dgg .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_ggeg .NumberOfExportedSymbols ));_dgg .WriteString (_fc .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_ggeg .NumberOfNewSymbols ));
_dgg .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_ggeg ._bggg ));_dgg .WriteString (_fc .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_ggeg ._cbbe ));
return _dgg .String ();};func (_eaga *TableSegment )Init (h *Header ,r *_ab .Reader )error {_eaga ._bbeb =r ;return _eaga .parseHeader ();};type PatternDictionary struct{_cagg *_ab .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;
DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_fa .Bitmap ;GrayMax uint32 ;};func (_gag *GenericRegion )getPixel (_aaff ,_faab int )int8 {if _aaff < 0||_aaff >=_gag .Bitmap .Width {return 0;
};if _faab < 0||_faab >=_gag .Bitmap .Height {return 0;};if _gag .Bitmap .GetPixel (_aaff ,_faab ){return 1;};return 0;};func (_gced *GenericRegion )decodeTemplate0a (_fdae ,_gac ,_ddfb int ,_fbfa ,_ggg int )(_agdb error ){const _acaa ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_gaa ,_ccab int ;_fcea ,_aacb int ;_agc byte ;_dfa int ;);if _fdae >=1{_agc ,_agdb =_gced .Bitmap .GetByte (_ggg );if _agdb !=nil {return _bc .Wrap (_agdb ,_acaa ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_fcea =int (_agc );};if _fdae >=2{_agc ,_agdb =_gced .Bitmap .GetByte (_ggg -_gced .Bitmap .RowStride );
if _agdb !=nil {return _bc .Wrap (_agdb ,_acaa ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_aacb =int (_agc )<<6;};_gaa =(_fcea &0xf0)|(_aacb &0x3800);for _bge :=0;_bge < _ddfb ;_bge =_dfa {var (_bdd byte ;_gde int ;);_dfa =_bge +8;if _acba :=_gac -_bge ;
_acba > 8{_gde =8;}else {_gde =_acba ;};if _fdae > 0{_fcea <<=8;if _dfa < _gac {_agc ,_agdb =_gced .Bitmap .GetByte (_ggg +1);if _agdb !=nil {return _bc .Wrap (_agdb ,_acaa ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_fcea |=int (_agc );};};
if _fdae > 1{_ede :=_ggg -_gced .Bitmap .RowStride +1;_aacb <<=8;if _dfa < _gac {_agc ,_agdb =_gced .Bitmap .GetByte (_ede );if _agdb !=nil {return _bc .Wrap (_agdb ,_acaa ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_aacb |=int (_agc )<<6;}else {_aacb |=0;
};};for _afde :=0;_afde < _gde ;_afde ++{_abe :=uint (7-_afde );if _gced ._fabc {_ccab =_gced .overrideAtTemplate0a (_gaa ,_bge +_afde ,_fdae ,int (_bdd ),_afde ,int (_abe ));_gced ._gga .SetIndex (int32 (_ccab ));}else {_gced ._gga .SetIndex (int32 (_gaa ));
};var _ebdg int ;_ebdg ,_agdb =_gced ._cce .DecodeBit (_gced ._gga );if _agdb !=nil {return _bc .Wrap (_agdb ,_acaa ,"");};_bdd |=byte (_ebdg )<<_abe ;_gaa =((_gaa &0x7bf7)<<1)|_ebdg |((_fcea >>_abe )&0x10)|((_aacb >>_abe )&0x800);};if _eafb :=_gced .Bitmap .SetByte (_fbfa ,_bdd );
_eafb !=nil {return _bc .Wrap (_eafb ,_acaa ,"");};_fbfa ++;_ggg ++;};return nil ;};func (_bgaa *SymbolDictionary )encodeFlags (_ecgd _ab .BinaryWriter )(_fdagf int ,_bcff error ){const _eff ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _bcff =_ecgd .SkipBits (3);_bcff !=nil {return 0,_bc .Wrap (_bcff ,_eff ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _dfdf int ;if _bgaa .SdrTemplate > 0{_dfdf =1;};if _bcff =_ecgd .WriteBit (_dfdf );_bcff !=nil {return _fdagf ,_bc .Wrap (_bcff ,_eff ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_dfdf =0;if _bgaa .SdTemplate > 1{_dfdf =1;};if _bcff =_ecgd .WriteBit (_dfdf );_bcff !=nil {return _fdagf ,_bc .Wrap (_bcff ,_eff ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_dfdf =0;if _bgaa .SdTemplate ==1||_bgaa .SdTemplate ==3{_dfdf =1;
};if _bcff =_ecgd .WriteBit (_dfdf );_bcff !=nil {return _fdagf ,_bc .Wrap (_bcff ,_eff ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_dfdf =0;if _bgaa ._caea {_dfdf =1;};if _bcff =_ecgd .WriteBit (_dfdf );_bcff !=nil {return _fdagf ,_bc .Wrap (_bcff ,_eff ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_dfdf =0;if _bgaa ._aagg {_dfdf =1;};if _bcff =_ecgd .WriteBit (_dfdf );_bcff !=nil {return _fdagf ,_bc .Wrap (_bcff ,_eff ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_dfdf =0;if _bgaa .SdHuffAggInstanceSelection {_dfdf =1;
};if _bcff =_ecgd .WriteBit (_dfdf );_bcff !=nil {return _fdagf ,_bc .Wrap (_bcff ,_eff ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_dfdf =int (_bgaa .SdHuffBMSizeSelection );if _bcff =_ecgd .WriteBit (_dfdf );_bcff !=nil {return _fdagf ,_bc .Wrap (_bcff ,_eff ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");
};_dfdf =0;if _bgaa .SdHuffDecodeWidthSelection > 1{_dfdf =1;};if _bcff =_ecgd .WriteBit (_dfdf );_bcff !=nil {return _fdagf ,_bc .Wrap (_bcff ,_eff ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_dfdf =0;switch _bgaa .SdHuffDecodeWidthSelection {case 1,3:_dfdf =1;
};if _bcff =_ecgd .WriteBit (_dfdf );_bcff !=nil {return _fdagf ,_bc .Wrap (_bcff ,_eff ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_dfdf =0;if _bgaa .SdHuffDecodeHeightSelection > 1{_dfdf =1;};if _bcff =_ecgd .WriteBit (_dfdf );
_bcff !=nil {return _fdagf ,_bc .Wrap (_bcff ,_eff ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_dfdf =0;switch _bgaa .SdHuffDecodeHeightSelection {case 1,3:_dfdf =1;};if _bcff =_ecgd .WriteBit (_dfdf );_bcff !=nil {return _fdagf ,_bc .Wrap (_bcff ,_eff ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");
};_dfdf =0;if _bgaa .UseRefinementAggregation {_dfdf =1;};if _bcff =_ecgd .WriteBit (_dfdf );_bcff !=nil {return _fdagf ,_bc .Wrap (_bcff ,_eff ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_dfdf =0;if _bgaa .IsHuffmanEncoded {_dfdf =1;};if _bcff =_ecgd .WriteBit (_dfdf );
_bcff !=nil {return _fdagf ,_bc .Wrap (_bcff ,_eff ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};type EncodeInitializer interface{InitEncode ();};func (_bdb *GenericRefinementRegion )String ()string {_gbc :=&_be .Builder {};_gbc .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_gbc .WriteString (_bdb .RegionInfo .String ()+"\u000a");_gbc .WriteString (_fc .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_bdb .IsTPGROn ));_gbc .WriteString (_fc .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_bdb .TemplateID ));
_gbc .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_bdb .GrAtX ));_gbc .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_bdb .GrAtY ));
_gbc .WriteString (_fc .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_bdb .ReferenceDX ));_gbc .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_bdb .ReferenceDY ));
return _gbc .String ();};func (_cebg *PageInformationSegment )encodeStripingInformation (_fefc _ab .BinaryWriter )(_dced int ,_ccfaaf error ){const _gfef ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_cebg .IsStripe {if _dced ,_ccfaaf =_fefc .Write ([]byte {0x00,0x00});_ccfaaf !=nil {return 0,_bc .Wrap (_ccfaaf ,_gfef ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _dced ,nil ;};_bccc :=make ([]byte ,2);_bf .BigEndian .PutUint16 (_bccc ,_cebg .MaxStripeSize |1<<15);
if _dced ,_ccfaaf =_fefc .Write (_bccc );_ccfaaf !=nil {return 0,_bc .Wrapf (_ccfaaf ,_gfef ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_cebg .MaxStripeSize );};return _dced ,nil ;};func (_edg *SymbolDictionary )Init (h *Header ,r *_ab .Reader )error {_edg .Header =h ;
_edg ._fdfag =r ;return _edg .parseHeader ();};var _ SegmentEncoder =&GenericRegion {};func (_gaf *GenericRegion )decodeTemplate3 (_ecbf ,_dffb ,_efbf int ,_dcff ,_ecca int )(_fbgde error ){const _afea ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_baec ,_ddcb int ;_feb int ;_dfd byte ;_bffdf ,_fagd int ;);if _ecbf >=1{_dfd ,_fbgde =_gaf .Bitmap .GetByte (_ecca );if _fbgde !=nil {return _bc .Wrap (_fbgde ,_afea ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_feb =int (_dfd );};_baec =(_feb >>1)&0x70;
for _ecga :=0;_ecga < _efbf ;_ecga =_bffdf {var (_cba byte ;_ebed int ;);_bffdf =_ecga +8;if _fgec :=_dffb -_ecga ;_fgec > 8{_ebed =8;}else {_ebed =_fgec ;};if _ecbf >=1{_feb <<=8;if _bffdf < _dffb {_dfd ,_fbgde =_gaf .Bitmap .GetByte (_ecca +1);if _fbgde !=nil {return _bc .Wrap (_fbgde ,_afea ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_feb |=int (_dfd );};};for _cgd :=0;_cgd < _ebed ;_cgd ++{if _gaf ._fabc {_ddcb =_gaf .overrideAtTemplate3 (_baec ,_ecga +_cgd ,_ecbf ,int (_cba ),_cgd );_gaf ._gga .SetIndex (int32 (_ddcb ));}else {_gaf ._gga .SetIndex (int32 (_baec ));};_fagd ,_fbgde =_gaf ._cce .DecodeBit (_gaf ._gga );
if _fbgde !=nil {return _bc .Wrap (_fbgde ,_afea ,"");};_cba |=byte (_fagd )<<byte (7-_cgd );_baec =((_baec &0x1f7)<<1)|_fagd |((_feb >>uint (8-_cgd ))&0x010);};if _ccfa :=_gaf .Bitmap .SetByte (_dcff ,_cba );_ccfa !=nil {return _bc .Wrap (_ccfa ,_afea ,"");
};_dcff ++;_ecca ++;};return nil ;};type SymbolDictionary struct{_fdfag *_ab .Reader ;SdrTemplate int8 ;SdTemplate int8 ;_caea bool ;_aagg bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;
UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_bggg uint32 ;_adde []*_fa .Bitmap ;_cbbe uint32 ;_acac []*_fa .Bitmap ;
_badf _af .Tabler ;_cggb _af .Tabler ;_daaa _af .Tabler ;_fdcb _af .Tabler ;_fbag []*_fa .Bitmap ;_acce []*_fa .Bitmap ;_bbefg *_bb .Decoder ;_cgbg *TextRegion ;_ddaf *GenericRegion ;_aede *GenericRefinementRegion ;_efc *_bb .DecoderStats ;_ffcd *_bb .DecoderStats ;
_afeb *_bb .DecoderStats ;_fbfaf *_bb .DecoderStats ;_gcaa *_bb .DecoderStats ;_cdca *_bb .DecoderStats ;_aaad *_bb .DecoderStats ;_gdcec *_bb .DecoderStats ;_dfbda *_bb .DecoderStats ;_gggbg int8 ;_agcf *_fa .Bitmaps ;_agcbg []int ;_ggfc map[int ]int ;
_acfc bool ;};func (_gefgb *TextRegion )decodeRdw ()(int64 ,error ){const _afbfe ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _gefgb .IsHuffmanEncoded {if _gefgb .SbHuffRDWidth ==3{if _gefgb ._bbde ==nil {var (_eeaa int ;_gbdd error ;);if _gefgb .SbHuffFS ==3{_eeaa ++;
};if _gefgb .SbHuffDS ==3{_eeaa ++;};if _gefgb .SbHuffDT ==3{_eeaa ++;};_gefgb ._bbde ,_gbdd =_gefgb .getUserTable (_eeaa );if _gbdd !=nil {return 0,_bc .Wrap (_gbdd ,_afbfe ,"");};};return _gefgb ._bbde .Decode (_gefgb ._fbea );};_efbff ,_egaaf :=_af .GetStandardTable (14+int (_gefgb .SbHuffRDWidth ));
if _egaaf !=nil {return 0,_bc .Wrap (_egaaf ,_afbfe ,"");};return _efbff .Decode (_gefgb ._fbea );};_cacd ,_gbfc :=_gefgb ._fceg .DecodeInt (_gefgb ._aegg );if _gbfc !=nil {return 0,_bc .Wrap (_gbfc ,_afbfe ,"");};return int64 (_cacd ),nil ;};func (_gdd *TextRegion )encodeSymbols (_caad _ab .BinaryWriter )(_gffce int ,_deaf error ){const _agea ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_aafa :=make ([]byte ,4);_bf .BigEndian .PutUint32 (_aafa ,_gdd .NumberOfSymbols );if _gffce ,_deaf =_caad .Write (_aafa );_deaf !=nil {return _gffce ,_bc .Wrap (_deaf ,_agea ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_fbgf ,_deaf :=_fa .NewClassedPoints (_gdd ._gegb ,_gdd ._egca );if _deaf !=nil {return 0,_bc .Wrap (_deaf ,_agea ,"");};var _gbff ,_fcf int ;_bcfa :=_bcc .New ();_bcfa .Init ();if _deaf =_bcfa .EncodeInteger (_bcc .IADT ,0);_deaf !=nil {return _gffce ,_bc .Wrap (_deaf ,_agea ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_bccg ,_deaf :=_fbgf .GroupByY ();if _deaf !=nil {return 0,_bc .Wrap (_deaf ,_agea ,"");};for _ ,_fdcca :=range _bccg {_aacc :=int (_fdcca .YAtIndex (0));_fgbb :=_aacc -_gbff ;if _deaf =_bcfa .EncodeInteger (_bcc .IADT ,_fgbb );_deaf !=nil {return _gffce ,_bc .Wrap (_deaf ,_agea ,"");
};var _beaca int ;for _ggcdb ,_dcgg :=range _fdcca .IntSlice {switch _ggcdb {case 0:_egfa :=int (_fdcca .XAtIndex (_ggcdb ))-_fcf ;if _deaf =_bcfa .EncodeInteger (_bcc .IAFS ,_egfa );_deaf !=nil {return _gffce ,_bc .Wrap (_deaf ,_agea ,"");};_fcf +=_egfa ;
_beaca =_fcf ;default:_eedb :=int (_fdcca .XAtIndex (_ggcdb ))-_beaca ;if _deaf =_bcfa .EncodeInteger (_bcc .IADS ,_eedb );_deaf !=nil {return _gffce ,_bc .Wrap (_deaf ,_agea ,"");};_beaca +=_eedb ;};_efdbe ,_ffcf :=_gdd ._bffe .Get (_dcgg );if _ffcf !=nil {return _gffce ,_bc .Wrap (_ffcf ,_agea ,"");
};_fgbf ,_aecd :=_gdd ._bfga [_efdbe ];if !_aecd {_fgbf ,_aecd =_gdd ._caec [_efdbe ];if !_aecd {return _gffce ,_bc .Errorf (_agea ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_efdbe );
};};if _ffcf =_bcfa .EncodeIAID (_gdd ._cdga ,_fgbf );_ffcf !=nil {return _gffce ,_bc .Wrap (_ffcf ,_agea ,"");};};if _deaf =_bcfa .EncodeOOB (_bcc .IADS );_deaf !=nil {return _gffce ,_bc .Wrap (_deaf ,_agea ,"");};};_bcfa .Final ();_ecagb ,_deaf :=_bcfa .WriteTo (_caad );
if _deaf !=nil {return _gffce ,_bc .Wrap (_deaf ,_agea ,"");};_gffce +=int (_ecagb );return _gffce ,nil ;};func (_ac *GenericRefinementRegion )decodeSLTP ()(int ,error ){_ac .Template .setIndex (_ac ._cg );return _ac ._dcd .DecodeBit (_ac ._cg );};func (_dfdg *Header )readReferredToSegmentNumbers (_cgbcf *_ab .Reader ,_cdd int )([]int ,error ){const _bfgf ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_gfdg :=make ([]int ,_cdd );if _cdd > 0{_dfdg .RTSegments =make ([]*Header ,_cdd );var (_agg uint64 ;_abec error ;);for _gaef :=0;_gaef < _cdd ;_gaef ++{_agg ,_abec =_cgbcf .ReadBits (byte (_dfdg .referenceSize ())<<3);if _abec !=nil {return nil ,_bc .Wrapf (_abec ,_bfgf ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_gaef );
};_gfdg [_gaef ]=int (_agg &_d .MaxInt32 );};};return _gfdg ,nil ;};func (_fcdd *Header )parse (_ecdc Documenter ,_bdec *_ab .Reader ,_dgbee int64 ,_cfbbg OrganizationType )(_cbda error ){const _ccfd ="\u0070\u0061\u0072s\u0065";_dd .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _cbda !=nil {_dd .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_cbda );}else {_dd .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
};}();_ ,_cbda =_bdec .Seek (_dgbee ,_b .SeekStart );if _cbda !=nil {return _bc .Wrap (_cbda ,_ccfd ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _cbda =_fcdd .readSegmentNumber (_bdec );_cbda !=nil {return _bc .Wrap (_cbda ,_ccfd ,"");
};if _cbda =_fcdd .readHeaderFlags ();_cbda !=nil {return _bc .Wrap (_cbda ,_ccfd ,"");};var _aadc uint64 ;_aadc ,_cbda =_fcdd .readNumberOfReferredToSegments (_bdec );if _cbda !=nil {return _bc .Wrap (_cbda ,_ccfd ,"");};_fcdd .RTSNumbers ,_cbda =_fcdd .readReferredToSegmentNumbers (_bdec ,int (_aadc ));
if _cbda !=nil {return _bc .Wrap (_cbda ,_ccfd ,"");};_cbda =_fcdd .readSegmentPageAssociation (_ecdc ,_bdec ,_aadc ,_fcdd .RTSNumbers ...);if _cbda !=nil {return _bc .Wrap (_cbda ,_ccfd ,"");};if _fcdd .Type !=TEndOfFile {if _cbda =_fcdd .readSegmentDataLength (_bdec );
_cbda !=nil {return _bc .Wrap (_cbda ,_ccfd ,"");};};_fcdd .readDataStartOffset (_bdec ,_cfbbg );_fcdd .readHeaderLength (_bdec ,_dgbee );_dd .Log .Trace ("\u0025\u0073",_fcdd );return nil ;};func (_bbfg *SymbolDictionary )setCodingStatistics ()error {if _bbfg ._gdcec ==nil {_bbfg ._gdcec =_bb .NewStats (512,1);
};if _bbfg ._ffcd ==nil {_bbfg ._ffcd =_bb .NewStats (512,1);};if _bbfg ._afeb ==nil {_bbfg ._afeb =_bb .NewStats (512,1);};if _bbfg ._fbfaf ==nil {_bbfg ._fbfaf =_bb .NewStats (512,1);};if _bbfg ._gcaa ==nil {_bbfg ._gcaa =_bb .NewStats (512,1);};if _bbfg .UseRefinementAggregation &&_bbfg ._dfbda ==nil {_bbfg ._dfbda =_bb .NewStats (1<<uint (_bbfg ._gggbg ),1);
_bbfg ._cdca =_bb .NewStats (512,1);_bbfg ._aaad =_bb .NewStats (512,1);};if _bbfg ._efc ==nil {_bbfg ._efc =_bb .NewStats (65536,1);};if _bbfg ._bbefg ==nil {var _cdff error ;_bbfg ._bbefg ,_cdff =_bb .New (_bbfg ._fdfag );if _cdff !=nil {return _cdff ;
};};return nil ;};func (_ffad *HalftoneRegion )Init (hd *Header ,r *_ab .Reader )error {_ffad ._fbb =r ;_ffad ._gae =hd ;_ffad .RegionSegment =NewRegionSegment (r );return _ffad .parseHeader ();};func (_ccce *PageInformationSegment )String ()string {_cded :=&_be .Builder {};
_cded .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_cded .WriteString (_fc .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_ccce .PageBMHeight ));
_cded .WriteString (_fc .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_ccce .PageBMWidth ));_cded .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_ccce .ResolutionX ));
_cded .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_ccce .ResolutionY ));_cded .WriteString (_fc .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_ccce ._dded ));
_cded .WriteString (_fc .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_ccce ._ffd ));_cded .WriteString (_fc .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_ccce .IsLossless ));
_cded .WriteString (_fc .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_ccce ._fccc ));_cded .WriteString (_fc .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_ccce ._bccd ));
_cded .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_ccce .IsStripe ));_cded .WriteString (_fc .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_ccce .MaxStripeSize ));
return _cded .String ();};func (_bdgd *PatternDictionary )checkInput ()error {if _bdgd .HdpHeight < 1||_bdgd .HdpWidth < 1{return _bd .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _bdgd .IsMMREncoded {if _bdgd .HDTemplate !=0{_dd .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_bba *GenericRegion )setOverrideFlag (_afge int ){_bba .GBAtOverride [_afge ]=true ;_bba ._fabc =true ;};func (_dgbf *SymbolDictionary )getSbSymCodeLen ()int8 {_dfeg :=int8 (_d .Ceil (_d .Log (float64 (_dgbf ._bggg +_dgbf .NumberOfNewSymbols ))/_d .Log (2)));
if _dgbf .IsHuffmanEncoded &&_dfeg < 1{return 1;};return _dfeg ;};func (_ecab *SymbolDictionary )decodeNewSymbols (_cbee ,_ggbf uint32 ,_beab *_fa .Bitmap ,_adcc ,_ddab int32 )error {if _ecab ._aede ==nil {_ecab ._aede =_cff (_ecab ._fdfag ,nil );if _ecab ._bbefg ==nil {var _deaa error ;
_ecab ._bbefg ,_deaa =_bb .New (_ecab ._fdfag );if _deaa !=nil {return _deaa ;};};if _ecab ._efc ==nil {_ecab ._efc =_bb .NewStats (65536,1);};};_ecab ._aede .setParameters (_ecab ._efc ,_ecab ._bbefg ,_ecab .SdrTemplate ,_cbee ,_ggbf ,_beab ,_adcc ,_ddab ,false ,_ecab .SdrATX ,_ecab .SdrATY );
return _ecab .addSymbol (_ecab ._aede );};func (_dafg *SymbolDictionary )decodeHeightClassBitmap (_gadcb *_fa .Bitmap ,_agbe int64 ,_fffd int ,_cbbd []int )error {for _efcg :=_agbe ;_efcg < int64 (_dafg ._cbbe );_efcg ++{var _bdfgf int ;for _cedg :=_agbe ;
_cedg <=_efcg -1;_cedg ++{_bdfgf +=_cbbd [_cedg ];};_afff :=_f .Rect (_bdfgf ,0,_bdfgf +_cbbd [_efcg ],_fffd );_degf ,_caae :=_fa .Extract (_afff ,_gadcb );if _caae !=nil {return _caae ;};_dafg ._acac [_efcg ]=_degf ;_dafg ._acce =append (_dafg ._acce ,_degf );
};return nil ;};func (_gcea *GenericRegion )decodeTemplate0b (_gfa ,_gefd ,_bbec int ,_ebc ,_bgeb int )(_edc error ){const _ecf ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_aef ,_eef int ;_faff ,_def int ;
_ddgf byte ;_gcff int ;);if _gfa >=1{_ddgf ,_edc =_gcea .Bitmap .GetByte (_bgeb );if _edc !=nil {return _bc .Wrap (_edc ,_ecf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_faff =int (_ddgf );};if _gfa >=2{_ddgf ,_edc =_gcea .Bitmap .GetByte (_bgeb -_gcea .Bitmap .RowStride );
if _edc !=nil {return _bc .Wrap (_edc ,_ecf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_def =int (_ddgf )<<6;};_aef =(_faff &0xf0)|(_def &0x3800);for _bfgg :=0;_bfgg < _bbec ;_bfgg =_gcff {var (_aeef byte ;_beac int ;);_gcff =_bfgg +8;if _fbe :=_gefd -_bfgg ;
_fbe > 8{_beac =8;}else {_beac =_fbe ;};if _gfa > 0{_faff <<=8;if _gcff < _gefd {_ddgf ,_edc =_gcea .Bitmap .GetByte (_bgeb +1);if _edc !=nil {return _bc .Wrap (_edc ,_ecf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_faff |=int (_ddgf );};};
if _gfa > 1{_def <<=8;if _gcff < _gefd {_ddgf ,_edc =_gcea .Bitmap .GetByte (_bgeb -_gcea .Bitmap .RowStride +1);if _edc !=nil {return _bc .Wrap (_edc ,_ecf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_def |=int (_ddgf )<<6;};};for _ggb :=0;
_ggb < _beac ;_ggb ++{_bec :=uint (7-_ggb );if _gcea ._fabc {_eef =_gcea .overrideAtTemplate0b (_aef ,_bfgg +_ggb ,_gfa ,int (_aeef ),_ggb ,int (_bec ));_gcea ._gga .SetIndex (int32 (_eef ));}else {_gcea ._gga .SetIndex (int32 (_aef ));};var _fec int ;
_fec ,_edc =_gcea ._cce .DecodeBit (_gcea ._gga );if _edc !=nil {return _bc .Wrap (_edc ,_ecf ,"");};_aeef |=byte (_fec <<_bec );_aef =((_aef &0x7bf7)<<1)|_fec |((_faff >>_bec )&0x10)|((_def >>_bec )&0x800);};if _ecbd :=_gcea .Bitmap .SetByte (_ebc ,_aeef );
_ecbd !=nil {return _bc .Wrap (_ecbd ,_ecf ,"");};_ebc ++;_bgeb ++;};return nil ;};func (_edf *GenericRegion )writeGBAtPixels (_edb _ab .BinaryWriter )(_bdde int ,_fdec error ){const _ggbc ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _edf .UseMMR {return 0,nil ;};_bfec :=1;if _edf .GBTemplate ==0{_bfec =4;}else if _edf .UseExtTemplates {_bfec =12;};if len (_edf .GBAtX )!=_bfec {return 0,_bc .Errorf (_ggbc ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_edf .GBAtY )!=_bfec {return 0,_bc .Errorf (_ggbc ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _agdg :=0;_agdg < _bfec ;_agdg ++{if _fdec =_edb .WriteByte (byte (_edf .GBAtX [_agdg ]));_fdec !=nil {return _bdde ,_bc .Wrap (_fdec ,_ggbc ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_bdde ++;if _fdec =_edb .WriteByte (byte (_edf .GBAtY [_agdg ]));
_fdec !=nil {return _bdde ,_bc .Wrap (_fdec ,_ggbc ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_bdde ++;};return _bdde ,nil ;};func (_eadc *GenericRefinementRegion )setParameters (_ecg *_bb .DecoderStats ,_aee *_bb .Decoder ,_efd int8 ,_aacd ,_bae uint32 ,_fcec *_fa .Bitmap ,_caf ,_ggc int32 ,_bffd bool ,_fdfb []int8 ,_ggde []int8 ){_dd .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _ecg !=nil {_eadc ._cg =_ecg ;};if _aee !=nil {_eadc ._dcd =_aee ;};_eadc .TemplateID =_efd ;_eadc .RegionInfo .BitmapWidth =_aacd ;_eadc .RegionInfo .BitmapHeight =_bae ;_eadc .ReferenceBitmap =_fcec ;_eadc .ReferenceDX =_caf ;_eadc .ReferenceDY =_ggc ;
_eadc .IsTPGROn =_bffd ;_eadc .GrAtX =_fdfb ;_eadc .GrAtY =_ggde ;_eadc .RegionBitmap =nil ;_dd .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_eadc );
};func (_beee *PageInformationSegment )readContainsRefinement ()error {_cga ,_efdf :=_beee ._egcc .ReadBit ();if _efdf !=nil {return _efdf ;};if _cga ==1{_beee ._bccd =true ;};return nil ;};func (_dagc *PageInformationSegment )encodeFlags (_ebfd _ab .BinaryWriter )(_fbeb error ){const _afaf ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _fbeb =_ebfd .SkipBits (1);_fbeb !=nil {return _bc .Wrap (_fbeb ,_afaf ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _fadb int ;if _dagc .CombinationOperatorOverrideAllowed (){_fadb =1;};if _fbeb =_ebfd .WriteBit (_fadb );
_fbeb !=nil {return _bc .Wrap (_fbeb ,_afaf ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_fadb =0;if _dagc ._fccc {_fadb =1;
};if _fbeb =_ebfd .WriteBit (_fadb );_fbeb !=nil {return _bc .Wrap (_fbeb ,_afaf ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _fbeb =_ebfd .WriteBit ((int (_dagc ._dded )>>1)&0x01);
_fbeb !=nil {return _bc .Wrap (_fbeb ,_afaf ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _fbeb =_ebfd .WriteBit (int (_dagc ._dded )&0x01);
_fbeb !=nil {return _bc .Wrap (_fbeb ,_afaf ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_fadb =int (_dagc .DefaultPixelValue );
if _fbeb =_ebfd .WriteBit (_fadb );_fbeb !=nil {return _bc .Wrap (_fbeb ,_afaf ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_fadb =0;if _dagc ._bccd {_fadb =1;
};if _fbeb =_ebfd .WriteBit (_fadb );_fbeb !=nil {return _bc .Wrap (_fbeb ,_afaf ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_fadb =0;if _dagc .IsLossless {_fadb =1;};if _fbeb =_ebfd .WriteBit (_fadb );
_fbeb !=nil {return _bc .Wrap (_fbeb ,_afaf ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_bcgd *SymbolDictionary )readAtPixels (_gfcb int )error {_bcgd .SdATX =make ([]int8 ,_gfcb );
_bcgd .SdATY =make ([]int8 ,_gfcb );var (_dagac byte ;_eggbe error ;);for _dbggb :=0;_dbggb < _gfcb ;_dbggb ++{_dagac ,_eggbe =_bcgd ._fdfag .ReadByte ();if _eggbe !=nil {return _eggbe ;};_bcgd .SdATX [_dbggb ]=int8 (_dagac );_dagac ,_eggbe =_bcgd ._fdfag .ReadByte ();
if _eggbe !=nil {return _eggbe ;};_bcgd .SdATY [_dbggb ]=int8 (_dagac );};return nil ;};func (_bbg *template1 )setIndex (_bcd *_bb .DecoderStats ){_bcd .SetIndex (0x080)};func (_gfeb *Header )writeSegmentNumber (_aaaa _ab .BinaryWriter )(_becg int ,_fabb error ){_bfge :=make ([]byte ,4);
_bf .BigEndian .PutUint32 (_bfge ,_gfeb .SegmentNumber );if _becg ,_fabb =_aaaa .Write (_bfge );_fabb !=nil {return 0,_bc .Wrap (_fabb ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _becg ,nil ;};func (_afgb *TextRegion )GetRegionInfo ()*RegionSegment {return _afgb .RegionInfo };func (_edca *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _edca .IsHuffmanEncoded {return _edca .decodeHeightClassDeltaHeightWithHuffman ();
};_caeaf ,_egbd :=_edca ._bbefg .DecodeInt (_edca ._ffcd );if _egbd !=nil {return 0,_egbd ;};return int64 (_caeaf ),nil ;};func (_dcg *SymbolDictionary )encodeATFlags (_eged _ab .BinaryWriter )(_ecaa int ,_abda error ){const _gfff ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if _dcg .IsHuffmanEncoded ||_dcg .SdTemplate !=0{return 0,nil ;};_cgcg :=4;if _dcg .SdTemplate !=0{_cgcg =1;};for _cbgd :=0;_cbgd < _cgcg ;_cbgd ++{if _abda =_eged .WriteByte (byte (_dcg .SdATX [_cbgd ]));_abda !=nil {return _ecaa ,_bc .Wrapf (_abda ,_gfff ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_cbgd );
};_ecaa ++;if _abda =_eged .WriteByte (byte (_dcg .SdATY [_cbgd ]));_abda !=nil {return _ecaa ,_bc .Wrapf (_abda ,_gfff ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_cbgd );};_ecaa ++;};return _ecaa ,nil ;};func (_dde *HalftoneRegion )combineGrayscalePlanes (_bbbf []*_fa .Bitmap ,_ebae int )error {_fecd :=0;
for _baed :=0;_baed < _bbbf [_ebae ].Height ;_baed ++{for _fdeg :=0;_fdeg < _bbbf [_ebae ].Width ;_fdeg +=8{_egd ,_cgg :=_bbbf [_ebae +1].GetByte (_fecd );if _cgg !=nil {return _cgg ;};_efda ,_cgg :=_bbbf [_ebae ].GetByte (_fecd );if _cgg !=nil {return _cgg ;
};_cgg =_bbbf [_ebae ].SetByte (_fecd ,_fa .CombineBytes (_efda ,_egd ,_fa .CmbOpXor ));if _cgg !=nil {return _cgg ;};_fecd ++;};};return nil ;};func (_dacef *HalftoneRegion )computeX (_ggdeg ,_daf int )int {return _dacef .shiftAndFill (int (_dacef .HGridX )+_ggdeg *int (_dacef .HRegionY )+_daf *int (_dacef .HRegionX ));
};type Regioner interface{GetRegionBitmap ()(*_fa .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_dcbg *GenericRegion )GetRegionBitmap ()(_eea *_fa .Bitmap ,_bbb error ){if _dcbg .Bitmap !=nil {return _dcbg .Bitmap ,nil ;};if _dcbg .IsMMREncoded {if _dcbg ._daga ==nil {_dcbg ._daga ,_bbb =_fca .New (_dcbg ._aea ,int (_dcbg .RegionSegment .BitmapWidth ),int (_dcbg .RegionSegment .BitmapHeight ),_dcbg .DataOffset ,_dcbg .DataLength );
if _bbb !=nil {return nil ,_bbb ;};};_dcbg .Bitmap ,_bbb =_dcbg ._daga .UncompressMMR ();return _dcbg .Bitmap ,_bbb ;};if _bbb =_dcbg .updateOverrideFlags ();_bbb !=nil {return nil ,_bbb ;};var _ebaa int ;if _dcbg ._cce ==nil {_dcbg ._cce ,_bbb =_bb .New (_dcbg ._aea );
if _bbb !=nil {return nil ,_bbb ;};};if _dcbg ._gga ==nil {_dcbg ._gga =_bb .NewStats (65536,1);};_dcbg .Bitmap =_fa .New (int (_dcbg .RegionSegment .BitmapWidth ),int (_dcbg .RegionSegment .BitmapHeight ));_ddg :=int (uint32 (_dcbg .Bitmap .Width +7)&(^uint32 (7)));
for _dea :=0;_dea < _dcbg .Bitmap .Height ;_dea ++{if _dcbg .IsTPGDon {var _egg int ;_egg ,_bbb =_dcbg .decodeSLTP ();if _bbb !=nil {return nil ,_bbb ;};_ebaa ^=_egg ;};if _ebaa ==1{if _dea > 0{if _bbb =_dcbg .copyLineAbove (_dea );_bbb !=nil {return nil ,_bbb ;
};};}else {if _bbb =_dcbg .decodeLine (_dea ,_dcbg .Bitmap .Width ,_ddg );_bbb !=nil {return nil ,_bbb ;};};};return _dcbg .Bitmap ,nil ;};func (_cecfg *SymbolDictionary )parseHeader ()(_dfbg error ){_dd .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _dfbg !=nil {_dd .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_dfbg );
}else {_dd .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _dfbg =_cecfg .readRegionFlags ();_dfbg !=nil {return _dfbg ;};if _dfbg =_cecfg .setAtPixels ();_dfbg !=nil {return _dfbg ;};if _dfbg =_cecfg .setRefinementAtPixels ();_dfbg !=nil {return _dfbg ;};if _dfbg =_cecfg .readNumberOfExportedSymbols ();
_dfbg !=nil {return _dfbg ;};if _dfbg =_cecfg .readNumberOfNewSymbols ();_dfbg !=nil {return _dfbg ;};if _dfbg =_cecfg .setInSyms ();_dfbg !=nil {return _dfbg ;};if _cecfg ._aagg {_agbed :=_cecfg .Header .RTSegments ;for _agbb :=len (_agbed )-1;_agbb >=0;
_agbb --{if _agbed [_agbb ].Type ==0{_bcfga ,_dgbfb :=_agbed [_agbb ].SegmentData .(*SymbolDictionary );if !_dgbfb {_dfbg =_fc .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_agbed [_agbb ]);
return _dfbg ;};if _bcfga ._aagg {_cecfg .setRetainedCodingContexts (_bcfga );};break ;};};};if _dfbg =_cecfg .checkInput ();_dfbg !=nil {return _dfbg ;};return nil ;};func (_cf *GenericRefinementRegion )GetRegionBitmap ()(*_fa .Bitmap ,error ){var _ag error ;
_dd .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _ag !=nil {_dd .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_ag );
}else {_dd .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _cf .RegionBitmap !=nil {return _cf .RegionBitmap ,nil ;};_ge :=0;if _cf .ReferenceBitmap ==nil {_cf .ReferenceBitmap ,_ag =_cf .getGrReference ();if _ag !=nil {return nil ,_ag ;};};if _cf ._dcd ==nil {_cf ._dcd ,_ag =_bb .New (_cf ._aaa );if _ag !=nil {return nil ,_ag ;
};};if _cf ._cg ==nil {_cf ._cg =_bb .NewStats (8192,1);};_cf .RegionBitmap =_fa .New (int (_cf .RegionInfo .BitmapWidth ),int (_cf .RegionInfo .BitmapHeight ));if _cf .TemplateID ==0{if _ag =_cf .updateOverride ();_ag !=nil {return nil ,_ag ;};};_bbe :=(_cf .RegionBitmap .Width +7)&-8;
var _cfc int ;if _cf .IsTPGROn {_cfc =int (-_cf .ReferenceDY )*_cf .ReferenceBitmap .RowStride ;};_aff :=_cfc +1;for _eg :=0;_eg < _cf .RegionBitmap .Height ;_eg ++{if _cf .IsTPGROn {_da ,_cgc :=_cf .decodeSLTP ();if _cgc !=nil {return nil ,_cgc ;};_ge ^=_da ;
};if _ge ==0{_ag =_cf .decodeOptimized (_eg ,_cf .RegionBitmap .Width ,_cf .RegionBitmap .RowStride ,_cf .ReferenceBitmap .RowStride ,_bbe ,_cfc ,_aff );if _ag !=nil {return nil ,_ag ;};}else {_ag =_cf .decodeTypicalPredictedLine (_eg ,_cf .RegionBitmap .Width ,_cf .RegionBitmap .RowStride ,_cf .ReferenceBitmap .RowStride ,_bbe ,_cfc );
if _ag !=nil {return nil ,_ag ;};};};return _cf .RegionBitmap ,nil ;};func (_geag *SymbolDictionary )decodeThroughTextRegion (_ffcb ,_afee ,_bbga uint32 )error {if _geag ._cgbg ==nil {_geag ._cgbg =_ecgdb (_geag ._fdfag ,nil );_geag ._cgbg .setContexts (_geag ._efc ,_bb .NewStats (512,1),_bb .NewStats (512,1),_bb .NewStats (512,1),_bb .NewStats (512,1),_geag ._dfbda ,_bb .NewStats (512,1),_bb .NewStats (512,1),_bb .NewStats (512,1),_bb .NewStats (512,1));
};if _bffc :=_geag .setSymbolsArray ();_bffc !=nil {return _bffc ;};_geag ._cgbg .setParameters (_geag ._bbefg ,_geag .IsHuffmanEncoded ,true ,_ffcb ,_afee ,_bbga ,1,_geag ._bggg +_geag ._cbbe ,0,0,0,1,0,0,0,0,0,0,0,0,0,_geag .SdrTemplate ,_geag .SdrATX ,_geag .SdrATY ,_geag ._acce ,_geag ._gggbg );
return _geag .addSymbol (_geag ._cgbg );};func (_dfaa *Header )writeFlags (_fea _ab .BinaryWriter )(_gda error ){const _eaa ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_ecbdg :=byte (_dfaa .Type );
if _gda =_fea .WriteByte (_ecbdg );_gda !=nil {return _bc .Wrap (_gda ,_eaa ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_dfaa .RetainFlag &&!_dfaa .PageAssociationFieldSize {return nil ;};if _gda =_fea .SkipBits (-8);_gda !=nil {return _bc .Wrap (_gda ,_eaa ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _fgdc int ;if _dfaa .RetainFlag {_fgdc =1;};if _gda =_fea .WriteBit (_fgdc );_gda !=nil {return _bc .Wrap (_gda ,_eaa ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_fgdc =0;if _dfaa .PageAssociationFieldSize {_fgdc =1;
};if _gda =_fea .WriteBit (_fgdc );_gda !=nil {return _bc .Wrap (_gda ,_eaa ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_fea .FinishByte ();return nil ;};func (_bdfc *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _bdfc ._ffd };
func (_bdf *Header )readDataStartOffset (_fad *_ab .Reader ,_gdce OrganizationType ){if _gdce ==OSequential {_bdf .SegmentDataStartOffset =uint64 (_fad .AbsolutePosition ());};};func (_bafgf *PatternDictionary )setGbAtPixels (){if _bafgf .HDTemplate ==0{_bafgf .GBAtX =make ([]int8 ,4);
_bafgf .GBAtY =make ([]int8 ,4);_bafgf .GBAtX [0]=-int8 (_bafgf .HdpWidth );_bafgf .GBAtY [0]=0;_bafgf .GBAtX [1]=-3;_bafgf .GBAtY [1]=-1;_bafgf .GBAtX [2]=2;_bafgf .GBAtY [2]=-2;_bafgf .GBAtX [3]=-2;_bafgf .GBAtY [3]=-2;}else {_bafgf .GBAtX =[]int8 {-int8 (_bafgf .HdpWidth )};
_bafgf .GBAtY =[]int8 {0};};};func (_edfae *TableSegment )HtOOB ()int32 {return _edfae ._deca };func (_faeg *TextRegion )decodeIb (_deabf ,_dgae int64 )(*_fa .Bitmap ,error ){const _bdgge ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_cgdcc error ;
_bdcc *_fa .Bitmap ;);if _deabf ==0{if int (_dgae )> len (_faeg .Symbols )-1{return nil ,_bc .Error (_bdgge ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _faeg .Symbols [int (_dgae )],nil ;};var _effc ,_ddbf ,_edbff ,_bgadbc int64 ;_effc ,_cgdcc =_faeg .decodeRdw ();if _cgdcc !=nil {return nil ,_bc .Wrap (_cgdcc ,_bdgge ,"");};_ddbf ,_cgdcc =_faeg .decodeRdh ();if _cgdcc !=nil {return nil ,_bc .Wrap (_cgdcc ,_bdgge ,"");
};_edbff ,_cgdcc =_faeg .decodeRdx ();if _cgdcc !=nil {return nil ,_bc .Wrap (_cgdcc ,_bdgge ,"");};_bgadbc ,_cgdcc =_faeg .decodeRdy ();if _cgdcc !=nil {return nil ,_bc .Wrap (_cgdcc ,_bdgge ,"");};if _faeg .IsHuffmanEncoded {if _ ,_cgdcc =_faeg .decodeSymInRefSize ();
_cgdcc !=nil {return nil ,_bc .Wrap (_cgdcc ,_bdgge ,"");};_faeg ._fbea .Align ();};_eafdd :=_faeg .Symbols [_dgae ];_edbc :=uint32 (_eafdd .Width );_ebba :=uint32 (_eafdd .Height );_adaf :=int32 (uint32 (_effc )>>1)+int32 (_edbff );_fbdb :=int32 (uint32 (_ddbf )>>1)+int32 (_bgadbc );
if _faeg ._cbae ==nil {_faeg ._cbae =_cff (_faeg ._fbea ,nil );};_faeg ._cbae .setParameters (_faeg ._bgfa ,_faeg ._fceg ,_faeg .SbrTemplate ,_edbc +uint32 (_effc ),_ebba +uint32 (_ddbf ),_eafdd ,_adaf ,_fbdb ,false ,_faeg .SbrATX ,_faeg .SbrATY );_bdcc ,_cgdcc =_faeg ._cbae .GetRegionBitmap ();
if _cgdcc !=nil {return nil ,_bc .Wrap (_cgdcc ,_bdgge ,"\u0067\u0072\u0066");};if _faeg .IsHuffmanEncoded {_faeg ._fbea .Align ();};return _bdcc ,nil ;};func (_acdb *TextRegion )readUseRefinement ()error {if !_acdb .UseRefinement ||_acdb .SbrTemplate !=0{return nil ;
};var (_fdfg byte ;_cbfe error ;);_acdb .SbrATX =make ([]int8 ,2);_acdb .SbrATY =make ([]int8 ,2);_fdfg ,_cbfe =_acdb ._fbea .ReadByte ();if _cbfe !=nil {return _cbfe ;};_acdb .SbrATX [0]=int8 (_fdfg );_fdfg ,_cbfe =_acdb ._fbea .ReadByte ();if _cbfe !=nil {return _cbfe ;
};_acdb .SbrATY [0]=int8 (_fdfg );_fdfg ,_cbfe =_acdb ._fbea .ReadByte ();if _cbfe !=nil {return _cbfe ;};_acdb .SbrATX [1]=int8 (_fdfg );_fdfg ,_cbfe =_acdb ._fbea .ReadByte ();if _cbfe !=nil {return _cbfe ;};_acdb .SbrATY [1]=int8 (_fdfg );return nil ;
};func (_dbbf *SymbolDictionary )setExportedSymbols (_fgfee []int ){for _bgadb :=uint32 (0);_bgadb < _dbbf ._bggg +_dbbf .NumberOfNewSymbols ;_bgadb ++{if _fgfee [_bgadb ]==1{var _gggad *_fa .Bitmap ;if _bgadb < _dbbf ._bggg {_gggad =_dbbf ._adde [_bgadb ];
}else {_gggad =_dbbf ._acac [_bgadb -_dbbf ._bggg ];};_dd .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_gggad );
_dbbf ._fbag =append (_dbbf ._fbag ,_gggad );};};};func (_eeac *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _eeac ._daaa ==nil {var (_fgaf int ;_daba error ;);if _eeac .SdHuffDecodeHeightSelection ==3{_fgaf ++;};if _eeac .SdHuffDecodeWidthSelection ==3{_fgaf ++;
};_eeac ._daaa ,_daba =_eeac .getUserTable (_fgaf );if _daba !=nil {return 0,_daba ;};};return _eeac ._daaa .Decode (_eeac ._fdfag );};func (_ddad *SymbolDictionary )getUserTable (_ddee int )(_af .Tabler ,error ){var _cfgg int ;for _ ,_cfed :=range _ddad .Header .RTSegments {if _cfed .Type ==53{if _cfgg ==_ddee {_aeed ,_cfcg :=_cfed .GetSegmentData ();
if _cfcg !=nil {return nil ,_cfcg ;};_bdea :=_aeed .(_af .BasicTabler );return _af .NewEncodedTable (_bdea );};_cfgg ++;};};return nil ,nil ;};func _cff (_feeb *_ab .Reader ,_gea *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_aaa :_feeb ,RegionInfo :NewRegionSegment (_feeb ),_g :_gea ,_dg :&template0 {},_ded :&template1 {}};
};func (_ceaf *TextRegion )Encode (w _ab .BinaryWriter )(_dafge int ,_ecag error ){const _dcga ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _dafge ,_ecag =_ceaf .RegionInfo .Encode (w );_ecag !=nil {return _dafge ,_bc .Wrap (_ecag ,_dcga ,"");
};var _ebgd int ;if _ebgd ,_ecag =_ceaf .encodeFlags (w );_ecag !=nil {return _dafge ,_bc .Wrap (_ecag ,_dcga ,"");};_dafge +=_ebgd ;if _ebgd ,_ecag =_ceaf .encodeSymbols (w );_ecag !=nil {return _dafge ,_bc .Wrap (_ecag ,_dcga ,"");};_dafge +=_ebgd ;return _dafge ,nil ;
};func (_dagf *TextRegion )readHuffmanFlags ()error {var (_ffeg int ;_eebe uint64 ;_cgfa error ;);_ ,_cgfa =_dagf ._fbea .ReadBit ();if _cgfa !=nil {return _cgfa ;};_ffeg ,_cgfa =_dagf ._fbea .ReadBit ();if _cgfa !=nil {return _cgfa ;};_dagf .SbHuffRSize =int8 (_ffeg );
_eebe ,_cgfa =_dagf ._fbea .ReadBits (2);if _cgfa !=nil {return _cgfa ;};_dagf .SbHuffRDY =int8 (_eebe )&0xf;_eebe ,_cgfa =_dagf ._fbea .ReadBits (2);if _cgfa !=nil {return _cgfa ;};_dagf .SbHuffRDX =int8 (_eebe )&0xf;_eebe ,_cgfa =_dagf ._fbea .ReadBits (2);
if _cgfa !=nil {return _cgfa ;};_dagf .SbHuffRDHeight =int8 (_eebe )&0xf;_eebe ,_cgfa =_dagf ._fbea .ReadBits (2);if _cgfa !=nil {return _cgfa ;};_dagf .SbHuffRDWidth =int8 (_eebe )&0xf;_eebe ,_cgfa =_dagf ._fbea .ReadBits (2);if _cgfa !=nil {return _cgfa ;
};_dagf .SbHuffDT =int8 (_eebe )&0xf;_eebe ,_cgfa =_dagf ._fbea .ReadBits (2);if _cgfa !=nil {return _cgfa ;};_dagf .SbHuffDS =int8 (_eebe )&0xf;_eebe ,_cgfa =_dagf ._fbea .ReadBits (2);if _cgfa !=nil {return _cgfa ;};_dagf .SbHuffFS =int8 (_eebe )&0xf;
return nil ;};func (_egc *GenericRegion )Init (h *Header ,r *_ab .Reader )error {_egc .RegionSegment =NewRegionSegment (r );_egc ._aea =r ;return _egc .parseHeader ();};func (_ceca *HalftoneRegion )GetPatterns ()([]*_fa .Bitmap ,error ){var (_bbgg []*_fa .Bitmap ;
_fbca error ;);for _ ,_gfd :=range _ceca ._gae .RTSegments {var _edcd Segmenter ;_edcd ,_fbca =_gfd .GetSegmentData ();if _fbca !=nil {_dd .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_fbca );
return nil ,_fbca ;};_efe ,_fefe :=_edcd .(*PatternDictionary );if !_fefe {_fbca =_fc .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_edcd );
return nil ,_fbca ;};var _agff []*_fa .Bitmap ;_agff ,_fbca =_efe .GetDictionary ();if _fbca !=nil {_dd .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_fbca );
return nil ,_fbca ;};_bbgg =append (_bbgg ,_agff ...);};return _bbgg ,nil ;};func (_fbg *GenericRegion )InitEncode (bm *_fa .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _dedd ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _bc .Error (_dedd ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _bc .Error (_dedd ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_fbg .Bitmap =bm ;_fbg .GBTemplate =byte (template );switch _fbg .GBTemplate {case 0:_fbg .GBAtX =[]int8 {3,-3,2,-2};_fbg .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_fbg .GBAtX =[]int8 {3};_fbg .GBAtY =[]int8 {-1};case 2,3:_fbg .GBAtX =[]int8 {2};_fbg .GBAtY =[]int8 {-1};
default:return _bc .Errorf (_dedd ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_fbg .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_fbg .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_cagdb *TableSegment )HtPS ()int32 {return _cagdb ._dee };
func (_ggga *SymbolDictionary )readNumberOfNewSymbols ()error {_cgab ,_dgga :=_ggga ._fdfag .ReadBits (32);if _dgga !=nil {return _dgga ;};_ggga .NumberOfNewSymbols =uint32 (_cgab &_d .MaxUint32 );return nil ;};func (_bbdf Type )String ()string {switch _bbdf {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";
case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";
case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";
case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";
case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";
case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_dbdg *SymbolDictionary )readRefinementAtPixels (_gffb int )error {_dbdg .SdrATX =make ([]int8 ,_gffb );
_dbdg .SdrATY =make ([]int8 ,_gffb );var (_ecfgd byte ;_cdgd error ;);for _gbeg :=0;_gbeg < _gffb ;_gbeg ++{_ecfgd ,_cdgd =_dbdg ._fdfag .ReadByte ();if _cdgd !=nil {return _cdgd ;};_dbdg .SdrATX [_gbeg ]=int8 (_ecfgd );_ecfgd ,_cdgd =_dbdg ._fdfag .ReadByte ();
if _cdgd !=nil {return _cdgd ;};_dbdg .SdrATY [_gbeg ]=int8 (_ecfgd );};return nil ;};func (_dbeb *PageInformationSegment )readResolution ()error {_gaaa ,_bbea :=_dbeb ._egcc .ReadBits (32);if _bbea !=nil {return _bbea ;};_dbeb .ResolutionX =int (_gaaa &_d .MaxInt32 );
_gaaa ,_bbea =_dbeb ._egcc .ReadBits (32);if _bbea !=nil {return _bbea ;};_dbeb .ResolutionY =int (_gaaa &_d .MaxInt32 );return nil ;};func (_bbfa *TextRegion )readRegionFlags ()error {var (_fbdbg int ;_aabfa uint64 ;_eedgb error ;);_fbdbg ,_eedgb =_bbfa ._fbea .ReadBit ();
if _eedgb !=nil {return _eedgb ;};_bbfa .SbrTemplate =int8 (_fbdbg );_aabfa ,_eedgb =_bbfa ._fbea .ReadBits (5);if _eedgb !=nil {return _eedgb ;};_bbfa .SbDsOffset =int8 (_aabfa );if _bbfa .SbDsOffset > 0x0f{_bbfa .SbDsOffset -=0x20;};_fbdbg ,_eedgb =_bbfa ._fbea .ReadBit ();
if _eedgb !=nil {return _eedgb ;};_bbfa .DefaultPixel =int8 (_fbdbg );_aabfa ,_eedgb =_bbfa ._fbea .ReadBits (2);if _eedgb !=nil {return _eedgb ;};_bbfa .CombinationOperator =_fa .CombinationOperator (int (_aabfa )&0x3);_fbdbg ,_eedgb =_bbfa ._fbea .ReadBit ();
if _eedgb !=nil {return _eedgb ;};_bbfa .IsTransposed =int8 (_fbdbg );_aabfa ,_eedgb =_bbfa ._fbea .ReadBits (2);if _eedgb !=nil {return _eedgb ;};_bbfa .ReferenceCorner =int16 (_aabfa )&0x3;_aabfa ,_eedgb =_bbfa ._fbea .ReadBits (2);if _eedgb !=nil {return _eedgb ;
};_bbfa .LogSBStrips =int16 (_aabfa )&0x3;_bbfa .SbStrips =1<<uint (_bbfa .LogSBStrips );_fbdbg ,_eedgb =_bbfa ._fbea .ReadBit ();if _eedgb !=nil {return _eedgb ;};if _fbdbg ==1{_bbfa .UseRefinement =true ;};_fbdbg ,_eedgb =_bbfa ._fbea .ReadBit ();if _eedgb !=nil {return _eedgb ;
};if _fbdbg ==1{_bbfa .IsHuffmanEncoded =true ;};return nil ;};func (_eadf *SymbolDictionary )decodeDirectlyThroughGenericRegion (_ffdd ,_gcdg uint32 )error {if _eadf ._ddaf ==nil {_eadf ._ddaf =NewGenericRegion (_eadf ._fdfag );};_eadf ._ddaf .setParametersWithAt (false ,byte (_eadf .SdTemplate ),false ,false ,_eadf .SdATX ,_eadf .SdATY ,_ffdd ,_gcdg ,_eadf ._efc ,_eadf ._bbefg );
return _eadf .addSymbol (_eadf ._ddaf );};func (_ggdda *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _dacee ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _ggdda .SbHuffRSize ==0{_cgecd ,_fcedc :=_af .GetStandardTable (1);
if _fcedc !=nil {return 0,_bc .Wrap (_fcedc ,_dacee ,"");};return _cgecd .Decode (_ggdda ._fbea );};if _ggdda ._dbbd ==nil {var (_eedc int ;_dgcc error ;);if _ggdda .SbHuffFS ==3{_eedc ++;};if _ggdda .SbHuffDS ==3{_eedc ++;};if _ggdda .SbHuffDT ==3{_eedc ++;
};if _ggdda .SbHuffRDWidth ==3{_eedc ++;};if _ggdda .SbHuffRDHeight ==3{_eedc ++;};if _ggdda .SbHuffRDX ==3{_eedc ++;};if _ggdda .SbHuffRDY ==3{_eedc ++;};_ggdda ._dbbd ,_dgcc =_ggdda .getUserTable (_eedc );if _dgcc !=nil {return 0,_bc .Wrap (_dgcc ,_dacee ,"");
};};_dgfg ,_cagb :=_ggdda ._dbbd .Decode (_ggdda ._fbea );if _cagb !=nil {return 0,_bc .Wrap (_cagb ,_dacee ,"");};return _dgfg ,nil ;};func (_edce *HalftoneRegion )checkInput ()error {if _edce .IsMMREncoded {if _edce .HTemplate !=0{_dd .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_edce .HTemplate );
};if _edce .HSkipEnabled {_dd .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_edce .HSkipEnabled );
};};return nil ;};func (_ceb *template0 )form (_dfe ,_deba ,_gcfb ,_badc ,_fbf int16 )int16 {return (_dfe <<10)|(_deba <<7)|(_gcfb <<4)|(_badc <<1)|_fbf ;};func (_gadc *PatternDictionary )computeSegmentDataStructure ()error {_gadc .DataOffset =_gadc ._cagg .AbsolutePosition ();
_gadc .DataHeaderLength =_gadc .DataOffset -_gadc .DataHeaderOffset ;_gadc .DataLength =int64 (_gadc ._cagg .AbsoluteLength ())-_gadc .DataHeaderLength ;return nil ;};type template0 struct{};func (_fcac *GenericRegion )Size ()int {return _fcac .RegionSegment .Size ()+1+2*len (_fcac .GBAtX )};
func (_ggee *PageInformationSegment )CombinationOperator ()_fa .CombinationOperator {return _ggee ._dded ;};func (_bbda *Header )Encode (w _ab .BinaryWriter )(_ade int ,_ccc error ){const _fac ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";
var _bee _ab .BinaryWriter ;_dd .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _ccc !=nil {_dd .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_ccc );
}else {_dd .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_bbda );_dd .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _bbda .SegmentData !=nil {_geab ,_egcb :=_bbda .SegmentData .(SegmentEncoder );if !_egcb {return 0,_bc .Errorf (_fac ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_bbda .SegmentData );
};_bee =_ab .BufferedMSB ();_ade ,_ccc =_geab .Encode (_bee );if _ccc !=nil {return 0,_bc .Wrap (_ccc ,_fac ,"");};_bbda .SegmentDataLength =uint64 (_ade );};if _bbda .pageSize ()==4{_bbda .PageAssociationFieldSize =true ;};var _addb int ;_addb ,_ccc =_bbda .writeSegmentNumber (w );
if _ccc !=nil {return 0,_bc .Wrap (_ccc ,_fac ,"");};_ade +=_addb ;if _ccc =_bbda .writeFlags (w );_ccc !=nil {return _ade ,_bc .Wrap (_ccc ,_fac ,"");};_ade ++;_addb ,_ccc =_bbda .writeReferredToCount (w );if _ccc !=nil {return 0,_bc .Wrap (_ccc ,_fac ,"");
};_ade +=_addb ;_addb ,_ccc =_bbda .writeReferredToSegments (w );if _ccc !=nil {return 0,_bc .Wrap (_ccc ,_fac ,"");};_ade +=_addb ;_addb ,_ccc =_bbda .writeSegmentPageAssociation (w );if _ccc !=nil {return 0,_bc .Wrap (_ccc ,_fac ,"");};_ade +=_addb ;
_addb ,_ccc =_bbda .writeSegmentDataLength (w );if _ccc !=nil {return 0,_bc .Wrap (_ccc ,_fac ,"");};_ade +=_addb ;_bbda .HeaderLength =int64 (_ade )-int64 (_bbda .SegmentDataLength );if _bee !=nil {if _ ,_ccc =w .Write (_bee .Data ());_ccc !=nil {return _ade ,_bc .Wrap (_ccc ,_fac ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _ade ,nil ;};func (_eaea *PatternDictionary )readPatternWidthAndHeight ()error {_caaf ,_geee :=_eaea ._cagg .ReadByte ();if _geee !=nil {return _geee ;};_eaea .HdpWidth =_caaf ;_caaf ,_geee =_eaea ._cagg .ReadByte ();if _geee !=nil {return _geee ;
};_eaea .HdpHeight =_caaf ;return nil ;};func (_ddag *TextRegion )blit (_ffef *_fa .Bitmap ,_ggbd int64 )error {if _ddag .IsTransposed ==0&&(_ddag .ReferenceCorner ==2||_ddag .ReferenceCorner ==3){_ddag ._adcg +=int64 (_ffef .Width -1);}else if _ddag .IsTransposed ==1&&(_ddag .ReferenceCorner ==0||_ddag .ReferenceCorner ==2){_ddag ._adcg +=int64 (_ffef .Height -1);
};_baad :=_ddag ._adcg ;if _ddag .IsTransposed ==1{_baad ,_ggbd =_ggbd ,_baad ;};switch _ddag .ReferenceCorner {case 0:_ggbd -=int64 (_ffef .Height -1);case 2:_ggbd -=int64 (_ffef .Height -1);_baad -=int64 (_ffef .Width -1);case 3:_baad -=int64 (_ffef .Width -1);
};_dcgf :=_fa .Blit (_ffef ,_ddag .RegionBitmap ,int (_baad ),int (_ggbd ),_ddag .CombinationOperator );if _dcgf !=nil {return _dcgf ;};if _ddag .IsTransposed ==0&&(_ddag .ReferenceCorner ==0||_ddag .ReferenceCorner ==1){_ddag ._adcg +=int64 (_ffef .Width -1);
};if _ddag .IsTransposed ==1&&(_ddag .ReferenceCorner ==1||_ddag .ReferenceCorner ==3){_ddag ._adcg +=int64 (_ffef .Height -1);};return nil ;};func (_cdag *TextRegion )computeSymbolCodeLength ()error {if _cdag .IsHuffmanEncoded {return _cdag .symbolIDCodeLengths ();
};_cdag ._beca =int8 (_d .Ceil (_d .Log (float64 (_cdag .NumberOfSymbols ))/_d .Log (2)));return nil ;};type GenericRegion struct{_aea *_ab .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;
UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_fabc bool ;Bitmap *_fa .Bitmap ;_cce *_bb .Decoder ;_gga *_bb .DecoderStats ;_daga *_fca .Decoder ;};func (_cgee *PageInformationSegment )readIsStriped ()error {_dabc ,_dfbd :=_cgee ._egcc .ReadBit ();
if _dfbd !=nil {return _dfbd ;};if _dabc ==1{_cgee .IsStripe =true ;};return nil ;};func (_deeb *TextRegion )setCodingStatistics ()error {if _deeb ._ebbd ==nil {_deeb ._ebbd =_bb .NewStats (512,1);};if _deeb ._aace ==nil {_deeb ._aace =_bb .NewStats (512,1);
};if _deeb ._aecf ==nil {_deeb ._aecf =_bb .NewStats (512,1);};if _deeb ._eefa ==nil {_deeb ._eefa =_bb .NewStats (512,1);};if _deeb ._fcegg ==nil {_deeb ._fcegg =_bb .NewStats (512,1);};if _deeb ._aegg ==nil {_deeb ._aegg =_bb .NewStats (512,1);};if _deeb ._eaeg ==nil {_deeb ._eaeg =_bb .NewStats (512,1);
};if _deeb ._aggb ==nil {_deeb ._aggb =_bb .NewStats (1<<uint (_deeb ._beca ),1);};if _deeb ._abbd ==nil {_deeb ._abbd =_bb .NewStats (512,1);};if _deeb ._cgge ==nil {_deeb ._cgge =_bb .NewStats (512,1);};if _deeb ._fceg ==nil {var _agcg error ;_deeb ._fceg ,_agcg =_bb .New (_deeb ._fbea );
if _agcg !=nil {return _agcg ;};};return nil ;};type Segmenter interface{Init (_gdgc *Header ,_fabg *_ab .Reader )error ;};func (_cecf *PageInformationSegment )readCombinationOperator ()error {_gcdb ,_gec :=_cecf ._egcc .ReadBits (2);if _gec !=nil {return _gec ;
};_cecf ._dded =_fa .CombinationOperator (int (_gcdb ));return nil ;};func (_bffa *PatternDictionary )extractPatterns (_efdag *_fa .Bitmap )error {var _ddfa int ;_aafb :=make ([]*_fa .Bitmap ,_bffa .GrayMax +1);for _ddfa <=int (_bffa .GrayMax ){_ggdd :=int (_bffa .HdpWidth )*_ddfa ;
_aegc :=_f .Rect (_ggdd ,0,_ggdd +int (_bffa .HdpWidth ),int (_bffa .HdpHeight ));_egae ,_ddde :=_fa .Extract (_aegc ,_efdag );if _ddde !=nil {return _ddde ;};_aafb [_ddfa ]=_egae ;_ddfa ++;};_bffa .Patterns =_aafb ;return nil ;};var (_ Regioner =&TextRegion {};
_ Segmenter =&TextRegion {};);type HalftoneRegion struct{_fbb *_ab .Reader ;_gae *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _fa .CombinationOperator ;
HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_fa .Bitmap ;Patterns []*_fa .Bitmap ;};func (_egfgg *TextRegion )decodeRdy ()(int64 ,error ){const _ebea ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";
if _egfgg .IsHuffmanEncoded {if _egfgg .SbHuffRDY ==3{if _egfgg ._bded ==nil {var (_ebead int ;_gadb error ;);if _egfgg .SbHuffFS ==3{_ebead ++;};if _egfgg .SbHuffDS ==3{_ebead ++;};if _egfgg .SbHuffDT ==3{_ebead ++;};if _egfgg .SbHuffRDWidth ==3{_ebead ++;
};if _egfgg .SbHuffRDHeight ==3{_ebead ++;};if _egfgg .SbHuffRDX ==3{_ebead ++;};_egfgg ._bded ,_gadb =_egfgg .getUserTable (_ebead );if _gadb !=nil {return 0,_bc .Wrap (_gadb ,_ebea ,"");};};return _egfgg ._bded .Decode (_egfgg ._fbea );};_bdga ,_aega :=_af .GetStandardTable (14+int (_egfgg .SbHuffRDY ));
if _aega !=nil {return 0,_aega ;};return _bdga .Decode (_egfgg ._fbea );};_fcgb ,_cead :=_egfgg ._fceg .DecodeInt (_egfgg ._cgge );if _cead !=nil {return 0,_bc .Wrap (_cead ,_ebea ,"");};return int64 (_fcgb ),nil ;};func (_eeaea *SymbolDictionary )setRefinementAtPixels ()error {if !_eeaea .UseRefinementAggregation ||_eeaea .SdrTemplate !=0{return nil ;
};if _dcaf :=_eeaea .readRefinementAtPixels (2);_dcaf !=nil {return _dcaf ;};return nil ;};func (_ebge *GenericRegion )GetRegionInfo ()*RegionSegment {return _ebge .RegionSegment };func (_bafg *HalftoneRegion )renderPattern (_ebcf [][]int )(_caee error ){var _ggab ,_gee int ;
for _aegba :=0;_aegba < int (_bafg .HGridHeight );_aegba ++{for _dagb :=0;_dagb < int (_bafg .HGridWidth );_dagb ++{_ggab =_bafg .computeX (_aegba ,_dagb );_gee =_bafg .computeY (_aegba ,_dagb );_edec :=_bafg .Patterns [_ebcf [_aegba ][_dagb ]];if _caee =_fa .Blit (_edec ,_bafg .HalftoneRegionBitmap ,_ggab +int (_bafg .HGridX ),_gee +int (_bafg .HGridY ),_bafg .CombinationOperator );
_caee !=nil {return _caee ;};};};return nil ;};func (_gbdb *TextRegion )decodeIds ()(int64 ,error ){const _acfe ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _gbdb .IsHuffmanEncoded {if _gbdb .SbHuffDS ==3{if _gbdb ._aeff ==nil {_eabg :=0;if _gbdb .SbHuffFS ==3{_eabg ++;
};var _febd error ;_gbdb ._aeff ,_febd =_gbdb .getUserTable (_eabg );if _febd !=nil {return 0,_bc .Wrap (_febd ,_acfe ,"");};};return _gbdb ._aeff .Decode (_gbdb ._fbea );};_ceba ,_dbad :=_af .GetStandardTable (8+int (_gbdb .SbHuffDS ));if _dbad !=nil {return 0,_bc .Wrap (_dbad ,_acfe ,"");
};return _ceba .Decode (_gbdb ._fbea );};_bbcab ,_fgba :=_gbdb ._fceg .DecodeInt (_gbdb ._aecf );if _fgba !=nil {return 0,_bc .Wrap (_fgba ,_acfe ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_bbcab ),nil ;};func (_bdg *EndOfStripe )parseHeader ()error {_ef ,_de :=_bdg ._df .ReadBits (32);
if _de !=nil {return _de ;};_bdg ._dc =int (_ef &_d .MaxInt32 );return nil ;};func (_gdee *TextRegion )symbolIDCodeLengths ()error {var (_eaeb []*_af .Code ;_adef uint64 ;_dbab _af .Tabler ;_becf error ;);for _faae :=0;_faae < 35;_faae ++{_adef ,_becf =_gdee ._fbea .ReadBits (4);
if _becf !=nil {return _becf ;};_fffe :=int (_adef &0xf);if _fffe > 0{_eaeb =append (_eaeb ,_af .NewCode (int32 (_fffe ),0,int32 (_faae ),false ));};};_dbab ,_becf =_af .NewFixedSizeTable (_eaeb );if _becf !=nil {return _becf ;};var (_cffab int64 ;_ffbc uint32 ;
_befc []*_af .Code ;_abcd int64 ;);for _ffbc < _gdee .NumberOfSymbols {_abcd ,_becf =_dbab .Decode (_gdee ._fbea );if _becf !=nil {return _becf ;};if _abcd < 32{if _abcd > 0{_befc =append (_befc ,_af .NewCode (int32 (_abcd ),0,int32 (_ffbc ),false ));};
_cffab =_abcd ;_ffbc ++;}else {var _dgdc ,_defdc int64 ;switch _abcd {case 32:_adef ,_becf =_gdee ._fbea .ReadBits (2);if _becf !=nil {return _becf ;};_dgdc =3+int64 (_adef );if _ffbc > 0{_defdc =_cffab ;};case 33:_adef ,_becf =_gdee ._fbea .ReadBits (3);
if _becf !=nil {return _becf ;};_dgdc =3+int64 (_adef );case 34:_adef ,_becf =_gdee ._fbea .ReadBits (7);if _becf !=nil {return _becf ;};_dgdc =11+int64 (_adef );};for _fbbc :=0;_fbbc < int (_dgdc );_fbbc ++{if _defdc > 0{_befc =append (_befc ,_af .NewCode (int32 (_defdc ),0,int32 (_ffbc ),false ));
};_ffbc ++;};};};_gdee ._fbea .Align ();_gdee ._ggccg ,_becf =_af .NewFixedSizeTable (_befc );return _becf ;};func (_ffadb *Header )subInputReader ()(*_ab .Reader ,error ){_aabbc :=int (_ffadb .SegmentDataLength );if _ffadb .SegmentDataLength ==_d .MaxInt32 {_aabbc =-1;
};return _ffadb .Reader .NewPartialReader (int (_ffadb .SegmentDataStartOffset ),_aabbc ,false );};func (_gbgg *SymbolDictionary )Encode (w _ab .BinaryWriter )(_acfca int ,_gacc error ){const _defa ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _gbgg ==nil {return 0,_bc .Error (_defa ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _acfca ,_gacc =_gbgg .encodeFlags (w );_gacc !=nil {return _acfca ,_bc .Wrap (_gacc ,_defa ,"");
};_fdcf ,_gacc :=_gbgg .encodeATFlags (w );if _gacc !=nil {return _acfca ,_bc .Wrap (_gacc ,_defa ,"");};_acfca +=_fdcf ;if _fdcf ,_gacc =_gbgg .encodeRefinementATFlags (w );_gacc !=nil {return _acfca ,_bc .Wrap (_gacc ,_defa ,"");};_acfca +=_fdcf ;if _fdcf ,_gacc =_gbgg .encodeNumSyms (w );
_gacc !=nil {return _acfca ,_bc .Wrap (_gacc ,_defa ,"");};_acfca +=_fdcf ;if _fdcf ,_gacc =_gbgg .encodeSymbols (w );_gacc !=nil {return _acfca ,_bc .Wrap (_gacc ,_defa ,"");};_acfca +=_fdcf ;return _acfca ,nil ;};func (_deda *GenericRefinementRegion )updateOverride ()error {if _deda .GrAtX ==nil ||_deda .GrAtY ==nil {return _bd .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_deda .GrAtX )!=len (_deda .GrAtY ){return _bd .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_deda ._faf =make ([]bool ,len (_deda .GrAtX ));switch _deda .TemplateID {case 0:if _deda .GrAtX [0]!=-1&&_deda .GrAtY [0]!=-1{_deda ._faf [0]=true ;
_deda ._afd =true ;};if _deda .GrAtX [1]!=-1&&_deda .GrAtY [1]!=-1{_deda ._faf [1]=true ;_deda ._afd =true ;};case 1:_deda ._afd =false ;};return nil ;};func (_bdag *TextRegion )initSymbols ()error {const _edga ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
for _ ,_ebga :=range _bdag .Header .RTSegments {if _ebga ==nil {return _bc .Error (_edga ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _ebga .Type ==0{_cafe ,_edcda :=_ebga .GetSegmentData ();if _edcda !=nil {return _bc .Wrap (_edcda ,_edga ,"");};_bcge ,_afafg :=_cafe .(*SymbolDictionary );if !_afafg {return _bc .Error (_edga ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bcge ._dfbda =_bdag ._aggb ;_cdgg ,_edcda :=_bcge .GetDictionary ();if _edcda !=nil {return _bc .Wrap (_edcda ,_edga ,"");};_bdag .Symbols =append (_bdag .Symbols ,_cdgg ...);};};_bdag .NumberOfSymbols =uint32 (len (_bdag .Symbols ));return nil ;};func (_gdef *TextRegion )createRegionBitmap ()error {_gdef .RegionBitmap =_fa .New (int (_gdef .RegionInfo .BitmapWidth ),int (_gdef .RegionInfo .BitmapHeight ));
if _gdef .DefaultPixel !=0{_gdef .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_bbaf *RegionSegment )Size ()int {return 17};func (_ebff *GenericRegion )Encode (w _ab .BinaryWriter )(_dfg int ,_ddc error ){const _ada ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _ebff .Bitmap ==nil {return 0,_bc .Error (_ada ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_dadg ,_ddc :=_ebff .RegionSegment .Encode (w );if _ddc !=nil {return 0,_bc .Wrap (_ddc ,_ada ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_dfg +=_dadg ;if _ddc =w .SkipBits (4);_ddc !=nil {return _dfg ,_bc .Wrap (_ddc ,_ada ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _bcg int ;if _ebff .IsTPGDon {_bcg =1;};if _ddc =w .WriteBit (_bcg );
_ddc !=nil {return _dfg ,_bc .Wrap (_ddc ,_ada ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_bcg =0;if _ddc =w .WriteBit (int (_ebff .GBTemplate >>1)&0x01);_ddc !=nil {return _dfg ,_bc .Wrap (_ddc ,_ada ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _ddc =w .WriteBit (int (_ebff .GBTemplate )&0x01);_ddc !=nil {return _dfg ,_bc .Wrap (_ddc ,_ada ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _ebff .UseMMR {_bcg =1;};if _ddc =w .WriteBit (_bcg );
_ddc !=nil {return _dfg ,_bc .Wrap (_ddc ,_ada ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_dfg ++;if _dadg ,_ddc =_ebff .writeGBAtPixels (w );_ddc !=nil {return _dfg ,_bc .Wrap (_ddc ,_ada ,"");};_dfg +=_dadg ;_ccbg :=_bcc .New ();
if _ddc =_ccbg .EncodeBitmap (_ebff .Bitmap ,_ebff .IsTPGDon );_ddc !=nil {return _dfg ,_bc .Wrap (_ddc ,_ada ,"");};_ccbg .Final ();var _agf int64 ;if _agf ,_ddc =_ccbg .WriteTo (w );_ddc !=nil {return _dfg ,_bc .Wrap (_ddc ,_ada ,"");};_dfg +=int (_agf );
return _dfg ,nil ;};var _ templater =&template0 {};var (_cdac Segmenter ;_eadg =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _cdac },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _cdac },TProfiles :func ()Segmenter {return _cdac },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _cdac },TBitmap :func ()Segmenter {return _cdac }};
);func (_dbgg *SymbolDictionary )GetDictionary ()([]*_fa .Bitmap ,error ){_dd .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_dd .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_dd .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_dbgg ._fbag ,_dbgg ._acac );
}();if _dbgg ._fbag ==nil {var _bgcfg error ;if _dbgg .UseRefinementAggregation {_dbgg ._gggbg =_dbgg .getSbSymCodeLen ();};if !_dbgg .IsHuffmanEncoded {if _bgcfg =_dbgg .setCodingStatistics ();_bgcfg !=nil {return nil ,_bgcfg ;};};_dbgg ._acac =make ([]*_fa .Bitmap ,_dbgg .NumberOfNewSymbols );
var _edae []int ;if _dbgg .IsHuffmanEncoded &&!_dbgg .UseRefinementAggregation {_edae =make ([]int ,_dbgg .NumberOfNewSymbols );};if _bgcfg =_dbgg .setSymbolsArray ();_bgcfg !=nil {return nil ,_bgcfg ;};var _fbab ,_dge int64 ;_dbgg ._cbbe =0;for _dbgg ._cbbe < _dbgg .NumberOfNewSymbols {_dge ,_bgcfg =_dbgg .decodeHeightClassDeltaHeight ();
if _bgcfg !=nil {return nil ,_bgcfg ;};_fbab +=_dge ;var _cbgag ,_bagddb uint32 ;_cgbge :=int64 (_dbgg ._cbbe );for {var _ged int64 ;_ged ,_bgcfg =_dbgg .decodeDifferenceWidth ();if _bd .Is (_bgcfg ,_abb .ErrOOB ){break ;};if _bgcfg !=nil {return nil ,_bgcfg ;
};if _dbgg ._cbbe >=_dbgg .NumberOfNewSymbols {break ;};_cbgag +=uint32 (_ged );_bagddb +=_cbgag ;if !_dbgg .IsHuffmanEncoded ||_dbgg .UseRefinementAggregation {if !_dbgg .UseRefinementAggregation {_bgcfg =_dbgg .decodeDirectlyThroughGenericRegion (_cbgag ,uint32 (_fbab ));
if _bgcfg !=nil {return nil ,_bgcfg ;};}else {_bgcfg =_dbgg .decodeAggregate (_cbgag ,uint32 (_fbab ));if _bgcfg !=nil {return nil ,_bgcfg ;};};}else if _dbgg .IsHuffmanEncoded &&!_dbgg .UseRefinementAggregation {_edae [_dbgg ._cbbe ]=int (_cbgag );};_dbgg ._cbbe ++;
};if _dbgg .IsHuffmanEncoded &&!_dbgg .UseRefinementAggregation {var _ecfe int64 ;if _dbgg .SdHuffBMSizeSelection ==0{var _gdfb _af .Tabler ;_gdfb ,_bgcfg =_af .GetStandardTable (1);if _bgcfg !=nil {return nil ,_bgcfg ;};_ecfe ,_bgcfg =_gdfb .Decode (_dbgg ._fdfag );
if _bgcfg !=nil {return nil ,_bgcfg ;};}else {_ecfe ,_bgcfg =_dbgg .huffDecodeBmSize ();if _bgcfg !=nil {return nil ,_bgcfg ;};};_dbgg ._fdfag .Align ();var _cdcd *_fa .Bitmap ;_cdcd ,_bgcfg =_dbgg .decodeHeightClassCollectiveBitmap (_ecfe ,uint32 (_fbab ),_bagddb );
if _bgcfg !=nil {return nil ,_bgcfg ;};_bgcfg =_dbgg .decodeHeightClassBitmap (_cdcd ,_cgbge ,int (_fbab ),_edae );if _bgcfg !=nil {return nil ,_bgcfg ;};};};_bcddf ,_bgcfg :=_dbgg .getToExportFlags ();if _bgcfg !=nil {return nil ,_bgcfg ;};_dbgg .setExportedSymbols (_bcddf );
};return _dbgg ._fbag ,nil ;};func (_dcab *PageInformationSegment )readDefaultPixelValue ()error {_geb ,_dfag :=_dcab ._egcc .ReadBit ();if _dfag !=nil {return _dfag ;};_dcab .DefaultPixelValue =uint8 (_geb &0xf);return nil ;};func _ecgdb (_fgaa *_ab .Reader ,_dacd *Header )*TextRegion {_bfa :=&TextRegion {_fbea :_fgaa ,Header :_dacd ,RegionInfo :NewRegionSegment (_fgaa )};
return _bfa ;};func (_gfdda *SymbolDictionary )setRetainedCodingContexts (_fgb *SymbolDictionary ){_gfdda ._bbefg =_fgb ._bbefg ;_gfdda .IsHuffmanEncoded =_fgb .IsHuffmanEncoded ;_gfdda .UseRefinementAggregation =_fgb .UseRefinementAggregation ;_gfdda .SdTemplate =_fgb .SdTemplate ;
_gfdda .SdrTemplate =_fgb .SdrTemplate ;_gfdda .SdATX =_fgb .SdATX ;_gfdda .SdATY =_fgb .SdATY ;_gfdda .SdrATX =_fgb .SdrATX ;_gfdda .SdrATY =_fgb .SdrATY ;_gfdda ._efc =_fgb ._efc ;};func (_cdb *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_dca ,_fggc :=_cdb ._egcc .ReadBit ();
if _fggc !=nil {return _fggc ;};if _dca ==1{_cdb ._fccc =true ;};return nil ;};func (_eafgd *TextRegion )decodeStripT ()(_gbge int64 ,_bbdc error ){if _eafgd .IsHuffmanEncoded {if _eafgd .SbHuffDT ==3{if _eafgd ._beea ==nil {var _ebdd int ;if _eafgd .SbHuffFS ==3{_ebdd ++;
};if _eafgd .SbHuffDS ==3{_ebdd ++;};_eafgd ._beea ,_bbdc =_eafgd .getUserTable (_ebdd );if _bbdc !=nil {return 0,_bbdc ;};};_gbge ,_bbdc =_eafgd ._beea .Decode (_eafgd ._fbea );if _bbdc !=nil {return 0,_bbdc ;};}else {var _bcad _af .Tabler ;_bcad ,_bbdc =_af .GetStandardTable (11+int (_eafgd .SbHuffDT ));
if _bbdc !=nil {return 0,_bbdc ;};_gbge ,_bbdc =_bcad .Decode (_eafgd ._fbea );if _bbdc !=nil {return 0,_bbdc ;};};}else {var _dgge int32 ;_dgge ,_bbdc =_eafgd ._fceg .DecodeInt (_eafgd ._ebbd );if _bbdc !=nil {return 0,_bbdc ;};_gbge =int64 (_dgge );};
_gbge *=int64 (-_eafgd .SbStrips );return _gbge ,nil ;};func (_bbd *GenericRefinementRegion )getPixel (_eda *_fa .Bitmap ,_cdg ,_gccg int )int {if _cdg < 0||_cdg >=_eda .Width {return 0;};if _gccg < 0||_gccg >=_eda .Height {return 0;};if _eda .GetPixel (_cdg ,_gccg ){return 1;
};return 0;};func (_eccd *GenericRefinementRegion )parseHeader ()(_dgaf error ){_dd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_aad :=_c .Now ();defer func (){if _dgaf ==nil {_dd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_c .Since (_aad ).Nanoseconds ());
}else {_dd .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_dgaf );
};}();if _dgaf =_eccd .RegionInfo .parseHeader ();_dgaf !=nil {return _dgaf ;};_ ,_dgaf =_eccd ._aaa .ReadBits (6);if _dgaf !=nil {return _dgaf ;};_eccd .IsTPGROn ,_dgaf =_eccd ._aaa .ReadBool ();if _dgaf !=nil {return _dgaf ;};var _bag int ;_bag ,_dgaf =_eccd ._aaa .ReadBit ();
if _dgaf !=nil {return _dgaf ;};_eccd .TemplateID =int8 (_bag );switch _eccd .TemplateID {case 0:_eccd .Template =_eccd ._dg ;if _dgaf =_eccd .readAtPixels ();_dgaf !=nil {return _dgaf ;};case 1:_eccd .Template =_eccd ._ded ;};return nil ;};var _ SegmentEncoder =&RegionSegment {};
func (_eeae *PatternDictionary )readIsMMREncoded ()error {_bagdd ,_ecdb :=_eeae ._cagg .ReadBit ();if _ecdb !=nil {return _ecdb ;};if _bagdd !=0{_eeae .IsMMREncoded =true ;};return nil ;};type TextRegion struct{_fbea *_ab .Reader ;RegionInfo *RegionSegment ;
SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _fa .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;
SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_adcg int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_fa .Bitmap ;Symbols []*_fa .Bitmap ;_fceg *_bb .Decoder ;
_cbae *GenericRefinementRegion ;_ebbd *_bb .DecoderStats ;_aace *_bb .DecoderStats ;_aecf *_bb .DecoderStats ;_eefa *_bb .DecoderStats ;_fcegg *_bb .DecoderStats ;_aegg *_bb .DecoderStats ;_eaeg *_bb .DecoderStats ;_aggb *_bb .DecoderStats ;_abbd *_bb .DecoderStats ;
_cgge *_bb .DecoderStats ;_bgfa *_bb .DecoderStats ;_beca int8 ;_ggccg *_af .FixedSizeTable ;Header *Header ;_gfee _af .Tabler ;_aeff _af .Tabler ;_beea _af .Tabler ;_bbde _af .Tabler ;_febg _af .Tabler ;_geafg _af .Tabler ;_bded _af .Tabler ;_dbbd _af .Tabler ;
_bfga ,_caec map[int ]int ;_egca []int ;_gegb *_fa .Points ;_ecbe *_fa .Bitmaps ;_bffe *_aa .IntSlice ;_acad ,_cdga int ;_fafa *_fa .Boxes ;};func (_fga *PageInformationSegment )parseHeader ()(_gcgbf error ){_dd .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _afeg ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _gcgbf !=nil {_afeg +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_gcgbf .Error ();}else {_afeg +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_dd .Log .Trace (_afeg );}();if _gcgbf =_fga .readWidthAndHeight ();
_gcgbf !=nil {return _gcgbf ;};if _gcgbf =_fga .readResolution ();_gcgbf !=nil {return _gcgbf ;};_ ,_gcgbf =_fga ._egcc .ReadBit ();if _gcgbf !=nil {return _gcgbf ;};if _gcgbf =_fga .readCombinationOperatorOverrideAllowed ();_gcgbf !=nil {return _gcgbf ;
};if _gcgbf =_fga .readRequiresAuxiliaryBuffer ();_gcgbf !=nil {return _gcgbf ;};if _gcgbf =_fga .readCombinationOperator ();_gcgbf !=nil {return _gcgbf ;};if _gcgbf =_fga .readDefaultPixelValue ();_gcgbf !=nil {return _gcgbf ;};if _gcgbf =_fga .readContainsRefinement ();
_gcgbf !=nil {return _gcgbf ;};if _gcgbf =_fga .readIsLossless ();_gcgbf !=nil {return _gcgbf ;};if _gcgbf =_fga .readIsStriped ();_gcgbf !=nil {return _gcgbf ;};if _gcgbf =_fga .readMaxStripeSize ();_gcgbf !=nil {return _gcgbf ;};if _gcgbf =_fga .checkInput ();
_gcgbf !=nil {return _gcgbf ;};_dd .Log .Trace ("\u0025\u0073",_fga );return nil ;};func (_ggcc *PageInformationSegment )readIsLossless ()error {_dcbge ,_cgcfe :=_ggcc ._egcc .ReadBit ();if _cgcfe !=nil {return _cgcfe ;};if _dcbge ==1{_ggcc .IsLossless =true ;
};return nil ;};func (_ecd *HalftoneRegion )shiftAndFill (_dbg int )int {_dbg >>=8;if _dbg < 0{_dfba :=int (_d .Log (float64 (_gefg (_dbg )))/_d .Log (2));_geff :=31-_dfba ;for _ace :=1;_ace < _geff ;_ace ++{_dbg |=1<<uint (31-_ace );};};return _dbg ;};
func (_bde *GenericRefinementRegion )readAtPixels ()error {_bde .GrAtX =make ([]int8 ,2);_bde .GrAtY =make ([]int8 ,2);_cfcf ,_aec :=_bde ._aaa .ReadByte ();if _aec !=nil {return _aec ;};_bde .GrAtX [0]=int8 (_cfcf );_cfcf ,_aec =_bde ._aaa .ReadByte ();
if _aec !=nil {return _aec ;};_bde .GrAtY [0]=int8 (_cfcf );_cfcf ,_aec =_bde ._aaa .ReadByte ();if _aec !=nil {return _aec ;};_bde .GrAtX [1]=int8 (_cfcf );_cfcf ,_aec =_bde ._aaa .ReadByte ();if _aec !=nil {return _aec ;};_bde .GrAtY [1]=int8 (_cfcf );
return nil ;};func (_dfeb *SymbolDictionary )readRegionFlags ()error {var (_egea uint64 ;_dbda int ;);_ ,_cee :=_dfeb ._fdfag .ReadBits (3);if _cee !=nil {return _cee ;};_dbda ,_cee =_dfeb ._fdfag .ReadBit ();if _cee !=nil {return _cee ;};_dfeb .SdrTemplate =int8 (_dbda );
_egea ,_cee =_dfeb ._fdfag .ReadBits (2);if _cee !=nil {return _cee ;};_dfeb .SdTemplate =int8 (_egea &0xf);_dbda ,_cee =_dfeb ._fdfag .ReadBit ();if _cee !=nil {return _cee ;};if _dbda ==1{_dfeb ._caea =true ;};_dbda ,_cee =_dfeb ._fdfag .ReadBit ();if _cee !=nil {return _cee ;
};if _dbda ==1{_dfeb ._aagg =true ;};_dbda ,_cee =_dfeb ._fdfag .ReadBit ();if _cee !=nil {return _cee ;};if _dbda ==1{_dfeb .SdHuffAggInstanceSelection =true ;};_dbda ,_cee =_dfeb ._fdfag .ReadBit ();if _cee !=nil {return _cee ;};_dfeb .SdHuffBMSizeSelection =int8 (_dbda );
_egea ,_cee =_dfeb ._fdfag .ReadBits (2);if _cee !=nil {return _cee ;};_dfeb .SdHuffDecodeWidthSelection =int8 (_egea &0xf);_egea ,_cee =_dfeb ._fdfag .ReadBits (2);if _cee !=nil {return _cee ;};_dfeb .SdHuffDecodeHeightSelection =int8 (_egea &0xf);_dbda ,_cee =_dfeb ._fdfag .ReadBit ();
if _cee !=nil {return _cee ;};if _dbda ==1{_dfeb .UseRefinementAggregation =true ;};_dbda ,_cee =_dfeb ._fdfag .ReadBit ();if _cee !=nil {return _cee ;};if _dbda ==1{_dfeb .IsHuffmanEncoded =true ;};return nil ;};type RegionSegment struct{_eegb *_ab .Reader ;
BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _fa .CombinationOperator ;};func (_adbf *GenericRegion )computeSegmentDataStructure ()error {_adbf .DataOffset =_adbf ._aea .AbsolutePosition ();_adbf .DataHeaderLength =_adbf .DataOffset -_adbf .DataHeaderOffset ;
_adbf .DataLength =int64 (_adbf ._aea .AbsoluteLength ())-_adbf .DataHeaderLength ;return nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_fa .Bitmap ,error );};func (_ebbg *Header )readHeaderLength (_ggaba *_ab .Reader ,_cgde int64 ){_ebbg .HeaderLength =_ggaba .AbsolutePosition ()-_cgde ;
};func (_fda *GenericRegion )decodeSLTP ()(int ,error ){switch _fda .GBTemplate {case 0:_fda ._gga .SetIndex (0x9B25);case 1:_fda ._gga .SetIndex (0x795);case 2:_fda ._gga .SetIndex (0xE5);case 3:_fda ._gga .SetIndex (0x195);};return _fda ._cce .DecodeBit (_fda ._gga );
};func (_ebeg *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_dcac :=range _ebeg .Header .RTSegments {if _dcac .Type ==0{_effbd ,_cggg :=_dcac .GetSegmentData ();if _cggg !=nil {return _cggg ;};_dfcc ,_cdge :=_effbd .(*SymbolDictionary );if !_cdge {return _fc .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_effbd );
};_gdae ,_cggg :=_dfcc .GetDictionary ();if _cggg !=nil {return _fc .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_dcac .SegmentNumber ,_cggg .Error ());
};_ebeg ._adde =append (_ebeg ._adde ,_gdae ...);_ebeg ._bggg +=_dfcc .NumberOfExportedSymbols ;};};return nil ;};func (_ggf *GenericRegion )setParameters (_abd bool ,_cdf ,_ebb int64 ,_faac ,_dccc uint32 ){_ggf .IsMMREncoded =_abd ;_ggf .DataOffset =_cdf ;
_ggf .DataLength =_ebb ;_ggf .RegionSegment .BitmapHeight =_faac ;_ggf .RegionSegment .BitmapWidth =_dccc ;_ggf ._daga =nil ;_ggf .Bitmap =nil ;};func (_cffa *GenericRegion )overrideAtTemplate0b (_ddfd ,_bbef ,_ece ,_cbc ,_eefc ,_dcfe int )int {if _cffa .GBAtOverride [0]{_ddfd &=0xFFFD;
if _cffa .GBAtY [0]==0&&_cffa .GBAtX [0]>=-int8 (_eefc ){_ddfd |=(_cbc >>uint (int8 (_dcfe )-_cffa .GBAtX [0]&0x1))<<1;}else {_ddfd |=int (_cffa .getPixel (_bbef +int (_cffa .GBAtX [0]),_ece +int (_cffa .GBAtY [0])))<<1;};};if _cffa .GBAtOverride [1]{_ddfd &=0xDFFF;
if _cffa .GBAtY [1]==0&&_cffa .GBAtX [1]>=-int8 (_eefc ){_ddfd |=(_cbc >>uint (int8 (_dcfe )-_cffa .GBAtX [1]&0x1))<<13;}else {_ddfd |=int (_cffa .getPixel (_bbef +int (_cffa .GBAtX [1]),_ece +int (_cffa .GBAtY [1])))<<13;};};if _cffa .GBAtOverride [2]{_ddfd &=0xFDFF;
if _cffa .GBAtY [2]==0&&_cffa .GBAtX [2]>=-int8 (_eefc ){_ddfd |=(_cbc >>uint (int8 (_dcfe )-_cffa .GBAtX [2]&0x1))<<9;}else {_ddfd |=int (_cffa .getPixel (_bbef +int (_cffa .GBAtX [2]),_ece +int (_cffa .GBAtY [2])))<<9;};};if _cffa .GBAtOverride [3]{_ddfd &=0xBFFF;
if _cffa .GBAtY [3]==0&&_cffa .GBAtX [3]>=-int8 (_eefc ){_ddfd |=(_cbc >>uint (int8 (_dcfe )-_cffa .GBAtX [3]&0x1))<<14;}else {_ddfd |=int (_cffa .getPixel (_bbef +int (_cffa .GBAtX [3]),_ece +int (_cffa .GBAtY [3])))<<14;};};if _cffa .GBAtOverride [4]{_ddfd &=0xEFFF;
if _cffa .GBAtY [4]==0&&_cffa .GBAtX [4]>=-int8 (_eefc ){_ddfd |=(_cbc >>uint (int8 (_dcfe )-_cffa .GBAtX [4]&0x1))<<12;}else {_ddfd |=int (_cffa .getPixel (_bbef +int (_cffa .GBAtX [4]),_ece +int (_cffa .GBAtY [4])))<<12;};};if _cffa .GBAtOverride [5]{_ddfd &=0xFFDF;
if _cffa .GBAtY [5]==0&&_cffa .GBAtX [5]>=-int8 (_eefc ){_ddfd |=(_cbc >>uint (int8 (_dcfe )-_cffa .GBAtX [5]&0x1))<<5;}else {_ddfd |=int (_cffa .getPixel (_bbef +int (_cffa .GBAtX [5]),_ece +int (_cffa .GBAtY [5])))<<5;};};if _cffa .GBAtOverride [6]{_ddfd &=0xFFFB;
if _cffa .GBAtY [6]==0&&_cffa .GBAtX [6]>=-int8 (_eefc ){_ddfd |=(_cbc >>uint (int8 (_dcfe )-_cffa .GBAtX [6]&0x1))<<2;}else {_ddfd |=int (_cffa .getPixel (_bbef +int (_cffa .GBAtX [6]),_ece +int (_cffa .GBAtY [6])))<<2;};};if _cffa .GBAtOverride [7]{_ddfd &=0xFFF7;
if _cffa .GBAtY [7]==0&&_cffa .GBAtX [7]>=-int8 (_eefc ){_ddfd |=(_cbc >>uint (int8 (_dcfe )-_cffa .GBAtX [7]&0x1))<<3;}else {_ddfd |=int (_cffa .getPixel (_bbef +int (_cffa .GBAtX [7]),_ece +int (_cffa .GBAtY [7])))<<3;};};if _cffa .GBAtOverride [8]{_ddfd &=0xF7FF;
if _cffa .GBAtY [8]==0&&_cffa .GBAtX [8]>=-int8 (_eefc ){_ddfd |=(_cbc >>uint (int8 (_dcfe )-_cffa .GBAtX [8]&0x1))<<11;}else {_ddfd |=int (_cffa .getPixel (_bbef +int (_cffa .GBAtX [8]),_ece +int (_cffa .GBAtY [8])))<<11;};};if _cffa .GBAtOverride [9]{_ddfd &=0xFFEF;
if _cffa .GBAtY [9]==0&&_cffa .GBAtX [9]>=-int8 (_eefc ){_ddfd |=(_cbc >>uint (int8 (_dcfe )-_cffa .GBAtX [9]&0x1))<<4;}else {_ddfd |=int (_cffa .getPixel (_bbef +int (_cffa .GBAtX [9]),_ece +int (_cffa .GBAtY [9])))<<4;};};if _cffa .GBAtOverride [10]{_ddfd &=0x7FFF;
if _cffa .GBAtY [10]==0&&_cffa .GBAtX [10]>=-int8 (_eefc ){_ddfd |=(_cbc >>uint (int8 (_dcfe )-_cffa .GBAtX [10]&0x1))<<15;}else {_ddfd |=int (_cffa .getPixel (_bbef +int (_cffa .GBAtX [10]),_ece +int (_cffa .GBAtY [10])))<<15;};};if _cffa .GBAtOverride [11]{_ddfd &=0xFDFF;
if _cffa .GBAtY [11]==0&&_cffa .GBAtX [11]>=-int8 (_eefc ){_ddfd |=(_cbc >>uint (int8 (_dcfe )-_cffa .GBAtX [11]&0x1))<<10;}else {_ddfd |=int (_cffa .getPixel (_bbef +int (_cffa .GBAtX [11]),_ece +int (_cffa .GBAtY [11])))<<10;};};return _ddfd ;};