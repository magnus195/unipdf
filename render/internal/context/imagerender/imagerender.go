//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_f "errors";_df "fmt";_dd "github.com/unidoc/freetype/raster";
	_ea "github.com/magnus195/unipdf/v3/common";
	_eg "github.com/magnus195/unipdf/v3/internal/transform";
	_fg "github.com/magnus195/unipdf/v3/render/internal/context";_ce "golang.org/x/image/draw";
_bd "golang.org/x/image/font";_ceg "golang.org/x/image/math/f64";_dbf "golang.org/x/image/math/fixed";_g "image";_b "image/color";_c "image/draw";_a "math";_db "sort";_d "strings";);func NewLinearGradient (x0 ,y0 ,x1 ,y1 float64 )_fg .Gradient {_gac :=&linearGradient {_gfbb :x0 ,_acfa :y0 ,_gaac :x1 ,_cec :y1 };
return _gac ;};func _feg (_accb _dbf .Int26_6 )float64 {const _ebac ,_dagc =6,1<<6-1;if _accb >=0{return float64 (_accb >>_ebac )+float64 (_accb &_dagc )/64;};_accb =-_accb ;if _accb >=0{return -(float64 (_accb >>_ebac )+float64 (_accb &_dagc )/64);};return 0;
};func _fgag (_gcgd ,_abbf _b .Color ,_gfeg float64 )_b .Color {_ccfcb ,_aff ,_fbcga ,_dgb :=_gcgd .RGBA ();_bada ,_fadb ,_ebba ,_aedf :=_abbf .RGBA ();return _b .RGBA {_ggf (_ccfcb ,_bada ,_gfeg ),_ggf (_aff ,_fadb ,_gfeg ),_ggf (_fbcga ,_ebba ,_gfeg ),_ggf (_dgb ,_aedf ,_gfeg )};
};func (_ada *Context )DrawCircle (x ,y ,r float64 ){_ada .NewSubPath ();_ada .DrawEllipticalArc (x ,y ,r ,r ,0,2*_a .Pi );_ada .ClosePath ();};func NewRadialGradient (x0 ,y0 ,r0 ,x1 ,y1 ,r1 float64 )_fg .Gradient {_aefc :=circle {x0 ,y0 ,r0 };_ebd :=circle {x1 ,y1 ,r1 };
_abd :=circle {x1 -x0 ,y1 -y0 ,r1 -r0 };_dgad :=_feb (_abd ._aaga ,_abd ._fafd ,-_abd ._bda ,_abd ._aaga ,_abd ._fafd ,_abd ._bda );var _ggge float64 ;if _dgad !=0{_ggge =1.0/_dgad ;};_eegd :=-_aefc ._bda ;_cdcc :=&radialGradient {_fae :_aefc ,_gcg :_ebd ,_gaff :_abd ,_dfed :_dgad ,_beba :_ggge ,_fbeg :_eegd };
return _cdcc ;};func (_gd *Context )SetFillRGBA (r ,g ,b ,a float64 ){_ ,_ ,_ ,_gfa :=_gd ._gb .RGBA ();if _gfa > 0&&_gfa !=65535&&a ==1{a =float64 (_gfa )/65535;};_dbd :=_b .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_gd ._gb =_dbd ;
_gd ._gcb =_gfg (_dbd );};func _caeb (_cacca float64 )float64 {return _cacca *_a .Pi /180};func _feb (_fccc ,_ceag ,_geec ,_cdce ,_gba ,_acbd float64 )float64 {return _fccc *_cdce +_ceag *_gba +_geec *_acbd ;};func (_cff *Context )SetMask (mask *_g .Alpha )error {if mask .Bounds ().Size ()!=_cff ._ddaa .Bounds ().Size (){return _f .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");
};_cff ._dfd =mask ;return nil ;};func (_ecc *Context )Clear (){_fgc :=_g .NewUniform (_ecc ._gb );_ce .Draw (_ecc ._ddaa ,_ecc ._ddaa .Bounds (),_fgc ,_g .Point {},_ce .Src );};type linearGradient struct{_gfbb ,_acfa ,_gaac ,_cec float64 ;_eeg stops ;
};func (_fac *Context )Matrix ()_eg .Matrix {return _fac ._fdg };func _gagb (_fbbb float64 ,_abc stops )_b .Color {if _fbbb <=0.0||len (_abc )==1{return _abc [0]._afa ;};_ecg :=_abc [len (_abc )-1];if _fbbb >=_ecg ._fea {return _ecg ._afa ;};for _gcd ,_eegg :=range _abc [1:]{if _fbbb < _eegg ._fea {_fbbb =(_fbbb -_abc [_gcd ]._fea )/(_eegg ._fea -_abc [_gcd ]._fea );
return _fgag (_abc [_gcd ]._afa ,_eegg ._afa ,_fbbb );};};return _ecg ._afa ;};func (_gcag *Context )ClipPreserve (){_bfga :=_g .NewAlpha (_g .Rect (0,0,_gcag ._cb ,_gcag ._bbd ));_aed :=_dd .NewAlphaOverPainter (_bfga );_gcag .fill (_aed );if _gcag ._dfd ==nil {_gcag ._dfd =_bfga ;
}else {_fdc :=_g .NewAlpha (_g .Rect (0,0,_gcag ._cb ,_gcag ._bbd ));_ce .DrawMask (_fdc ,_fdc .Bounds (),_bfga ,_g .Point {},_gcag ._dfd ,_g .Point {},_ce .Over );_gcag ._dfd =_fdc ;};};func (_cgf *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_cgf .NewSubPath ();
_cgf .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_a .Pi );_cgf .ClosePath ();};func (_ded *Context )capper ()_dd .Capper {switch _ded ._fbg {case _fg .LineCapButt :return _dd .ButtCapper ;case _fg .LineCapRound :return _dd .RoundCapper ;case _fg .LineCapSquare :return _dd .SquareCapper ;
};return nil ;};func (_bg *Context )setFillAndStrokeColor (_bec _b .Color ){_bg ._gb =_bec ;_bg ._gcb =_gfg (_bec );_bg ._ee =_gfg (_bec );};func (_bdg *Context )SetDash (dashes ...float64 ){_bdg ._cgg =dashes };func (_aeg *Context )LineTo (x ,y float64 ){if !_aeg ._gag {_aeg .MoveTo (x ,y );
}else {x ,y =_aeg .Transform (x ,y );_ggg :=_eg .NewPoint (x ,y );_bbdf :=_gefa (_ggg );_aeg ._cgc .Add1 (_bbdf );_aeg ._ccb .Add1 (_bbdf );_aeg ._edb =_ggg ;};};func (_eeea *Context )Clip (){_eeea .ClipPreserve ();_eeea .ClearPath ()};func (_add *Context )SetRGB (r ,g ,b float64 ){_add .SetRGBA (r ,g ,b ,1)};
func (_agf *Context )SetStrokeStyle (pattern _fg .Pattern ){_agf ._ee =pattern };type surfacePattern struct{_aac _g .Image ;_bfd repeatOp ;};func _fgd (_gef *_g .RGBA ,_faef *_g .Alpha ,_accd _fg .Pattern )*patternPainter {return &patternPainter {_gef ,_faef ,_accd };
};func (_cdf *Context )FillPattern ()_fg .Pattern {return _cdf ._gcb };func (_cdcg *linearGradient )AddColorStop (offset float64 ,color _b .Color ){_cdcg ._eeg =append (_cdcg ._eeg ,stop {_fea :offset ,_afa :color });_db .Sort (_cdcg ._eeg );};func _bbf (_acd ,_cd ,_gc ,_bbfc ,_edfa ,_dda ,_dfb ,_ddc float64 )[]_eg .Point {_bac :=(_a .Hypot (_gc -_acd ,_bbfc -_cd )+_a .Hypot (_edfa -_gc ,_dda -_bbfc )+_a .Hypot (_dfb -_edfa ,_ddc -_dda ));
_aca :=int (_bac +0.5);if _aca < 4{_aca =4;};_bc :=float64 (_aca )-1;_ab :=make ([]_eg .Point ,_aca );for _eb :=0;_eb < _aca ;_eb ++{_edg :=float64 (_eb )/_bc ;_ecd ,_dabf :=_ef (_acd ,_cd ,_gc ,_bbfc ,_edfa ,_dda ,_dfb ,_ddc ,_edg );_ab [_eb ]=_eg .NewPoint (_ecd ,_dabf );
};return _ab ;};func (_cfb *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_cfb .MoveTo (x1 ,y1 );_cfb .LineTo (x2 ,y2 )};func (_ddb *Context )DrawImageAnchored (im _g .Image ,x ,y int ,ax ,ay float64 ){_afg :=im .Bounds ().Size ();x -=int (ax *float64 (_afg .X ));
y -=int (ay *float64 (_afg .Y ));_gdd :=_ce .BiLinear ;_ffd :=_ddb ._fdg .Clone ().Translate (float64 (x ),float64 (y ));_ecfc :=_ceg .Aff3 {_ffd [0],_ffd [3],_ffd [6],_ffd [1],_ffd [4],_ffd [7]};if _ddb ._dfd ==nil {_gdd .Transform (_ddb ._ddaa ,_ecfc ,im ,im .Bounds (),_ce .Over ,nil );
}else {_gdd .Transform (_ddb ._ddaa ,_ecfc ,im ,im .Bounds (),_ce .Over ,&_ce .Options {DstMask :_ddb ._dfd ,DstMaskP :_g .Point {}});};};func NewContextForImage (im _g .Image )*Context {return NewContextForRGBA (_fgg (im ))};func _gefa (_dbfb _eg .Point )_dbf .Point26_6 {return _dbf .Point26_6 {X :_ega (_dbfb .X ),Y :_ega (_dbfb .Y )}};
func (_cfd *Context )Image ()_g .Image {return _cfd ._ddaa };func (_eca *Context )drawString (_ddcb string ,_cdfc _bd .Face ,_bgaa ,_dfc float64 ){_fgfb :=&_bd .Drawer {Src :_g .NewUniform (_eca ._gb ),Face :_cdfc ,Dot :_gefa (_eg .NewPoint (_bgaa ,_dfc ))};
_cbb :=rune (-1);for _ ,_fddd :=range _ddcb {if _cbb >=0{_fgfb .Dot .X +=_fgfb .Face .Kern (_cbb ,_fddd );};_ffgf ,_aba ,_fbcg ,_dbe ,_bad :=_fgfb .Face .Glyph (_fgfb .Dot ,_fddd );if !_bad {continue ;};_efa :=_ffgf .Sub (_ffgf .Min );_ecdg :=_g .NewRGBA (_efa );
_ce .DrawMask (_ecdg ,_efa ,_fgfb .Src ,_g .Point {},_aba ,_fbcg ,_ce .Over );var _cdc *_ce .Options ;if _eca ._dfd !=nil {_cdc =&_ce .Options {DstMask :_eca ._dfd ,DstMaskP :_g .Point {}};};_fdde :=_eca ._fdg .Clone ().Translate (float64 (_ffgf .Min .X ),float64 (_ffgf .Min .Y ));
_beee :=_ceg .Aff3 {_fdde [0],_fdde [3],_fdde [6],_fdde [1],_fdde [4],_fdde [7]};_ce .BiLinear .Transform (_eca ._ddaa ,_beee ,_ecdg ,_efa ,_ce .Over ,_cdc );_fgfb .Dot .X +=_dbe ;_cbb =_fddd ;};};const (_edag repeatOp =iota ;_badb ;_eeb ;_bbg ;);func (_bgee *radialGradient )AddColorStop (offset float64 ,color _b .Color ){_bgee ._fabe =append (_bgee ._fabe ,stop {_fea :offset ,_afa :color });
_db .Sort (_bgee ._fabe );};func (_fgfe *Context )joiner ()_dd .Joiner {switch _fgfe ._ddcf {case _fg .LineJoinBevel :return _dd .BevelJoiner ;case _fg .LineJoinRound :return _dd .RoundJoiner ;};return nil ;};func (_aab *Context )AsMask ()*_g .Alpha {_afd :=_g .NewAlpha (_aab ._ddaa .Bounds ());
_ce .Draw (_afd ,_aab ._ddaa .Bounds (),_aab ._ddaa ,_g .Point {},_ce .Src );return _afd ;};func (_ebf *Context )SetRGBA (r ,g ,b ,a float64 ){_ ,_ ,_ ,_dfa :=_ebf ._gb .RGBA ();if _dfa > 0&&_dfa !=65535&&a ==1{a =float64 (_dfa )/65535;};_ebf ._gb =_b .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};
_ebf .setFillAndStrokeColor (_ebf ._gb );};func (_cacag *Context )Identity (){_cacag ._fdg =_eg .IdentityMatrix ()};func (_edaa *Context )TextState ()*_fg .TextState {return &_edaa ._abb };func _fdda (_caeg _dd .Path ,_aaag []float64 ,_ecb float64 )_dd .Path {return _faeb (_aafc (_caac (_caeg ),_aaag ,_ecb ));
};func (_fge *Context )StrokePreserve (){var _beb _dd .Painter ;if _fge ._dfd ==nil {if _ecf ,_cfgg :=_fge ._ee .(*solidPattern );_cfgg {_caca :=_dd .NewRGBAPainter (_fge ._ddaa );_caca .SetColor (_ecf ._gbf );_beb =_caca ;};};if _beb ==nil {_beb =_fgd (_fge ._ddaa ,_fge ._dfd ,_fge ._ee );
};_fge .stroke (_beb );};func (_ede *Context )SetHexColor (x string ){_acc ,_faa ,_ge ,_gda :=_dafb (x );_ede .SetRGBA255 (_acc ,_faa ,_ge ,_gda );};type radialGradient struct{_fae ,_gcg ,_gaff circle ;_dfed ,_beba float64 ;_fbeg float64 ;_fabe stops ;
};func (_eec *Context )MoveTo (x ,y float64 ){if _eec ._gag {_eec ._ccb .Add1 (_gefa (_eec ._gfe ));};x ,y =_eec .Transform (x ,y );_fdd :=_eg .NewPoint (x ,y );_dc :=_gefa (_fdd );_eec ._cgc .Start (_dc );_eec ._ccb .Start (_dc );_eec ._gfe =_fdd ;_eec ._edb =_fdd ;
_eec ._gag =true ;};func (_dae *Context )SetLineJoin (lineJoin _fg .LineJoin ){_dae ._ddcf =lineJoin };func (_ebc *Context )ClearPath (){_ebc ._cgc .Clear ();_ebc ._ccb .Clear ();_ebc ._gag =false };func (_fgcc *Context )DrawPoint (x ,y ,r float64 ){_fgcc .Push ();
_daa ,_fcda :=_fgcc .Transform (x ,y );_fgcc .Identity ();_fgcc .DrawCircle (_daa ,_fcda ,r );_fgcc .Pop ();};func (_ebe *Context )SetLineCap (lineCap _fg .LineCap ){_ebe ._fbg =lineCap };func (_dgc *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_dgc .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );
};func _dafb (_aga string )(_ebdf ,_fdff ,_egfe ,_afc int ){_aga =_d .TrimPrefix (_aga ,"\u0023");_afc =255;if len (_aga )==3{_bgc :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_df .Sscanf (_aga ,_bgc ,&_ebdf ,&_fdff ,&_egfe );_ebdf |=_ebdf <<4;_fdff |=_fdff <<4;
_egfe |=_egfe <<4;};if len (_aga )==6{_fddf :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_df .Sscanf (_aga ,_fddf ,&_ebdf ,&_fdff ,&_egfe );};if len (_aga )==8{_dfde :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";
_df .Sscanf (_aga ,_dfde ,&_ebdf ,&_fdff ,&_egfe ,&_afc );};return ;};func (_daea *Context )Scale (x ,y float64 ){_daea ._fdg =_daea ._fdg .Scale (x ,y )};func (_ccf *Context )stroke (_gcc _dd .Painter ){_gdac :=_ccf ._cgc ;if len (_ccf ._cgg )> 0{_gdac =_fdda (_gdac ,_ccf ._cgg ,_ccf ._eed );
}else {_gdac =_faeb (_caac (_gdac ));};_bacc :=_ccf ._edgb ;_bacc .UseNonZeroWinding =true ;_bacc .Clear ();_faf :=(_ccf ._fdg .ScalingFactorX ()+_ccf ._fdg .ScalingFactorY ())/2;_bacc .AddStroke (_gdac ,_ega (_ccf ._cfg *_faf ),_ccf .capper (),_ccf .joiner ());
_bacc .Rasterize (_gcc );};func (_aad *Context )Height ()int {return _aad ._bbd };func _de (_aa ,_ed ,_fb ,_ag ,_aag ,_ba ,_ga float64 )(_ca ,_cc float64 ){_cf :=1-_ga ;_dg :=_cf *_cf ;_da :=2*_cf *_ga ;_dag :=_ga *_ga ;_ca =_dg *_aa +_da *_fb +_dag *_aag ;
_cc =_dg *_ed +_da *_ag +_dag *_ba ;return ;};func (_ccc *Context )SetDashOffset (offset float64 ){_ccc ._eed =offset };func _ggf (_ddcg ,_fgce uint32 ,_efdd float64 )uint8 {return uint8 (int32 (float64 (_ddcg )*(1.0-_efdd )+float64 (_fgce )*_efdd )>>8);
};func (_bbcf *patternPainter )Paint (ss []_dd .Span ,done bool ){_ecdf :=_bbcf ._cacb .Bounds ();for _ ,_fcee :=range ss {if _fcee .Y < _ecdf .Min .Y {continue ;};if _fcee .Y >=_ecdf .Max .Y {return ;};if _fcee .X0 < _ecdf .Min .X {_fcee .X0 =_ecdf .Min .X ;
};if _fcee .X1 > _ecdf .Max .X {_fcee .X1 =_ecdf .Max .X ;};if _fcee .X0 >=_fcee .X1 {continue ;};const _dad =1<<16-1;_gcfg :=_fcee .Y -_bbcf ._cacb .Rect .Min .Y ;_daf :=_fcee .X0 -_bbcf ._cacb .Rect .Min .X ;_feeg :=(_fcee .Y -_bbcf ._cacb .Rect .Min .Y )*_bbcf ._cacb .Stride +(_fcee .X0 -_bbcf ._cacb .Rect .Min .X )*4;
_gea :=_feeg +(_fcee .X1 -_fcee .X0 )*4;for _ffad ,_egff :=_feeg ,_daf ;_ffad < _gea ;_ffad ,_egff =_ffad +4,_egff +1{_fcabd :=_fcee .Alpha ;if _bbcf ._egeb !=nil {_fcabd =_fcabd *uint32 (_bbcf ._egeb .AlphaAt (_egff ,_gcfg ).A )/255;if _fcabd ==0{continue ;
};};_bdf :=_bbcf ._bdb .ColorAt (_egff ,_gcfg );_ffdf ,_bea ,_cbf ,_cffc :=_bdf .RGBA ();_gcbg :=uint32 (_bbcf ._cacb .Pix [_ffad +0]);_ebae :=uint32 (_bbcf ._cacb .Pix [_ffad +1]);_fedb :=uint32 (_bbcf ._cacb .Pix [_ffad +2]);_dgg :=uint32 (_bbcf ._cacb .Pix [_ffad +3]);
_bfa :=(_dad -(_cffc *_fcabd /_dad ))*0x101;_bbcf ._cacb .Pix [_ffad +0]=uint8 ((_gcbg *_bfa +_ffdf *_fcabd )/_dad >>8);_bbcf ._cacb .Pix [_ffad +1]=uint8 ((_ebae *_bfa +_bea *_fcabd )/_dad >>8);_bbcf ._cacb .Pix [_ffad +2]=uint8 ((_fedb *_bfa +_cbf *_fcabd )/_dad >>8);
_bbcf ._cacb .Pix [_ffad +3]=uint8 ((_dgg *_bfa +_cffc *_fcabd )/_dad >>8);};};};func (_bge *Context )Pop (){_acad :=*_bge ;_facc :=_bge ._be ;_dbg :=_facc [len (_facc )-1];*_bge =*_dbg ;_bge ._cgc =_acad ._cgc ;_bge ._ccb =_acad ._ccb ;_bge ._gfe =_acad ._gfe ;
_bge ._edb =_acad ._edb ;_bge ._gag =_acad ._gag ;};func NewContext (width ,height int )*Context {return NewContextForRGBA (_g .NewRGBA (_g .Rect (0,0,width ,height )));};func (_dabd *Context )Width ()int {return _dabd ._cb };func (_gage *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_gage ._gag {_gage .MoveTo (x1 ,y1 );
};_fcd ,_ffa :=_gage ._edb .X ,_gage ._edb .Y ;x1 ,y1 =_gage .Transform (x1 ,y1 );x2 ,y2 =_gage .Transform (x2 ,y2 );x3 ,y3 =_gage .Transform (x3 ,y3 );_dgaf :=_bbf (_fcd ,_ffa ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_bcgf :=_gefa (_gage ._edb );for _ ,_bde :=range _dgaf [1:]{_fbgf :=_gefa (_bde );
if _fbgf ==_bcgf {continue ;};_bcgf =_fbgf ;_gage ._cgc .Add1 (_fbgf );_gage ._ccb .Add1 (_fbgf );_gage ._edb =_bde ;};};func (_efe *Context )SetPixel (x ,y int ){_efe ._ddaa .Set (x ,y ,_efe ._gb )};var (_fbf =_gfg (_b .White );_caa =_gfg (_b .Black );
);func _gfg (_bcf _b .Color )_fg .Pattern {return &solidPattern {_gbf :_bcf }};type stop struct{_fea float64 ;_afa _b .Color ;};func (_cggd *Context )DrawString (s string ,face _bd .Face ,x ,y float64 ){_cggd .DrawStringAnchored (s ,face ,x ,y ,0,0);};
func (_fee *Context )FillPreserve (){var _fddc _dd .Painter ;if _fee ._dfd ==nil {if _cfe ,_cae :=_fee ._gcb .(*solidPattern );_cae {_bddd :=_dd .NewRGBAPainter (_fee ._ddaa );_bddd .SetColor (_cfe ._gbf );_fddc =_bddd ;};};if _fddc ==nil {_fddc =_fgd (_fee ._ddaa ,_fee ._dfd ,_fee ._gcb );
};_fee .fill (_fddc );};func _ega (_dbab float64 )_dbf .Int26_6 {return _dbf .Int26_6 (_dbab *64)};func _dga (_egd ,_gf ,_fc ,_fd ,_cee ,_bdd float64 )[]_eg .Point {_agd :=(_a .Hypot (_fc -_egd ,_fd -_gf )+_a .Hypot (_cee -_fc ,_bdd -_fd ));_edf :=int (_agd +0.5);
if _edf < 4{_edf =4;};_fce :=float64 (_edf )-1;_dab :=make ([]_eg .Point ,_edf );for _bf :=0;_bf < _edf ;_bf ++{_dgf :=float64 (_bf )/_fce ;_fe ,_ac :=_de (_egd ,_gf ,_fc ,_fd ,_cee ,_bdd ,_dgf );_dab [_bf ]=_eg .NewPoint (_fe ,_ac );};return _dab ;};func (_bgb *surfacePattern )ColorAt (x ,y int )_b .Color {_dgbg :=_bgb ._aac .Bounds ();
switch _bgb ._bfd {case _badb :if y >=_dgbg .Dy (){return _b .Transparent ;};case _eeb :if x >=_dgbg .Dx (){return _b .Transparent ;};case _bbg :if x >=_dgbg .Dx ()||y >=_dgbg .Dy (){return _b .Transparent ;};};x =x %_dgbg .Dx ()+_dgbg .Min .X ;y =y %_dgbg .Dy ()+_dgbg .Min .Y ;
return _bgb ._aac .At (x ,y );};func (_ggc *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_ece ,_baed ,_dff ,_cad :=x ,x +r ,x +w -r ,x +w ;_ege ,_caf ,_fafg ,_gcf :=y ,y +r ,y +h -r ,y +h ;_ggc .NewSubPath ();_ggc .MoveTo (_baed ,_ege );_ggc .LineTo (_dff ,_ege );
_ggc .DrawArc (_dff ,_caf ,r ,_caeb (270),_caeb (360));_ggc .LineTo (_cad ,_fafg );_ggc .DrawArc (_dff ,_fafg ,r ,_caeb (0),_caeb (90));_ggc .LineTo (_baed ,_gcf );_ggc .DrawArc (_baed ,_fafg ,r ,_caeb (90),_caeb (180));_ggc .LineTo (_ece ,_caf );_ggc .DrawArc (_baed ,_caf ,r ,_caeb (180),_caeb (270));
_ggc .ClosePath ();};func (_efd *Context )ClosePath (){if _efd ._gag {_gff :=_gefa (_efd ._gfe );_efd ._cgc .Add1 (_gff );_efd ._ccb .Add1 (_gff );_efd ._edb =_efd ._gfe ;};};func (_ccd *Context )drawRegularPolygon (_dbc int ,_ebaa ,_fcc ,_dac ,_eab float64 ){_bacf :=2*_a .Pi /float64 (_dbc );
_eab -=_a .Pi /2;if _dbc %2==0{_eab +=_bacf /2;};_ccd .NewSubPath ();for _aee :=0;_aee < _dbc ;_aee ++{_gfbe :=_eab +_bacf *float64 (_aee );_ccd .LineTo (_ebaa +_dac *_a .Cos (_gfbe ),_fcc +_dac *_a .Sin (_gfbe ));};_ccd .ClosePath ();};func (_gaf *Context )Fill (){_gaf .FillPreserve ();
_gaf .ClearPath ()};func _caac (_bed _dd .Path )[][]_eg .Point {var _eef [][]_eg .Point ;var _cgfg []_eg .Point ;var _ffdg ,_faaf float64 ;for _gaca :=0;_gaca < len (_bed );{switch _bed [_gaca ]{case 0:if len (_cgfg )> 0{_eef =append (_eef ,_cgfg );_cgfg =nil ;
};_bfe :=_feg (_bed [_gaca +1]);_cfa :=_feg (_bed [_gaca +2]);_cgfg =append (_cgfg ,_eg .NewPoint (_bfe ,_cfa ));_ffdg ,_faaf =_bfe ,_cfa ;_gaca +=4;case 1:_egg :=_feg (_bed [_gaca +1]);_bff :=_feg (_bed [_gaca +2]);_cgfg =append (_cgfg ,_eg .NewPoint (_egg ,_bff ));
_ffdg ,_faaf =_egg ,_bff ;_gaca +=4;case 2:_gcdd :=_feg (_bed [_gaca +1]);_gcgb :=_feg (_bed [_gaca +2]);_fade :=_feg (_bed [_gaca +3]);_bcb :=_feg (_bed [_gaca +4]);_aaac :=_dga (_ffdg ,_faaf ,_gcdd ,_gcgb ,_fade ,_bcb );_cgfg =append (_cgfg ,_aaac ...);
_ffdg ,_faaf =_fade ,_bcb ;_gaca +=6;case 3:_bdc :=_feg (_bed [_gaca +1]);_ccgd :=_feg (_bed [_gaca +2]);_eagg :=_feg (_bed [_gaca +3]);_efgf :=_feg (_bed [_gaca +4]);_bef :=_feg (_bed [_gaca +5]);_aegf :=_feg (_bed [_gaca +6]);_fba :=_bbf (_ffdg ,_faaf ,_bdc ,_ccgd ,_eagg ,_efgf ,_bef ,_aegf );
_cgfg =append (_cgfg ,_fba ...);_ffdg ,_faaf =_bef ,_aegf ;_gaca +=8;default:_ea .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_bed );return _eef ;};};if len (_cgfg )> 0{_eef =append (_eef ,_cgfg );
};return _eef ;};func (_acf *Context )Stroke (){_acf .StrokePreserve ();_acf .ClearPath ()};func (_dfe *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_dfe ._gag {_dfe .MoveTo (x1 ,y1 );};x1 ,y1 =_dfe .Transform (x1 ,y1 );x2 ,y2 =_dfe .Transform (x2 ,y2 );
_fga :=_eg .NewPoint (x1 ,y1 );_dbdf :=_eg .NewPoint (x2 ,y2 );_eda :=_gefa (_fga );_gfac :=_gefa (_dbdf );_dfe ._cgc .Add2 (_eda ,_gfac );_dfe ._ccb .Add2 (_eda ,_gfac );_dfe ._edb =_dbdf ;};func (_fab *Context )MeasureString (s string ,face _bd .Face )(_dfba ,_eccd float64 ){_bfgf :=&_bd .Drawer {Face :face };
_ddae :=_bfgf .MeasureString (s );return float64 (_ddae >>6),_fab ._abb .Tf .Size ;};func (_dgd *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _cbg =16;for _gfed :=0;_gfed < _cbg ;_gfed ++{_ebb :=float64 (_gfed +0)/_cbg ;_cacc :=float64 (_gfed +1)/_cbg ;
_dee :=angle1 +(angle2 -angle1 )*_ebb ;_eea :=angle1 +(angle2 -angle1 )*_cacc ;_cca :=x +rx *_a .Cos (_dee );_ccfc :=y +ry *_a .Sin (_dee );_cea :=x +rx *_a .Cos ((_dee +_eea )/2);_fdf :=y +ry *_a .Sin ((_dee +_eea )/2);_fbed :=x +rx *_a .Cos (_eea );_edga :=y +ry *_a .Sin (_eea );
_fbfe :=2*_cea -_cca /2-_fbed /2;_eeab :=2*_fdf -_ccfc /2-_edga /2;if _gfed ==0{if _dgd ._gag {_dgd .LineTo (_cca ,_ccfc );}else {_dgd .MoveTo (_cca ,_ccfc );};};_dgd .QuadraticTo (_fbfe ,_eeab ,_fbed ,_edga );};};func NewContextForRGBA (im *_g .RGBA )*Context {_aaa :=im .Bounds ().Size ().X ;
_bcd :=im .Bounds ().Size ().Y ;return &Context {_cb :_aaa ,_bbd :_bcd ,_edgb :_dd .NewRasterizer (_aaa ,_bcd ),_ddaa :im ,_gb :_b .Transparent ,_gcb :_fbf ,_ee :_caa ,_cfg :1,_bcg :_fg .FillRuleWinding ,_fdg :_eg .IdentityMatrix (),_abb :_fg .NewTextState ()};
};func (_ffb stops )Less (i ,j int )bool {return _ffb [i ]._fea < _ffb [j ]._fea };func (_eee *Context )SetColor (c _b .Color ){_eee .setFillAndStrokeColor (c )};func (_ccg *Context )Transform (x ,y float64 )(_eag ,_bfb float64 ){return _ccg ._fdg .Transform (x ,y )};
type repeatOp int ;func (_ff *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_bgd :=_b .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_ff ._ee =_gfg (_bgd );};func (_fbc *Context )DrawImage (im _g .Image ,x ,y int ){_fbc .DrawImageAnchored (im ,x ,y ,0,0)};
func _aafc (_fgee [][]_eg .Point ,_bbcd []float64 ,_fdfc float64 )[][]_eg .Point {var _fead [][]_eg .Point ;if len (_bbcd )==0{return _fgee ;};if len (_bbcd )==1{_bbcd =append (_bbcd ,_bbcd [0]);};for _ ,_cgfb :=range _fgee {if len (_cgfb )< 2{continue ;
};_dbca :=_cgfb [0];_gfff :=1;_eeca :=0;_fbfa :=0.0;if _fdfc !=0{var _gbcc float64 ;for _ ,_gcbb :=range _bbcd {_gbcc +=_gcbb ;};_fdfc =_a .Mod (_fdfc ,_gbcc );if _fdfc < 0{_fdfc +=_gbcc ;};for _aedg ,_aea :=range _bbcd {_fdfc -=_aea ;if _fdfc < 0{_eeca =_aedg ;
_fbfa =_aea +_fdfc ;break ;};};};var _dcdc []_eg .Point ;_dcdc =append (_dcdc ,_dbca );for _gfff < len (_cgfb ){_abg :=_bbcd [_eeca ];_bdgb :=_cgfb [_gfff ];_aced :=_dbca .Distance (_bdgb );_acfd :=_abg -_fbfa ;if _aced > _acfd {_agfb :=_acfd /_aced ;_dbea :=_dbca .Interpolate (_bdgb ,_agfb );
_dcdc =append (_dcdc ,_dbea );if _eeca %2==0&&len (_dcdc )> 1{_fead =append (_fead ,_dcdc );};_dcdc =nil ;_dcdc =append (_dcdc ,_dbea );_fbfa =0;_dbca =_dbea ;_eeca =(_eeca +1)%len (_bbcd );}else {_dcdc =append (_dcdc ,_bdgb );_dbca =_bdgb ;_fbfa +=_aced ;
_gfff ++;};};if _eeca %2==0&&len (_dcdc )> 1{_fead =append (_fead ,_dcdc );};};return _fead ;};func (_beeb *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_beeb .Translate (x ,y );_beeb .Scale (sx ,sy );_beeb .Translate (-x ,-y );};func (_eede *linearGradient )ColorAt (x ,y int )_b .Color {if len (_eede ._eeg )==0{return _b .Transparent ;
};_aaf ,_gde :=float64 (x ),float64 (y );_age ,_egf ,_eeda ,_gbc :=_eede ._gfbb ,_eede ._acfa ,_eede ._gaac ,_eede ._cec ;_ade ,_dgcc :=_eeda -_age ,_gbc -_egf ;if _dgcc ==0&&_ade !=0{return _gagb ((_aaf -_age )/_ade ,_eede ._eeg );};if _ade ==0&&_dgcc !=0{return _gagb ((_gde -_egf )/_dgcc ,_eede ._eeg );
};_dca :=_ade *(_aaf -_age )+_dgcc *(_gde -_egf );if _dca < 0{return _eede ._eeg [0]._afa ;};_fcab :=_a .Hypot (_ade ,_dgcc );_dbda :=((_aaf -_age )*-_dgcc +(_gde -_egf )*_ade )/(_fcab *_fcab );_dfg ,_faff :=_age +_dbda *-_dgcc ,_egf +_dbda *_ade ;_bfgfe :=_a .Hypot (_aaf -_dfg ,_gde -_faff )/_fcab ;
return _gagb (_bfgfe ,_eede ._eeg );};func (_cgb *Context )LineWidth ()float64 {return _cgb ._cfg };func (_bga *Context )InvertMask (){if _bga ._dfd ==nil {_bga ._dfd =_g .NewAlpha (_bga ._ddaa .Bounds ());}else {for _bbc ,_agc :=range _bga ._dfd .Pix {_bga ._dfd .Pix [_bbc ]=255-_agc ;
};};};func _ef (_bdde ,_dec ,_fbe ,_fa ,_fca ,_ad ,_cg ,_bfg ,_eae float64 )(_ddf ,_gaa float64 ){_ec :=1-_eae ;_bb :=_ec *_ec *_ec ;_cge :=3*_ec *_ec *_eae ;_bae :=3*_ec *_eae *_eae ;_acb :=_eae *_eae *_eae ;_ddf =_bb *_bdde +_cge *_fbe +_bae *_fca +_acb *_cg ;
_gaa =_bb *_dec +_cge *_fa +_bae *_ad +_acb *_bfg ;return ;};func (_gca *Context )fill (_af _dd .Painter ){_gfb :=_gca ._ccb ;if _gca ._gag {_gfb =make (_dd .Path ,len (_gca ._ccb ));copy (_gfb ,_gca ._ccb );_gfb .Add1 (_gefa (_gca ._gfe ));};_ebg :=_gca ._edgb ;
_ebg .UseNonZeroWinding =_gca ._bcg ==_fg .FillRuleWinding ;_ebg .Clear ();_ebg .AddPath (_gfb );_ebg .Rasterize (_af );};type circle struct{_aaga ,_fafd ,_bda float64 };type solidPattern struct{_gbf _b .Color };func _faeb (_eage [][]_eg .Point )_dd .Path {var _bacg _dd .Path ;
for _ ,_cfda :=range _eage {var _gbd _dbf .Point26_6 ;for _fafdf ,_bag :=range _cfda {_eagge :=_gefa (_bag );if _fafdf ==0{_bacg .Start (_eagge );}else {_bbcdb :=_eagge .X -_gbd .X ;_caag :=_eagge .Y -_gbd .Y ;if _bbcdb < 0{_bbcdb =-_bbcdb ;};if _caag < 0{_caag =-_caag ;
};if _bbcdb +_caag > 8{_bacg .Add1 (_eagge );};};_gbd =_eagge ;};};return _bacg ;};func (_gee *Context )DrawStringAnchored (s string ,face _bd .Face ,x ,y ,ax ,ay float64 ){_fff ,_cacf :=_gee .MeasureString (s ,face );_gee .drawString (s ,face ,x -ax *_fff ,y +ay *_cacf );
};func (_gggb *solidPattern )ColorAt (x ,y int )_b .Color {return _gggb ._gbf };func (_baeg *Context )SetFillRule (fillRule _fg .FillRule ){_baeg ._bcg =fillRule };type stops []stop ;func (_fad *Context )DrawRectangle (x ,y ,w ,h float64 ){_fad .NewSubPath ();
_fad .MoveTo (x ,y );_fad .LineTo (x +w ,y );_fad .LineTo (x +w ,y +h );_fad .LineTo (x ,y +h );_fad .ClosePath ();};func _fgg (_bbcg _g .Image )*_g .RGBA {_fbgb :=_bbcg .Bounds ();_agb :=_g .NewRGBA (_fbgb );_c .Draw (_agb ,_fbgb ,_bbcg ,_fbgb .Min ,_c .Src );
return _agb ;};func (_ffde stops )Len ()int {return len (_ffde )};func (_ddd *Context )Shear (x ,y float64 ){_ddd ._fdg .Shear (x ,y )};func (_cde *Context )NewSubPath (){if _cde ._gag {_cde ._ccb .Add1 (_gefa (_cde ._gfe ));};_cde ._gag =false ;};func (_bee *Context )SetRGB255 (r ,g ,b int ){_bee .SetRGBA255 (r ,g ,b ,255)};
func (_aef *Context )Translate (x ,y float64 ){_aef ._fdg =_aef ._fdg .Translate (x ,y )};func _bgda (_fgab _g .Image ,_ccfa repeatOp )_fg .Pattern {return &surfacePattern {_aac :_fgab ,_bfd :_ccfa };};func (_ffc *radialGradient )ColorAt (x ,y int )_b .Color {if len (_ffc ._fabe )==0{return _b .Transparent ;
};_fag ,_fbcgf :=float64 (x )+0.5-_ffc ._fae ._aaga ,float64 (y )+0.5-_ffc ._fae ._fafd ;_facg :=_feb (_fag ,_fbcgf ,_ffc ._fae ._bda ,_ffc ._gaff ._aaga ,_ffc ._gaff ._fafd ,_ffc ._gaff ._bda );_efg :=_feb (_fag ,_fbcgf ,-_ffc ._fae ._bda ,_fag ,_fbcgf ,_ffc ._fae ._bda );
if _ffc ._dfed ==0{if _facg ==0{return _b .Transparent ;};_dcd :=0.5*_efg /_facg ;if _dcd *_ffc ._gaff ._bda >=_ffc ._fbeg {return _gagb (_dcd ,_ffc ._fabe );};return _b .Transparent ;};_dcf :=_feb (_facg ,_ffc ._dfed ,0,_facg ,-_efg ,0);if _dcf >=0{_gae :=_a .Sqrt (_dcf );
_cbe :=(_facg +_gae )*_ffc ._beba ;_fbb :=(_facg -_gae )*_ffc ._beba ;if _cbe *_ffc ._gaff ._bda >=_ffc ._fbeg {return _gagb (_cbe ,_ffc ._fabe );}else if _fbb *_ffc ._gaff ._bda >=_ffc ._fbeg {return _gagb (_fbb ,_ffc ._fabe );};};return _b .Transparent ;
};type Context struct{_cb int ;_bbd int ;_edgb *_dd .Rasterizer ;_ddaa *_g .RGBA ;_dfd *_g .Alpha ;_gb _b .Color ;_gcb _fg .Pattern ;_ee _fg .Pattern ;_cgc _dd .Path ;_ccb _dd .Path ;_gfe _eg .Point ;_edb _eg .Point ;_gag bool ;_cgg []float64 ;_eed float64 ;
_cfg float64 ;_fbg _fg .LineCap ;_ddcf _fg .LineJoin ;_bcg _fg .FillRule ;_fdg _eg .Matrix ;_abb _fg .TextState ;_be []*Context ;};func (_dbag *Context )RotateAbout (angle ,x ,y float64 ){_dbag .Translate (x ,y );_dbag .Rotate (angle );_dbag .Translate (-x ,-y );
};func (_aabe stops )Swap (i ,j int ){_aabe [i ],_aabe [j ]=_aabe [j ],_aabe [i ]};func (_fec *Context )SetLineWidth (lineWidth float64 ){_fec ._cfg =lineWidth };func (_adf *Context )Rotate (angle float64 ){_adf ._fdg =_adf ._fdg .Rotate (angle )};type patternPainter struct{_cacb *_g .RGBA ;
_egeb *_g .Alpha ;_bdb _fg .Pattern ;};func (_dage *Context )ResetClip (){_dage ._dfd =nil };func (_gg *Context )SetFillStyle (pattern _fg .Pattern ){if _baee ,_ecdd :=pattern .(*solidPattern );_ecdd {_gg ._gb =_baee ._gbf ;};_gg ._gcb =pattern ;};func (_ae *Context )SetRGBA255 (r ,g ,b ,a int ){_ae ._gb =_b .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};
_ae .setFillAndStrokeColor (_ae ._gb );};func (_dfda *Context )Push (){_fffc :=*_dfda ;_dfda ._be =append (_dfda ._be ,&_fffc )};func (_fed *Context )ShearAbout (sx ,sy ,x ,y float64 ){_fed .Translate (x ,y );_fed .Shear (sx ,sy );_fed .Translate (-x ,-y );
};func (_dba *Context )StrokePattern ()_fg .Pattern {return _dba ._ee };func (_dacb *Context )SetMatrix (m _eg .Matrix ){_dacb ._fdg =m };